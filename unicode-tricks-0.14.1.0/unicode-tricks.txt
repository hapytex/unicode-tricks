-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Functions to work with unicode blocks more convenient.
--   
--   A package that makes rendering of frames, blocks, subscript and
--   superscript more convenient.
@package unicode-tricks
@version 0.14.1.0


-- | Unicode considers 60 characters to be brackets: brackets are organized
--   in <i>pairs</i>: each opening bracket has a corresponding closing
--   bracket and vice versa.
--   
--   The following characters are considered brackets where the first
--   character is closed by the last character, the second by the last but
--   one, etc.:
--   
--   <pre>
--   ([{༺༼᚛⁅⁽₍⌈⌊〈❨❪❬❮❰❲❴⟅⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼⸢⸤⸦⸨〈《「『【〔〖〘〚﹙﹛﹝（［｛｟｢｣｠｝］）﹞﹜﹚〛〙〗〕】』」》〉⸩⸧⸥⸣⧽⧛⧙⦘⦖⦔⦒⦎⦐⦌⦊⦈⦆⦄⟯⟭⟫⟩⟧⟆❵❳❱❯❭❫❩〉⌋⌉₎⁾⁆᚜༽༻}])
--   </pre>
--   
--   These characters span over several code blocks.
module Data.Char.Brackets

-- | A list of 2-tuples where the first item of each tuple is the opening
--   bracket, and the second item its closing counterpart.
bracketMaps :: [(Char, Char)]

-- | The list of all brackets characters.
brackets :: [Char]

-- | A list of <a>Char</a>s that contains all opening brackets.
openBrackets :: [Char]

-- | A list of <a>Char</a>s that contains all closing brackets.
closeBrackets :: [Char]

-- | A <a>Map</a> that maps the given <i>close bracket</i> characters to
--   the corresponding <i>open bracket</i>.
toOpen :: Map Char Char

-- | A <a>Map</a> that maps the given <i>open bracket</i> characters to the
--   corresponding <i>close bracket</i>.
toClose :: Map Char Char

-- | A data type that is used to specify the <i>type</i> of bracket.
data BracketType

-- | The bracket is used to "open" a context.
Open :: BracketType

-- | The bracket is used to "close" a context.
Close :: BracketType

-- | Check if the given <a>Char</a> is a <i>bracket</i> character.
isBracket :: Char -> Bool

-- | Check the <a>BracketType</a> of the <a>Char</a> wrapped in a
--   <a>Just</a> data construct; <a>Nothing</a> if the given <a>Char</a> is
--   <i>not</i> a <i>bracket</i> character.
bracketType :: Char -> Maybe BracketType

-- | Check the <a>BracketType</a> of the <a>Char</a>. For a <a>Char</a>
--   that is <i>not</i> a <i>bracket</i> the behavior is unspecified.
bracketType' :: Char -> BracketType

-- | Check if the given <a>Char</a> is an <i>open bracket</i>.
isOpenBracket :: Char -> Bool

-- | Check if the given <a>Char</a> is a <i>close bracket</i>.
isCloseBracket :: Char -> Bool

-- | Get the bracket character that is the <i>counterpart</i> of the given
--   <i>bracket</i> character wrapped in a <a>Just</a> data constructor. If
--   the given <a>Char</a> is not a bracket, <a>Nothing</a> is returned.
getOppositeChar :: Char -> Maybe Char

-- | Get the bracket character that is the <i>counterpart</i> of the given
--   <i>bracket</i> character. If the given <a>Char</a> is not a bracket,
--   the given <a>Char</a> is returned.
getOppositeChar' :: Char -> Char
instance GHC.Show.Show Data.Char.Brackets.BracketType
instance GHC.Read.Read Data.Char.Brackets.BracketType
instance GHC.Classes.Ord Data.Char.Brackets.BracketType
instance GHC.Generics.Generic Data.Char.Brackets.BracketType
instance GHC.Classes.Eq Data.Char.Brackets.BracketType
instance GHC.Enum.Enum Data.Char.Brackets.BracketType
instance Data.Data.Data Data.Char.Brackets.BracketType
instance GHC.Enum.Bounded Data.Char.Brackets.BracketType
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Brackets.BracketType
instance Data.Hashable.Class.Hashable Data.Char.Brackets.BracketType
instance Control.DeepSeq.NFData Data.Char.Brackets.BracketType


-- | Unicode has a <a>block</a> named <i>Control Pictures</i> that
--   visualizes control characters such as NULL, SUB, LF, DEL, etc. This
--   module aims to make it more convenient to convert the control
--   characters to their visualization and vice versa. Only ASCII control
--   characters and the space are supported.
module Data.Char.Control

-- | Convert the given control <a>Char</a> to a <a>Char</a> that visualizes
--   that characters. This is sometimes done by diagonal lettering of the
--   characters denoting the control character. If the given <a>Char</a> is
--   not a control character, <a>Nothing</a> is returned.
controlPicture :: Char -> Maybe Char

-- | Convert the given control <a>Char</a> to a <a>Char</a> that visualizes
--   that character. If the given <a>Char</a> is not a control character,
--   it is unspecified what happens.
controlPicture' :: Char -> Char

-- | Convert the given <a>Text</a> to a <a>Text</a> object where the
--   control characters that have in Unicode a control picture block item.
convertToControlPictures :: Text -> Text

-- | Convert the given visualization of a control <a>Char</a> to that
--   control <a>Char</a> wrapped in a <a>Just</a>. If the given <a>Char</a>
--   is not a visualization of a control character, <a>Nothing</a> is
--   returned.
fromControlPicture :: Char -> Maybe Char

-- | Convert the given visualization of a control <a>Char</a> to that
--   control <a>Char</a>. If the given <a>Char</a> is not a visualization
--   of a control character, it is unspecified what happens.
fromControlPicture' :: Char -> Char

-- | Check if the given <a>Char</a> is a control character in the ASCII
--   range.
isAsciiControl :: Char -> Bool

-- | Selects control characters, which are the non-printing characters of
--   the Latin-1 subset of Unicode.
isControl :: Char -> Bool

-- | Check if for the given <a>Char</a> there is a visualization.
hasControlVisualization :: Char -> Bool

-- | Another symbol used to denote a <i>space</i> that works with
--   <tt>␢</tt>. The <a>controlPicture</a> function uses <tt>␠</tt>.
blankSymbol :: Char

-- | Another symbol used to denote a <i>space</i> that works with
--   <tt>␣</tt>. The <a>controlPicture</a> function uses <tt>␠</tt>.
openBox :: Char

-- | Another symbol used to denote a <i>new line</i> that works with
--   <tt>␤</tt>. The control picture function uses <tt>␊</tt>.
newLine :: Char

-- | Another symbol used to denote a <i>delete</i> character that works
--   with <tt>␥</tt>. The control picture function uses <tt>␡</tt>.
alternativeDelete :: Char

-- | Another symbol used to denote a <i>substitute</i> character that works
--   with <tt>␦</tt>. The control picture function uses <tt>␚</tt>.
alternativeSubstitute :: Char


-- | This module defines data structures that are used in other modules,
--   for example to rotate the characters.
module Data.Char.Core

-- | The possible orientations of a unicode character, these can be
--   <i>horizontal</i>, or <i>vertical</i>.
data Orientation

-- | <i>Horizontal</i> orientation.
Horizontal :: Orientation

-- | <i>Vertical</i> orientation.
Vertical :: Orientation

-- | Possible rotations of a unicode character if that character can be
--   rotated over 0, 90, 180, and 270 degrees.
data Rotate90

-- | No rotation.
R0 :: Rotate90

-- | Rotation over <i>90</i> degrees.
R90 :: Rotate90

-- | Rotation over <i>180</i> degrees.
R180 :: Rotate90

-- | Rotation over <i>270</i> degrees.
R270 :: Rotate90

-- | A data type that specifies that an item has been given an orientation.
data Oriented a
Oriented :: a -> Orientation -> Oriented a

-- | The object that is oriented.
[oobject] :: Oriented a -> a

-- | The oriented of the oriented object.
[orientation] :: Oriented a -> Orientation

-- | A data type that specifies that an item has been given a rotation.
data Rotated a
Rotated :: a -> Rotate90 -> Rotated a

-- | The object that is rotated.
[robject] :: Rotated a -> a

-- | The rotation of the rotated object.
[rotation] :: Rotated a -> Rotate90

-- | Specify whether we write a value in <a>UpperCase</a> or
--   <a>LowerCase</a>. The <a>Default</a> is <a>UpperCase</a>, since for
--   example often Roman numerals are written in <i>upper case</i>.
data LetterCase

-- | The <i>upper case</i> formatting.
UpperCase :: LetterCase

-- | The <i>lower case</i> formatting.
LowerCase :: LetterCase

-- | Pick one of the two values based on the <a>LetterCase</a> value.
splitLetterCase :: a -> a -> LetterCase -> a

-- | Specify if one should ligate, or not. When litigation is done
--   characters that are normally written in two (or more) characters are
--   combined in one character. For example <tt>Ⅲ</tt> instead of
--   <tt>ⅠⅠⅠ</tt>.
data Ligate

-- | A ligate operation is performed on the characters, the <a>def</a> for
--   't:Ligate'.
Ligate :: Ligate

-- | No ligate operation is performed on the charaters.
NoLigate :: Ligate

-- | Pick one of the two values based on the value for 't:Ligate'.
splitLigate :: a -> a -> Ligate -> a

-- | Specify if the given ligate function should be performed on the input,
--   if 'v:Ligate' is passed, and the <i>identity</i> function otherwise.
ligate :: (a -> a) -> Ligate -> a -> a

-- | Specify if the given ligate function is performed over the functor
--   object if 'v:Ligate' is passed, and the <i>identity</i> function
--   otherwise.
ligateF :: Functor f => (a -> a) -> Ligate -> f a -> f a

-- | A data type that lists the possible emphasis of a font. This can be
--   <a>Bold</a> or <a>NoBold</a> the <a>Default</a> is <a>NoBold</a>.
data Emphasis

-- | The characters are not stressed with boldface.
NoBold :: Emphasis

-- | The characters are stressed in boldface.
Bold :: Emphasis

-- | Pick one of the two values based on the 't:Emphasis' value.
splitEmphasis :: a -> a -> Emphasis -> a

-- | A data type that can be used to specify if an <i>italic</i> character
--   is used. The <a>Default</a> is <a>NoItalic</a>.
data ItalicType

-- | No italic characters are used.
NoItalic :: ItalicType

-- | Italic characters are used.
Italic :: ItalicType

-- | Pick one of the two values based on the 't:ItalicType' value.
splitItalicType :: a -> a -> ItalicType -> a

-- | A data type that specifies if the font is with <i>serifs</i> or not.
--   The 'Defaul;t' is <a>Serif</a>.
data FontStyle

-- | The character is a character rendered <i>without</i> serifs.
SansSerif :: FontStyle

-- | The character is a character rendered <i>with</i> serifs.
Serif :: FontStyle

-- | Pick one of the two values based on the 't:FontStyle' value.
splitFontStyle :: a -> a -> FontStyle -> a

-- | Checks if a character is an <i>alphabetic</i> or <i>numerical</i>
--   character in ASCII. The characters
--   <tt>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz</tt>
--   satisfy this predicate.
isAsciiAlphaNum :: Char -> Bool

-- | Checks if a charcter is an <i>alphabetic</i> character in ASCII. The
--   characters
--   <tt><a>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz</a></tt>
--   satisfy this predicate.
isAsciiAlpha :: Char -> Bool

-- | Checks if a character is a basic <i>greek alphabetic</i> character or
--   a Greek-like symbol. The characters
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>
--   satisfy this predicate.
isGreek :: Char -> Bool

-- | Check if the given character is a character according to the Unicode
--   specifications. Codepoints that are not a character are denoted in the
--   Unicode documentation with <tt>&lt;not a character&gt;</tt>.
isACharacter :: Char -> Bool

-- | Check if the given character is not a character according to the
--   Unicode specifications. The Unicode documentation denotes these with
--   <tt>&lt;not a character&gt;</tt>.
isNotACharacter :: Char -> Bool

-- | Check if the given character is a <i>reserved character</i>. This is
--   denoted in the Unicode documentation with <tt>&lt;reserved&gt;</tt>.
isReserved :: Char -> Bool

-- | Check if the given character is not a <i>reserved character</i>. This
--   is denoted in the Unicode documentation with
--   <tt>&lt;reserved&gt;</tt>.
isNotReserved :: Char -> Bool

-- | Map the given object with a type that is an instance of <a>Enum</a> to
--   a <a>Char</a>acter with a given offset for the <a>Char</a>acter value.
mapFromEnum :: Enum a => Int -> a -> Char

-- | Map the given <a>Char</a> object to an object with a type that is an
--   instance of <a>Enum</a> with a given offset for the <a>Char</a>acter
--   range.
mapToEnum :: Enum a => Int -> Char -> a

-- | Map the given <a>Char</a> object to an object with a type that is an
--   instance of <a>Enum</a>. It first checks if the mapping results in a
--   value between the <a>fromEnum</a> values for <a>minBound</a> and
--   <a>maxBound</a>.
mapToEnumSafe :: forall a. (Bounded a, Enum a) => Int -> Char -> Maybe a

-- | Construct a function that maps digits to the character with the given
--   value for the offset.
liftNumberFrom :: Int -> Int -> Int -> Int -> Maybe Char

-- | Construct a function that maps digits to the character with the given
--   value for the offset.
liftNumberFrom' :: Int -> Int -> Int -> Char

-- | Construct a function that maps digits to the character with the given
--   value for <tt>0</tt>.
liftNumber :: Int -> Int -> Int -> Maybe Char

-- | Construct a function that maps digits to characters with the given
--   value for <tt>0</tt>.
liftNumber' :: Int -> Int -> Char

-- | Construct a function that maps digits to the character with the given
--   value for <tt>0</tt>.
liftDigit :: Int -> Int -> Maybe Char

-- | Construct a function that maps digits to characters with the given
--   value for <tt>0</tt>.
liftDigit' :: Int -> Int -> Char

-- | Construct a function that maps upper case alphabetic characters with
--   the given value for <tt>A</tt>.
liftUppercase :: Int -> Char -> Maybe Char

-- | Construct a function that maps upper case alphabetic characters with
--   the given value for <tt>A</tt>.
liftUppercase' :: Int -> Char -> Char

-- | Construct a function that maps lower case alphabetic characters with
--   the given value for <tt>a</tt>.
liftLowercase :: Int -> Char -> Maybe Char

-- | Construct a function that maps lower case alphabetic characters with
--   the given value for <tt>a</tt>.
liftLowercase' :: Int -> Char -> Char

-- | Construct a function that maps lower case alphabetic characters with
--   the given values for <tt>A</tt> and <tt>a</tt>.
liftUpperLowercase :: Int -> Int -> Char -> Maybe Char

-- | Construct a function that maps lower case alphabetic characters with
--   the given values for <tt>A</tt> and <tt>a</tt>.
liftUpperLowercase' :: Int -> Int -> Char -> Char

-- | A class from which objects can be derived that map to and from a
--   <i>single</i> unicode character.
class UnicodeCharacter a

-- | Convert the given object to a Unicode <a>Char</a>acter.
toUnicodeChar :: UnicodeCharacter a => a -> Char

-- | Convert the given <a>Char</a>acter to an object wrapped in a
--   <a>Just</a> data constructor if that exists; <a>Nothing</a> otherwise.
fromUnicodeChar :: UnicodeCharacter a => Char -> Maybe a

-- | Convert the given <a>Char</a>acter to an object. If the
--   <a>Char</a>acter does not map on an element, the behavior is
--   <i>unspecified</i>, it can for example result in an error.
fromUnicodeChar' :: UnicodeCharacter a => Char -> a

-- | Check if the given <a>Char</a>acter maps on an item of <tt>a</tt>.
isInCharRange :: UnicodeCharacter a => Char -> Bool

-- | An alias of the <a>UnicodeCharacter</a> type class.
type UnicodeChar = UnicodeCharacter

-- | A class from which boejcts can be derived that map to and from a
--   <i>sequence</i> of unicode characters.
class UnicodeText a

-- | Convert the given object to a <a>Text</a> object.
toUnicodeText :: UnicodeText a => a -> Text

-- | Convert the given object to a <a>Text</a> object.
toUnicodeText :: (UnicodeText a, UnicodeCharacter a) => a -> Text

-- | Convert the given <a>Text</a> to an object wrapped in a <a>Just</a>
--   data constructor if that exists; <a>Nothing</a> otherwise.
fromUnicodeText :: UnicodeText a => Text -> Maybe a

-- | Convert the given <a>Text</a> to an object wrapped in a <a>Just</a>
--   data constructor if that exists; <a>Nothing</a> otherwise.
fromUnicodeText :: (UnicodeText a, UnicodeCharacter a) => Text -> Maybe a

-- | Convert the given <a>Text</a> to an object. If the <a>Text</a> does
--   not map on an element, the behavior is <i>unspecified</i>, it can for
--   example result in an error.
fromUnicodeText' :: UnicodeText a => Text -> a

-- | Determine if the given <a>Text</a> value maps on a value of type
--   <tt>a</tt>.
isInTextRange :: UnicodeText a => Text -> Bool

-- | Convert a given <a>isInCharRange</a> check into a <a>isInTextRange</a>
--   check.
generateIsInTextRange :: (Char -> Bool) -> Text -> Bool

-- | Generate an <a>isInTextRange</a> check with the <a>isInCharRange</a>
--   check for the instance of <a>UnicodeCharacter</a> of that type.
generateIsInTextRange' :: forall a. UnicodeCharacter a => Text -> Bool

-- | A type class that specifies that the items can be mirrored in the
--   <i>horizontal</i> direction (such that up is now down). The mirror is
--   <i>not</i> per se <i>pixel perfect</i>. For example the mirror of 🂁 is
--   🁵, so the dots of the bottom pat of the domino are not mirrored
--   correctly.
class MirrorHorizontal a

-- | Obtain the <i>horizontally</i> mirrored variant of the given item.
--   Applying the same function twice should return the original object.
mirrorHorizontal :: MirrorHorizontal a => a -> a

-- | A type class that specifies that the items can be mirrored in the
--   <i>vertical</i> direction (such that left is now right). The mirror is
--   <i>not</i> per se pixel perfect. For example the vertical mirror of 🁏
--   is 🁃, so the dots of the right part of the domino are not mirrored
--   correctly.
class MirrorVertical a

-- | Obtain the <i>vertically</i> mirrored variant of the given item.
--   Applying the same function twice should return the original object.
mirrorVertical :: MirrorVertical a => a -> a

-- | Specify whether we write a positive number <i>with</i> or
--   <i>without</i> a plus sign. the <a>Default</a> is <a>WithoutPlus</a>.
data PlusStyle

-- | Write positive numbers <i>without</i> using a plus sign.
WithoutPlus :: PlusStyle

-- | Write positive numbers <i>with</i> a plus sign.
WithPlus :: PlusStyle

-- | Pick one of the two values based on the 't:PlusStyle' value.
splitPlusStyle :: a -> a -> PlusStyle -> a

-- | Calculate for a given plus and minus sign a <a>Text</a> object for the
--   given number in the given <a>PlusStyle</a>.
withSign :: Integral i => (i -> Text) -> Char -> Char -> PlusStyle -> i -> Text

-- | A function to make it more convenient to implement a <i>sign-value
--   system</i>. This is done for a given <i>radix</i> a function that maps
--   the given value and the given weight to a <a>Text</a> object, a
--   <a>Text</a> object for <i>zero</i> (since in some systems that is
--   different), and characters for <i>plus</i> and <i>minus</i>. The
--   function then will for a given <a>PlusStyle</a> convert the number to
--   a sequence of characters with respect to how the <i>sign-value
--   system</i> is implemented.
signValueSystem :: Integral i => i -> (Int -> Int -> Text) -> Text -> Char -> Char -> PlusStyle -> i -> Text

-- | A function to make it more convenient to implement a /positional
--   number system<i>. This is done for a given </i>radix/ a given
--   conversion funtion that maps a value to a <a>Char</a>, and a
--   <a>Char</a> for <i>plus</i> and <i>minus</i>. The function then
--   construct a <a>Text</a> object for a given <a>PlusStyle</a> and a
--   given number.
positionalNumberSystem :: Integral i => i -> (Int -> Char) -> Char -> Char -> PlusStyle -> i -> Text

-- | A function to make it more convenient to implement a /positional
--   number system<i> with </i>radix/ 10.
positionalNumberSystem10 :: Integral i => (Int -> Char) -> Char -> Char -> PlusStyle -> i -> Text

-- | The <a>toEnum</a> method restricted to the type <a>Char</a>.
chr :: Int -> Char

-- | Selects alphabetic Unicode characters (lower-case, upper-case and
--   title-case letters, plus letters of caseless scripts and modifiers
--   letters). This function is equivalent to <a>isLetter</a>.
isAlpha :: Char -> Bool

-- | Selects alphabetic or numeric Unicode characters.
--   
--   Note that numeric digits outside the ASCII range, as well as numeric
--   characters which aren't digits, are selected by this function but not
--   by <a>isDigit</a>. Such characters may be part of identifiers but are
--   not used by the printer and reader to represent numbers.
isAlphaNum :: Char -> Bool

-- | Selects the first 128 characters of the Unicode character set,
--   corresponding to the ASCII character set.
isAscii :: Char -> Bool

-- | The <a>fromEnum</a> method restricted to the type <a>Char</a>.
ord :: Char -> Int
instance GHC.Show.Show Data.Char.Core.LetterCase
instance GHC.Read.Read Data.Char.Core.LetterCase
instance GHC.Classes.Ord Data.Char.Core.LetterCase
instance GHC.Generics.Generic Data.Char.Core.LetterCase
instance GHC.Classes.Eq Data.Char.Core.LetterCase
instance GHC.Enum.Enum Data.Char.Core.LetterCase
instance Data.Data.Data Data.Char.Core.LetterCase
instance GHC.Enum.Bounded Data.Char.Core.LetterCase
instance GHC.Show.Show Data.Char.Core.PlusStyle
instance GHC.Read.Read Data.Char.Core.PlusStyle
instance GHC.Classes.Ord Data.Char.Core.PlusStyle
instance GHC.Generics.Generic Data.Char.Core.PlusStyle
instance GHC.Classes.Eq Data.Char.Core.PlusStyle
instance GHC.Enum.Enum Data.Char.Core.PlusStyle
instance Data.Data.Data Data.Char.Core.PlusStyle
instance GHC.Enum.Bounded Data.Char.Core.PlusStyle
instance GHC.Show.Show Data.Char.Core.Orientation
instance GHC.Read.Read Data.Char.Core.Orientation
instance GHC.Classes.Ord Data.Char.Core.Orientation
instance GHC.Generics.Generic Data.Char.Core.Orientation
instance GHC.Classes.Eq Data.Char.Core.Orientation
instance GHC.Enum.Enum Data.Char.Core.Orientation
instance Data.Data.Data Data.Char.Core.Orientation
instance GHC.Enum.Bounded Data.Char.Core.Orientation
instance Data.Traversable.Traversable Data.Char.Core.Oriented
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Core.Oriented a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Core.Oriented a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Core.Oriented a)
instance GHC.Generics.Generic1 Data.Char.Core.Oriented
instance GHC.Generics.Generic (Data.Char.Core.Oriented a)
instance GHC.Base.Functor Data.Char.Core.Oriented
instance Data.Foldable.Foldable Data.Char.Core.Oriented
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Core.Oriented a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Core.Oriented a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Core.Oriented a)
instance GHC.Show.Show Data.Char.Core.Rotate90
instance GHC.Read.Read Data.Char.Core.Rotate90
instance GHC.Classes.Ord Data.Char.Core.Rotate90
instance GHC.Generics.Generic Data.Char.Core.Rotate90
instance GHC.Classes.Eq Data.Char.Core.Rotate90
instance GHC.Enum.Enum Data.Char.Core.Rotate90
instance Data.Data.Data Data.Char.Core.Rotate90
instance GHC.Enum.Bounded Data.Char.Core.Rotate90
instance Data.Traversable.Traversable Data.Char.Core.Rotated
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Core.Rotated a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Core.Rotated a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Core.Rotated a)
instance GHC.Generics.Generic1 Data.Char.Core.Rotated
instance GHC.Generics.Generic (Data.Char.Core.Rotated a)
instance GHC.Base.Functor Data.Char.Core.Rotated
instance Data.Foldable.Foldable Data.Char.Core.Rotated
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Core.Rotated a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Core.Rotated a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Core.Rotated a)
instance GHC.Show.Show Data.Char.Core.Emphasis
instance GHC.Read.Read Data.Char.Core.Emphasis
instance GHC.Classes.Ord Data.Char.Core.Emphasis
instance GHC.Generics.Generic Data.Char.Core.Emphasis
instance GHC.Classes.Eq Data.Char.Core.Emphasis
instance GHC.Enum.Enum Data.Char.Core.Emphasis
instance Data.Data.Data Data.Char.Core.Emphasis
instance GHC.Enum.Bounded Data.Char.Core.Emphasis
instance GHC.Show.Show Data.Char.Core.ItalicType
instance GHC.Read.Read Data.Char.Core.ItalicType
instance GHC.Classes.Ord Data.Char.Core.ItalicType
instance GHC.Generics.Generic Data.Char.Core.ItalicType
instance GHC.Classes.Eq Data.Char.Core.ItalicType
instance GHC.Enum.Enum Data.Char.Core.ItalicType
instance Data.Data.Data Data.Char.Core.ItalicType
instance GHC.Enum.Bounded Data.Char.Core.ItalicType
instance GHC.Show.Show Data.Char.Core.FontStyle
instance GHC.Read.Read Data.Char.Core.FontStyle
instance GHC.Classes.Ord Data.Char.Core.FontStyle
instance GHC.Generics.Generic Data.Char.Core.FontStyle
instance GHC.Classes.Eq Data.Char.Core.FontStyle
instance GHC.Enum.Enum Data.Char.Core.FontStyle
instance Data.Data.Data Data.Char.Core.FontStyle
instance GHC.Enum.Bounded Data.Char.Core.FontStyle
instance GHC.Show.Show Data.Char.Core.Ligate
instance GHC.Read.Read Data.Char.Core.Ligate
instance GHC.Classes.Ord Data.Char.Core.Ligate
instance GHC.Generics.Generic Data.Char.Core.Ligate
instance GHC.Classes.Eq Data.Char.Core.Ligate
instance GHC.Enum.Enum Data.Char.Core.Ligate
instance Data.Data.Data Data.Char.Core.Ligate
instance GHC.Enum.Bounded Data.Char.Core.Ligate
instance Data.Char.Core.UnicodeText [GHC.Types.Char]
instance Data.Char.Core.UnicodeText GHC.Types.Char
instance Data.Char.Core.UnicodeText Data.Text.Internal.Text
instance Data.Char.Core.UnicodeCharacter GHC.Types.Char
instance Data.Hashable.Class.Hashable Data.Char.Core.Ligate
instance Control.DeepSeq.NFData Data.Char.Core.Ligate
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.Ligate
instance Data.Default.Class.Default Data.Char.Core.Ligate
instance Data.Hashable.Class.Hashable Data.Char.Core.FontStyle
instance Control.DeepSeq.NFData Data.Char.Core.FontStyle
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.FontStyle
instance Data.Default.Class.Default Data.Char.Core.FontStyle
instance Data.Hashable.Class.Hashable Data.Char.Core.ItalicType
instance Control.DeepSeq.NFData Data.Char.Core.ItalicType
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.ItalicType
instance Data.Default.Class.Default Data.Char.Core.ItalicType
instance Data.Hashable.Class.Hashable Data.Char.Core.Emphasis
instance Control.DeepSeq.NFData Data.Char.Core.Emphasis
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.Emphasis
instance Data.Default.Class.Default Data.Char.Core.Emphasis
instance Data.Functor.Classes.Eq1 Data.Char.Core.Rotated
instance Data.Hashable.Class.Hashable1 Data.Char.Core.Rotated
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Core.Rotated a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Core.Rotated a)
instance Control.DeepSeq.NFData1 Data.Char.Core.Rotated
instance Data.Functor.Classes.Ord1 Data.Char.Core.Rotated
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Core.Rotated a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Core.Rotated
instance Data.Hashable.Class.Hashable Data.Char.Core.Rotate90
instance Control.DeepSeq.NFData Data.Char.Core.Rotate90
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.Rotate90
instance Data.Functor.Classes.Eq1 Data.Char.Core.Oriented
instance Data.Hashable.Class.Hashable1 Data.Char.Core.Oriented
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Core.Oriented a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Core.Oriented a)
instance Control.DeepSeq.NFData1 Data.Char.Core.Oriented
instance Data.Functor.Classes.Ord1 Data.Char.Core.Oriented
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Core.Oriented a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Core.Oriented
instance Data.Hashable.Class.Hashable Data.Char.Core.Orientation
instance Control.DeepSeq.NFData Data.Char.Core.Orientation
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.Orientation
instance Data.Hashable.Class.Hashable Data.Char.Core.PlusStyle
instance Control.DeepSeq.NFData Data.Char.Core.PlusStyle
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.PlusStyle
instance Data.Default.Class.Default Data.Char.Core.PlusStyle
instance Data.Hashable.Class.Hashable Data.Char.Core.LetterCase
instance Control.DeepSeq.NFData Data.Char.Core.LetterCase
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Core.LetterCase
instance Data.Default.Class.Default Data.Char.Core.LetterCase


-- | In Unicode a total of 839 codepoints are defined as <i>combining</i>
--   characters. These characters are put after another character, to
--   manipulate the previous one. For example by putting a <i>grave
--   accent</i> on an <tt>a</tt>.
--   
--   This module aims to make it more convenient to work with combining
--   characters. It provides functions to map the
--   <a>CombiningCharacter</a>s to <a>Char</a>s and vice versa. It
--   furthermore defines an operator <a>(*^)</a> that can be used to apply
--   one, or multiple <a>CombiningCharacter</a>s to a given character. We
--   use a typeclass for this to allow working with different types. This
--   allows "stacking" combining characters like:
--   
--   <pre>
--   'a' *^ CombiningGraveAccent *^ CombiningPlusSignBelow
--   </pre>
--   
--   This will first combine <a>CombiningGraveAccent</a> on the <tt>a</tt>
--   character and then <a>CombiningPlusSignBelow</a>, the result is a
--   string <tt>"a\768\799"</tt>.
--   
--   The module contains a set of pattern synonyms to make working with the
--   <a>CombiningCharacter</a>s less verbose.
module Data.Char.Combining

-- | The list of possible combining characters. In the documentation of the
--   combining characters, the characters are demonstrated on the
--   <i>bullet</i> symbol (•).
data CombiningCharacter

-- | The combining character <tt>COMBINING GRAVE ACCENT</tt> from the
--   Unicode standard, defined by <tt>'\x0300'</tt> (•̀).
CombiningGraveAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING ACUTE ACCENT</tt> from the
--   Unicode standard, defined by <tt>'\x0301'</tt> (•́).
CombiningAcuteAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING CIRCUMFLEX ACCENT</tt> from the
--   Unicode standard, defined by <tt>'\x0302'</tt> (•̂).
CombiningCircumflexAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING TILDE</tt> from the Unicode
--   standard, defined by <tt>'\x0303'</tt> (•̃).
CombiningTilde :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON</tt> from the Unicode
--   standard, defined by <tt>'\x0304'</tt> (•̄).
CombiningMacron :: CombiningCharacter

-- | The combining character <tt>COMBINING OVERLINE</tt> from the Unicode
--   standard, defined by <tt>'\x0305'</tt> (•̅).
CombiningOverline :: CombiningCharacter

-- | The combining character <tt>COMBINING BREVE</tt> from the Unicode
--   standard, defined by <tt>'\x0306'</tt> (•̆).
CombiningBreve :: CombiningCharacter

-- | The combining character <tt>COMBINING DOT ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x0307'</tt> (•̇).
CombiningDotAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DIAERESIS</tt> from the Unicode
--   standard, defined by <tt>'\x0308'</tt> (•̈).
CombiningDiaeresis :: CombiningCharacter

-- | The combining character <tt>COMBINING HOOK ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x0309'</tt> (•̉).
CombiningHookAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING RING ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x030a'</tt> (•̊).
CombiningRingAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE ACUTE ACCENT</tt> from
--   the Unicode standard, defined by <tt>'\x030b'</tt> (•̋).
CombiningDoubleAcuteAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING CARON</tt> from the Unicode
--   standard, defined by <tt>'\x030c'</tt> (•̌).
CombiningCaron :: CombiningCharacter

-- | The combining character <tt>COMBINING VERTICAL LINE ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x030d'</tt> (•̍).
CombiningVerticalLineAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE VERTICAL LINE ABOVE</tt>
--   from the Unicode standard, defined by <tt>'\x030e'</tt> (•̎).
CombiningDoubleVerticalLineAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE GRAVE ACCENT</tt> from
--   the Unicode standard, defined by <tt>'\x030f'</tt> (•̏).
CombiningDoubleGraveAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING CANDRABINDU</tt> from the
--   Unicode standard, defined by <tt>'\x0310'</tt> (•̐).
CombiningCandrabindu :: CombiningCharacter

-- | The combining character <tt>COMBINING INVERTED BREVE</tt> from the
--   Unicode standard, defined by <tt>'\x0311'</tt> (•̑).
CombiningInvertedBreve :: CombiningCharacter

-- | The combining character <tt>COMBINING TURNED COMMA ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x0312'</tt> (•̒).
CombiningTurnedCommaAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING COMMA ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x0313'</tt> (•̓).
CombiningCommaAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING REVERSED COMMA ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x0314'</tt> (•̔).
CombiningReversedCommaAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING COMMA ABOVE RIGHT</tt> from the
--   Unicode standard, defined by <tt>'\x0315'</tt> (•̕).
CombiningCommaAboveRight :: CombiningCharacter

-- | The combining character <tt>COMBINING GRAVE ACCENT BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0316'</tt> (•̖).
CombiningGraveAccentBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING ACUTE ACCENT BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0317'</tt> (•̗).
CombiningAcuteAccentBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT TACK BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0318'</tt> (•̘).
CombiningLeftTackBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT TACK BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0319'</tt> (•̙).
CombiningRightTackBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT ANGLE ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x031a'</tt> (•̚).
CombiningLeftAngleAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING HORN</tt> from the Unicode
--   standard, defined by <tt>'\x031b'</tt> (•̛).
CombiningHorn :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT HALF RING BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x031c'</tt> (•̜).
CombiningLeftHalfRingBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING UP TACK BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x031d'</tt> (•̝).
CombiningUpTackBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DOWN TACK BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x031e'</tt> (•̞).
CombiningDownTackBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING PLUS SIGN BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x031f'</tt> (•̟).
CombiningPlusSignBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING MINUS SIGN BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0320'</tt> (•̠).
CombiningMinusSignBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING PALATALIZED HOOK BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x0321'</tt> (•̡).
CombiningPalatalizedHookBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RETROFLEX HOOK BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x0322'</tt> (•̢).
CombiningRetroflexHookBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DOT BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x0323'</tt> (•̣).
CombiningDotBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DIAERESIS BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0324'</tt> (•̤).
CombiningDiaeresisBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RING BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x0325'</tt> (•̥).
CombiningRingBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING COMMA BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0326'</tt> (•̦).
CombiningCommaBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING CEDILLA</tt> from the Unicode
--   standard, defined by <tt>'\x0327'</tt> (•̧).
CombiningCedilla :: CombiningCharacter

-- | The combining character <tt>COMBINING OGONEK</tt> from the Unicode
--   standard, defined by <tt>'\x0328'</tt> (•̨).
CombiningOgonek :: CombiningCharacter

-- | The combining character <tt>COMBINING VERTICAL LINE BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x0329'</tt> (•̩).
CombiningVerticalLineBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING BRIDGE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x032a'</tt> (•̪).
CombiningBridgeBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING INVERTED DOUBLE ARCH BELOW</tt>
--   from the Unicode standard, defined by <tt>'\x032b'</tt> (•̫).
CombiningInvertedDoubleArchBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING CARON BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x032c'</tt> (•̬).
CombiningCaronBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING CIRCUMFLEX ACCENT BELOW</tt>
--   from the Unicode standard, defined by <tt>'\x032d'</tt> (•̭).
CombiningCircumflexAccentBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING BREVE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x032e'</tt> (•̮).
CombiningBreveBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING INVERTED BREVE BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x032f'</tt> (•̯).
CombiningInvertedBreveBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING TILDE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0330'</tt> (•̰).
CombiningTildeBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0331'</tt> (•̱).
CombiningMacronBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LOW LINE</tt> from the Unicode
--   standard, defined by <tt>'\x0332'</tt> (•̲).
CombiningLowLine :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE LOW LINE</tt> from the
--   Unicode standard, defined by <tt>'\x0333'</tt> (•̳).
CombiningDoubleLowLine :: CombiningCharacter

-- | The combining character <tt>COMBINING TILDE OVERLAY</tt> from the
--   Unicode standard, defined by <tt>'\x0334'</tt> (•̴).
CombiningTildeOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING SHORT STROKE OVERLAY</tt> from
--   the Unicode standard, defined by <tt>'\x0335'</tt> (•̵).
CombiningShortStrokeOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING LONG STROKE OVERLAY</tt> from
--   the Unicode standard, defined by <tt>'\x0336'</tt> (•̶).
CombiningLongStrokeOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING SHORT SOLIDUS OVERLAY</tt> from
--   the Unicode standard, defined by <tt>'\x0337'</tt> (•̷).
CombiningShortSolidusOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING LONG SOLIDUS OVERLAY</tt> from
--   the Unicode standard, defined by <tt>'\x0338'</tt> (•̸).
CombiningLongSolidusOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT HALF RING BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x0339'</tt> (•̹).
CombiningRightHalfRingBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING INVERTED BRIDGE BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x033a'</tt> (•̺).
CombiningInvertedBridgeBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING SQUARE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x033b'</tt> (•̻).
CombiningSquareBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING SEAGULL BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x033c'</tt> (•̼).
CombiningSeagullBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING X ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x033d'</tt> (•̽).
CombiningXAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING VERTICAL TILDE</tt> from the
--   Unicode standard, defined by <tt>'\x033e'</tt> (•̾).
CombiningVerticalTilde :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE OVERLINE</tt> from the
--   Unicode standard, defined by <tt>'\x033f'</tt> (•̿).
CombiningDoubleOverline :: CombiningCharacter

-- | The combining character <tt>COMBINING GRAVE TONE MARK</tt> from the
--   Unicode standard, defined by <tt>'\x0340'</tt> (•̀).
CombiningGraveToneMark :: CombiningCharacter

-- | The combining character <tt>COMBINING ACUTE TONE MARK</tt> from the
--   Unicode standard, defined by <tt>'\x0341'</tt> (•́).
CombiningAcuteToneMark :: CombiningCharacter

-- | The combining character <tt>COMBINING GREEK PERISPOMENI</tt> from the
--   Unicode standard, defined by <tt>'\x0342'</tt> (•͂).
CombiningGreekPerispomeni :: CombiningCharacter

-- | The combining character <tt>COMBINING GREEK KORONIS</tt> from the
--   Unicode standard, defined by <tt>'\x0343'</tt> (•̓).
CombiningGreekKoronis :: CombiningCharacter

-- | The combining character <tt>COMBINING GREEK DIALYTIKA TONOS</tt> from
--   the Unicode standard, defined by <tt>'\x0344'</tt> (•̈́).
CombiningGreekDialytikaTonos :: CombiningCharacter

-- | The combining character <tt>COMBINING GREEK YPOGEGRAMMENI</tt> from
--   the Unicode standard, defined by <tt>'\x0345'</tt> (•ͅ).
CombiningGreekYpogegrammeni :: CombiningCharacter

-- | The combining character <tt>COMBINING BRIDGE ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x0346'</tt> (•͆).
CombiningBridgeAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING EQUALS SIGN BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0347'</tt> (•͇).
CombiningEqualsSignBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE VERTICAL LINE BELOW</tt>
--   from the Unicode standard, defined by <tt>'\x0348'</tt> (•͈).
CombiningDoubleVerticalLineBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT ANGLE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0349'</tt> (•͉).
CombiningLeftAngleBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING NOT TILDE ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x034a'</tt> (•͊).
CombiningNotTildeAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING HOMOTHETIC ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x034b'</tt> (•͋).
CombiningHomotheticAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING ALMOST EQUAL TO ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x034c'</tt> (•͌).
CombiningAlmostEqualToAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT RIGHT ARROW BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x034d'</tt> (•͍).
CombiningLeftRightArrowBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING UPWARDS ARROW BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x034e'</tt> (•͎).
CombiningUpwardsArrowBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT ARROWHEAD ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x0350'</tt> (•͐).
CombiningRightArrowheadAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT HALF RING ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x0351'</tt> (•͑).
CombiningLeftHalfRingAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING FERMATA</tt> from the Unicode
--   standard, defined by <tt>'\x0352'</tt> (•͒).
CombiningFermata :: CombiningCharacter

-- | The combining character <tt>COMBINING X BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x0353'</tt> (•͓).
CombiningXBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT ARROWHEAD BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x0354'</tt> (•͔).
CombiningLeftArrowheadBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT ARROWHEAD BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x0355'</tt> (•͕).
CombiningRightArrowheadBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT ARROWHEAD AND UP ARROWHEAD
--   BELOW</tt> from the Unicode standard, defined by <tt>'\x0356'</tt>
--   (•͖).
CombiningRightArrowheadAndUpArrowheadBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT HALF RING ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x0357'</tt> (•͗).
CombiningRightHalfRingAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DOT ABOVE RIGHT</tt> from the
--   Unicode standard, defined by <tt>'\x0358'</tt> (•͘).
CombiningDotAboveRight :: CombiningCharacter

-- | The combining character <tt>COMBINING ASTERISK BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0359'</tt> (•͙).
CombiningAsteriskBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE RING BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x035a'</tt> (•͚).
CombiningDoubleRingBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING ZIGZAG ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x035b'</tt> (•͛).
CombiningZigzagAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE BREVE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x035c'</tt> (•͜).
CombiningDoubleBreveBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE BREVE</tt> from the
--   Unicode standard, defined by <tt>'\x035d'</tt> (•͝).
CombiningDoubleBreve :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE MACRON</tt> from the
--   Unicode standard, defined by <tt>'\x035e'</tt> (•͞).
CombiningDoubleMacron :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE MACRON BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x035f'</tt> (•͟).
CombiningDoubleMacronBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE TILDE</tt> from the
--   Unicode standard, defined by <tt>'\x0360'</tt> (•͠).
CombiningDoubleTilde :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE INVERTED BREVE</tt> from
--   the Unicode standard, defined by <tt>'\x0361'</tt> (•͡).
CombiningDoubleInvertedBreve :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE RIGHTWARDS ARROW
--   BELOW</tt> from the Unicode standard, defined by <tt>'\x0362'</tt>
--   (•͢).
CombiningDoubleRightwardsArrowBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER A</tt> from
--   the Unicode standard, defined by <tt>'\x0363'</tt> (•ͣ).
CombiningLatinSmallLetterA :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER E</tt> from
--   the Unicode standard, defined by <tt>'\x0364'</tt> (•ͤ).
CombiningLatinSmallLetterE :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER I</tt> from
--   the Unicode standard, defined by <tt>'\x0365'</tt> (•ͥ).
CombiningLatinSmallLetterI :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER O</tt> from
--   the Unicode standard, defined by <tt>'\x0366'</tt> (•ͦ).
CombiningLatinSmallLetterO :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER U</tt> from
--   the Unicode standard, defined by <tt>'\x0367'</tt> (•ͧ).
CombiningLatinSmallLetterU :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER C</tt> from
--   the Unicode standard, defined by <tt>'\x0368'</tt> (•ͨ).
CombiningLatinSmallLetterC :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER D</tt> from
--   the Unicode standard, defined by <tt>'\x0369'</tt> (•ͩ).
CombiningLatinSmallLetterD :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER H</tt> from
--   the Unicode standard, defined by <tt>'\x036a'</tt> (•ͪ).
CombiningLatinSmallLetterH :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER M</tt> from
--   the Unicode standard, defined by <tt>'\x036b'</tt> (•ͫ).
CombiningLatinSmallLetterM :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER R</tt> from
--   the Unicode standard, defined by <tt>'\x036c'</tt> (•ͬ).
CombiningLatinSmallLetterR :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER T</tt> from
--   the Unicode standard, defined by <tt>'\x036d'</tt> (•ͭ).
CombiningLatinSmallLetterT :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER V</tt> from
--   the Unicode standard, defined by <tt>'\x036e'</tt> (•ͮ).
CombiningLatinSmallLetterV :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER X</tt> from
--   the Unicode standard, defined by <tt>'\x036f'</tt> (•ͯ).
CombiningLatinSmallLetterX :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC TITLO</tt> from the
--   Unicode standard, defined by <tt>'\x0483'</tt> (•҃).
CombiningCyrillicTitlo :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC PALATALIZATION</tt>
--   from the Unicode standard, defined by <tt>'\x0484'</tt> (•҄).
CombiningCyrillicPalatalization :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC DASIA PNEUMATA</tt>
--   from the Unicode standard, defined by <tt>'\x0485'</tt> (•҅).
CombiningCyrillicDasiaPneumata :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC PSILI PNEUMATA</tt>
--   from the Unicode standard, defined by <tt>'\x0486'</tt> (•҆).
CombiningCyrillicPsiliPneumata :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC POKRYTIE</tt> from the
--   Unicode standard, defined by <tt>'\x0487'</tt> (•҇).
CombiningCyrillicPokrytie :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT ETNAHTA</tt> from the
--   Unicode standard, defined by <tt>'\x0591'</tt> (•֑).
HebrewAccentEtnahta :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT SEGOL</tt> from the Unicode
--   standard, defined by <tt>'\x0592'</tt> (•֒).
HebrewAccentSegol :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT SHALSHELET</tt> from the
--   Unicode standard, defined by <tt>'\x0593'</tt> (•֓).
HebrewAccentShalshelet :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT ZAQEF QATAN</tt> from the
--   Unicode standard, defined by <tt>'\x0594'</tt> (•֔).
HebrewAccentZaqefQatan :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT ZAQEF GADOL</tt> from the
--   Unicode standard, defined by <tt>'\x0595'</tt> (•֕).
HebrewAccentZaqefGadol :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT TIPEHA</tt> from the Unicode
--   standard, defined by <tt>'\x0596'</tt> (•֖).
HebrewAccentTipeha :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT REVIA</tt> from the Unicode
--   standard, defined by <tt>'\x0597'</tt> (•֗).
HebrewAccentRevia :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT ZARQA</tt> from the Unicode
--   standard, defined by <tt>'\x0598'</tt> (•֘).
HebrewAccentZarqa :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT PASHTA</tt> from the Unicode
--   standard, defined by <tt>'\x0599'</tt> (•֙).
HebrewAccentPashta :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT YETIV</tt> from the Unicode
--   standard, defined by <tt>'\x059a'</tt> (•֚).
HebrewAccentYetiv :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT TEVIR</tt> from the Unicode
--   standard, defined by <tt>'\x059b'</tt> (•֛).
HebrewAccentTevir :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT GERESH</tt> from the Unicode
--   standard, defined by <tt>'\x059c'</tt> (•֜).
HebrewAccentGeresh :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT GERESH MUQDAM</tt> from the
--   Unicode standard, defined by <tt>'\x059d'</tt> (•֝).
HebrewAccentGereshMuqdam :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT GERSHAYIM</tt> from the
--   Unicode standard, defined by <tt>'\x059e'</tt> (•֞).
HebrewAccentGershayim :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT QARNEY PARA</tt> from the
--   Unicode standard, defined by <tt>'\x059f'</tt> (•֟).
HebrewAccentQarneyPara :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT TELISHA GEDOLA</tt> from the
--   Unicode standard, defined by <tt>'\x05a0'</tt> (•֠).
HebrewAccentTelishaGedola :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT PAZER</tt> from the Unicode
--   standard, defined by <tt>'\x05a1'</tt> (•֡).
HebrewAccentPazer :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT ATNAH HAFUKH</tt> from the
--   Unicode standard, defined by <tt>'\x05a2'</tt> (•֢).
HebrewAccentAtnahHafukh :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT MUNAH</tt> from the Unicode
--   standard, defined by <tt>'\x05a3'</tt> (•֣).
HebrewAccentMunah :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT MAHAPAKH</tt> from the
--   Unicode standard, defined by <tt>'\x05a4'</tt> (•֤).
HebrewAccentMahapakh :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT MERKHA</tt> from the Unicode
--   standard, defined by <tt>'\x05a5'</tt> (•֥).
HebrewAccentMerkha :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT MERKHA KEFULA</tt> from the
--   Unicode standard, defined by <tt>'\x05a6'</tt> (•֦).
HebrewAccentMerkhaKefula :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT DARGA</tt> from the Unicode
--   standard, defined by <tt>'\x05a7'</tt> (•֧).
HebrewAccentDarga :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT QADMA</tt> from the Unicode
--   standard, defined by <tt>'\x05a8'</tt> (•֨).
HebrewAccentQadma :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT TELISHA QETANA</tt> from the
--   Unicode standard, defined by <tt>'\x05a9'</tt> (•֩).
HebrewAccentTelishaQetana :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT YERAH BEN YOMO</tt> from the
--   Unicode standard, defined by <tt>'\x05aa'</tt> (•֪).
HebrewAccentYerahBenYomo :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT OLE</tt> from the Unicode
--   standard, defined by <tt>'\x05ab'</tt> (•֫).
HebrewAccentOle :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT ILUY</tt> from the Unicode
--   standard, defined by <tt>'\x05ac'</tt> (•֬).
HebrewAccentIluy :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT DEHI</tt> from the Unicode
--   standard, defined by <tt>'\x05ad'</tt> (•֭).
HebrewAccentDehi :: CombiningCharacter

-- | The combining character <tt>HEBREW ACCENT ZINOR</tt> from the Unicode
--   standard, defined by <tt>'\x05ae'</tt> (•֮).
HebrewAccentZinor :: CombiningCharacter

-- | The combining character <tt>HEBREW MARK MASORA CIRCLE</tt> from the
--   Unicode standard, defined by <tt>'\x05af'</tt> (•֯).
HebrewMarkMasoraCircle :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT SHEVA</tt> from the Unicode
--   standard, defined by <tt>'\x05b0'</tt> (•ְ).
HebrewPointSheva :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT HATAF SEGOL</tt> from the
--   Unicode standard, defined by <tt>'\x05b1'</tt> (•ֱ).
HebrewPointHatafSegol :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT HATAF PATAH</tt> from the
--   Unicode standard, defined by <tt>'\x05b2'</tt> (•ֲ).
HebrewPointHatafPatah :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT HATAF QAMATS</tt> from the
--   Unicode standard, defined by <tt>'\x05b3'</tt> (•ֳ).
HebrewPointHatafQamats :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT HIRIQ</tt> from the Unicode
--   standard, defined by <tt>'\x05b4'</tt> (•ִ).
HebrewPointHiriq :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT TSERE</tt> from the Unicode
--   standard, defined by <tt>'\x05b5'</tt> (•ֵ).
HebrewPointTsere :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT SEGOL</tt> from the Unicode
--   standard, defined by <tt>'\x05b6'</tt> (•ֶ).
HebrewPointSegol :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT PATAH</tt> from the Unicode
--   standard, defined by <tt>'\x05b7'</tt> (•ַ).
HebrewPointPatah :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT QAMATS</tt> from the Unicode
--   standard, defined by <tt>'\x05b8'</tt> (•ָ).
HebrewPointQamats :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT HOLAM</tt> from the Unicode
--   standard, defined by <tt>'\x05b9'</tt> (•ֹ).
HebrewPointHolam :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT HOLAM HASER FOR VAV</tt> from
--   the Unicode standard, defined by <tt>'\x05ba'</tt> (•ֺ).
HebrewPointHolamHaserForVav :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT QUBUTS</tt> from the Unicode
--   standard, defined by <tt>'\x05bb'</tt> (•ֻ).
HebrewPointQubuts :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT DAGESH OR MAPIQ</tt> from the
--   Unicode standard, defined by <tt>'\x05bc'</tt> (•ּ).
HebrewPointDageshOrMapiq :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT METEG</tt> from the Unicode
--   standard, defined by <tt>'\x05bd'</tt> (•ֽ).
HebrewPointMeteg :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT RAFE</tt> from the Unicode
--   standard, defined by <tt>'\x05bf'</tt> (•ֿ).
HebrewPointRafe :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT SHIN DOT</tt> from the
--   Unicode standard, defined by <tt>'\x05c1'</tt> (•ׁ).
HebrewPointShinDot :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT SIN DOT</tt> from the Unicode
--   standard, defined by <tt>'\x05c2'</tt> (•ׂ).
HebrewPointSinDot :: CombiningCharacter

-- | The combining character <tt>HEBREW MARK UPPER DOT</tt> from the
--   Unicode standard, defined by <tt>'\x05c4'</tt> (•ׄ).
HebrewMarkUpperDot :: CombiningCharacter

-- | The combining character <tt>HEBREW MARK LOWER DOT</tt> from the
--   Unicode standard, defined by <tt>'\x05c5'</tt> (•ׅ).
HebrewMarkLowerDot :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT QAMATS QATAN</tt> from the
--   Unicode standard, defined by <tt>'\x05c7'</tt> (•ׇ).
HebrewPointQamatsQatan :: CombiningCharacter

-- | The combining character <tt>ARABIC SIGN SALLALLAHOU ALAYHE
--   WASSALLAM</tt> from the Unicode standard, defined by <tt>'\x0610'</tt>
--   (•ؐ).
ArabicSignSallallahouAlayheWassallam :: CombiningCharacter

-- | The combining character <tt>ARABIC SIGN ALAYHE ASSALLAM</tt> from the
--   Unicode standard, defined by <tt>'\x0611'</tt> (•ؑ).
ArabicSignAlayheAssallam :: CombiningCharacter

-- | The combining character <tt>ARABIC SIGN RAHMATULLAH ALAYHE</tt> from
--   the Unicode standard, defined by <tt>'\x0612'</tt> (•ؒ).
ArabicSignRahmatullahAlayhe :: CombiningCharacter

-- | The combining character <tt>ARABIC SIGN RADI ALLAHOU ANHU</tt> from
--   the Unicode standard, defined by <tt>'\x0613'</tt> (•ؓ).
ArabicSignRadiAllahouAnhu :: CombiningCharacter

-- | The combining character <tt>ARABIC SIGN TAKHALLUS</tt> from the
--   Unicode standard, defined by <tt>'\x0614'</tt> (•ؔ).
ArabicSignTakhallus :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH TAH</tt> from the
--   Unicode standard, defined by <tt>'\x0615'</tt> (•ؕ).
ArabicSmallHighTah :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH LIGATURE ALEF WITH LAM
--   WITH YEH</tt> from the Unicode standard, defined by <tt>'\x0616'</tt>
--   (•ؖ).
ArabicSmallHighLigatureAlefWithLamWithYeh :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH ZAIN</tt> from the
--   Unicode standard, defined by <tt>'\x0617'</tt> (•ؗ).
ArabicSmallHighZain :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL FATHA</tt> from the Unicode
--   standard, defined by <tt>'\x0618'</tt> (•ؘ).
ArabicSmallFatha :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL DAMMA</tt> from the Unicode
--   standard, defined by <tt>'\x0619'</tt> (•ؙ).
ArabicSmallDamma :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL KASRA</tt> from the Unicode
--   standard, defined by <tt>'\x061a'</tt> (•ؚ).
ArabicSmallKasra :: CombiningCharacter

-- | The combining character <tt>ARABIC FATHATAN</tt> from the Unicode
--   standard, defined by <tt>'\x064b'</tt> (•ً).
ArabicFathatan :: CombiningCharacter

-- | The combining character <tt>ARABIC DAMMATAN</tt> from the Unicode
--   standard, defined by <tt>'\x064c'</tt> (•ٌ).
ArabicDammatan :: CombiningCharacter

-- | The combining character <tt>ARABIC KASRATAN</tt> from the Unicode
--   standard, defined by <tt>'\x064d'</tt> (•ٍ).
ArabicKasratan :: CombiningCharacter

-- | The combining character <tt>ARABIC FATHA</tt> from the Unicode
--   standard, defined by <tt>'\x064e'</tt> (•َ).
ArabicFatha :: CombiningCharacter

-- | The combining character <tt>ARABIC DAMMA</tt> from the Unicode
--   standard, defined by <tt>'\x064f'</tt> (•ُ).
ArabicDamma :: CombiningCharacter

-- | The combining character <tt>ARABIC KASRA</tt> from the Unicode
--   standard, defined by <tt>'\x0650'</tt> (•ِ).
ArabicKasra :: CombiningCharacter

-- | The combining character <tt>ARABIC SHADDA</tt> from the Unicode
--   standard, defined by <tt>'\x0651'</tt> (•ّ).
ArabicShadda :: CombiningCharacter

-- | The combining character <tt>ARABIC SUKUN</tt> from the Unicode
--   standard, defined by <tt>'\x0652'</tt> (•ْ).
ArabicSukun :: CombiningCharacter

-- | The combining character <tt>ARABIC MADDAH ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x0653'</tt> (•ٓ).
ArabicMaddahAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC HAMZA ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x0654'</tt> (•ٔ).
ArabicHamzaAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC HAMZA BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x0655'</tt> (•ٕ).
ArabicHamzaBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC SUBSCRIPT ALEF</tt> from the
--   Unicode standard, defined by <tt>'\x0656'</tt> (•ٖ).
ArabicSubscriptAlef :: CombiningCharacter

-- | The combining character <tt>ARABIC INVERTED DAMMA</tt> from the
--   Unicode standard, defined by <tt>'\x0657'</tt> (•ٗ).
ArabicInvertedDamma :: CombiningCharacter

-- | The combining character <tt>ARABIC MARK NOON GHUNNA</tt> from the
--   Unicode standard, defined by <tt>'\x0658'</tt> (•٘).
ArabicMarkNoonGhunna :: CombiningCharacter

-- | The combining character <tt>ARABIC ZWARAKAY</tt> from the Unicode
--   standard, defined by <tt>'\x0659'</tt> (•ٙ).
ArabicZwarakay :: CombiningCharacter

-- | The combining character <tt>ARABIC VOWEL SIGN SMALL V ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x065a'</tt> (•ٚ).
ArabicVowelSignSmallVAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC VOWEL SIGN INVERTED SMALL V
--   ABOVE</tt> from the Unicode standard, defined by <tt>'\x065b'</tt>
--   (•ٛ).
ArabicVowelSignInvertedSmallVAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC VOWEL SIGN DOT BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x065c'</tt> (•ٜ).
ArabicVowelSignDotBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC REVERSED DAMMA</tt> from the
--   Unicode standard, defined by <tt>'\x065d'</tt> (•ٝ).
ArabicReversedDamma :: CombiningCharacter

-- | The combining character <tt>ARABIC FATHA WITH TWO DOTS</tt> from the
--   Unicode standard, defined by <tt>'\x065e'</tt> (•ٞ).
ArabicFathaWithTwoDots :: CombiningCharacter

-- | The combining character <tt>ARABIC WAVY HAMZA BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x065f'</tt> (•ٟ).
ArabicWavyHamzaBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC LETTER SUPERSCRIPT ALEF</tt> from
--   the Unicode standard, defined by <tt>'\x0670'</tt> (•ٰ).
ArabicLetterSuperscriptAlef :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH LIGATURE SAD WITH LAM
--   WITH ALEF MAKSURA</tt> from the Unicode standard, defined by
--   <tt>'\x06d6'</tt> (•ۖ).
ArabicSmallHighLigatureSadWithLamWithAlefMaksura :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH LIGATURE QAF WITH LAM
--   WITH ALEF MAKSURA</tt> from the Unicode standard, defined by
--   <tt>'\x06d7'</tt> (•ۗ).
ArabicSmallHighLigatureQafWithLamWithAlefMaksura :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH MEEM INITIAL FORM</tt>
--   from the Unicode standard, defined by <tt>'\x06d8'</tt> (•ۘ).
ArabicSmallHighMeemInitialForm :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH LAM ALEF</tt> from the
--   Unicode standard, defined by <tt>'\x06d9'</tt> (•ۙ).
ArabicSmallHighLamAlef :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH JEEM</tt> from the
--   Unicode standard, defined by <tt>'\x06da'</tt> (•ۚ).
ArabicSmallHighJeem :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH THREE DOTS</tt> from the
--   Unicode standard, defined by <tt>'\x06db'</tt> (•ۛ).
ArabicSmallHighThreeDots :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH SEEN</tt> from the
--   Unicode standard, defined by <tt>'\x06dc'</tt> (•ۜ).
ArabicSmallHighSeen :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH ROUNDED ZERO</tt> from
--   the Unicode standard, defined by <tt>'\x06df'</tt> (•۟).
ArabicSmallHighRoundedZero :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH UPRIGHT RECTANGULAR
--   ZERO</tt> from the Unicode standard, defined by <tt>'\x06e0'</tt>
--   (•۠).
ArabicSmallHighUprightRectangularZero :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH DOTLESS HEAD OF
--   KHAH</tt> from the Unicode standard, defined by <tt>'\x06e1'</tt>
--   (•ۡ).
ArabicSmallHighDotlessHeadOfKhah :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH MEEM ISOLATED FORM</tt>
--   from the Unicode standard, defined by <tt>'\x06e2'</tt> (•ۢ).
ArabicSmallHighMeemIsolatedForm :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL LOW SEEN</tt> from the
--   Unicode standard, defined by <tt>'\x06e3'</tt> (•ۣ).
ArabicSmallLowSeen :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH MADDA</tt> from the
--   Unicode standard, defined by <tt>'\x06e4'</tt> (•ۤ).
ArabicSmallHighMadda :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH YEH</tt> from the
--   Unicode standard, defined by <tt>'\x06e7'</tt> (•ۧ).
ArabicSmallHighYeh :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH NOON</tt> from the
--   Unicode standard, defined by <tt>'\x06e8'</tt> (•ۨ).
ArabicSmallHighNoon :: CombiningCharacter

-- | The combining character <tt>ARABIC EMPTY CENTRE LOW STOP</tt> from the
--   Unicode standard, defined by <tt>'\x06ea'</tt> (•۪).
ArabicEmptyCentreLowStop :: CombiningCharacter

-- | The combining character <tt>ARABIC EMPTY CENTRE HIGH STOP</tt> from
--   the Unicode standard, defined by <tt>'\x06eb'</tt> (•۫).
ArabicEmptyCentreHighStop :: CombiningCharacter

-- | The combining character <tt>ARABIC ROUNDED HIGH STOP WITH FILLED
--   CENTRE</tt> from the Unicode standard, defined by <tt>'\x06ec'</tt>
--   (•۬).
ArabicRoundedHighStopWithFilledCentre :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL LOW MEEM</tt> from the
--   Unicode standard, defined by <tt>'\x06ed'</tt> (•ۭ).
ArabicSmallLowMeem :: CombiningCharacter

-- | The combining character <tt>SYRIAC LETTER SUPERSCRIPT ALAPH</tt> from
--   the Unicode standard, defined by <tt>'\x0711'</tt> (•ܑ).
SyriacLetterSuperscriptAlaph :: CombiningCharacter

-- | The combining character <tt>SYRIAC PTHAHA ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x0730'</tt> (•ܰ).
SyriacPthahaAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC PTHAHA BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x0731'</tt> (•ܱ).
SyriacPthahaBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC PTHAHA DOTTED</tt> from the Unicode
--   standard, defined by <tt>'\x0732'</tt> (•ܲ).
SyriacPthahaDotted :: CombiningCharacter

-- | The combining character <tt>SYRIAC ZQAPHA ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x0733'</tt> (•ܳ).
SyriacZqaphaAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC ZQAPHA BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x0734'</tt> (•ܴ).
SyriacZqaphaBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC ZQAPHA DOTTED</tt> from the Unicode
--   standard, defined by <tt>'\x0735'</tt> (•ܵ).
SyriacZqaphaDotted :: CombiningCharacter

-- | The combining character <tt>SYRIAC RBASA ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x0736'</tt> (•ܶ).
SyriacRbasaAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC RBASA BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x0737'</tt> (•ܷ).
SyriacRbasaBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC DOTTED ZLAMA HORIZONTAL</tt> from
--   the Unicode standard, defined by <tt>'\x0738'</tt> (•ܸ).
SyriacDottedZlamaHorizontal :: CombiningCharacter

-- | The combining character <tt>SYRIAC DOTTED ZLAMA ANGULAR</tt> from the
--   Unicode standard, defined by <tt>'\x0739'</tt> (•ܹ).
SyriacDottedZlamaAngular :: CombiningCharacter

-- | The combining character <tt>SYRIAC HBASA ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x073a'</tt> (•ܺ).
SyriacHbasaAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC HBASA BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x073b'</tt> (•ܻ).
SyriacHbasaBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC HBASA-ESASA DOTTED</tt> from the
--   Unicode standard, defined by <tt>'\x073c'</tt> (•ܼ).
SyriacHbasaEsasaDotted :: CombiningCharacter

-- | The combining character <tt>SYRIAC ESASA ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x073d'</tt> (•ܽ).
SyriacEsasaAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC ESASA BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x073e'</tt> (•ܾ).
SyriacEsasaBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC RWAHA</tt> from the Unicode
--   standard, defined by <tt>'\x073f'</tt> (•ܿ).
SyriacRwaha :: CombiningCharacter

-- | The combining character <tt>SYRIAC FEMININE DOT</tt> from the Unicode
--   standard, defined by <tt>'\x0740'</tt> (•݀).
SyriacFeminineDot :: CombiningCharacter

-- | The combining character <tt>SYRIAC QUSHSHAYA</tt> from the Unicode
--   standard, defined by <tt>'\x0741'</tt> (•݁).
SyriacQushshaya :: CombiningCharacter

-- | The combining character <tt>SYRIAC RUKKAKHA</tt> from the Unicode
--   standard, defined by <tt>'\x0742'</tt> (•݂).
SyriacRukkakha :: CombiningCharacter

-- | The combining character <tt>SYRIAC TWO VERTICAL DOTS ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x0743'</tt> (•݃).
SyriacTwoVerticalDotsAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC TWO VERTICAL DOTS BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x0744'</tt> (•݄).
SyriacTwoVerticalDotsBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC THREE DOTS ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x0745'</tt> (•݅).
SyriacThreeDotsAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC THREE DOTS BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0746'</tt> (•݆).
SyriacThreeDotsBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC OBLIQUE LINE ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x0747'</tt> (•݇).
SyriacObliqueLineAbove :: CombiningCharacter

-- | The combining character <tt>SYRIAC OBLIQUE LINE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x0748'</tt> (•݈).
SyriacObliqueLineBelow :: CombiningCharacter

-- | The combining character <tt>SYRIAC MUSIC</tt> from the Unicode
--   standard, defined by <tt>'\x0749'</tt> (•݉).
SyriacMusic :: CombiningCharacter

-- | The combining character <tt>SYRIAC BARREKH</tt> from the Unicode
--   standard, defined by <tt>'\x074a'</tt> (•݊).
SyriacBarrekh :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING SHORT HIGH TONE</tt> from
--   the Unicode standard, defined by <tt>'\x07eb'</tt> (•߫).
NkoCombiningShortHighTone :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING SHORT LOW TONE</tt> from the
--   Unicode standard, defined by <tt>'\x07ec'</tt> (•߬).
NkoCombiningShortLowTone :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING SHORT RISING TONE</tt> from
--   the Unicode standard, defined by <tt>'\x07ed'</tt> (•߭).
NkoCombiningShortRisingTone :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING LONG DESCENDING TONE</tt>
--   from the Unicode standard, defined by <tt>'\x07ee'</tt> (•߮).
NkoCombiningLongDescendingTone :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING LONG HIGH TONE</tt> from the
--   Unicode standard, defined by <tt>'\x07ef'</tt> (•߯).
NkoCombiningLongHighTone :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING LONG LOW TONE</tt> from the
--   Unicode standard, defined by <tt>'\x07f0'</tt> (•߰).
NkoCombiningLongLowTone :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING LONG RISING TONE</tt> from
--   the Unicode standard, defined by <tt>'\x07f1'</tt> (•߱).
NkoCombiningLongRisingTone :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING NASALIZATION MARK</tt> from
--   the Unicode standard, defined by <tt>'\x07f2'</tt> (•߲).
NkoCombiningNasalizationMark :: CombiningCharacter

-- | The combining character <tt>NKO COMBINING DOUBLE DOT ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x07f3'</tt> (•߳).
NkoCombiningDoubleDotAbove :: CombiningCharacter

-- | The combining character <tt>SAMARITAN MARK IN</tt> from the Unicode
--   standard, defined by <tt>'\x0816'</tt> (•ࠖ).
SamaritanMarkIn :: CombiningCharacter

-- | The combining character <tt>SAMARITAN MARK IN-ALAF</tt> from the
--   Unicode standard, defined by <tt>'\x0817'</tt> (•ࠗ).
SamaritanMarkInAlaf :: CombiningCharacter

-- | The combining character <tt>SAMARITAN MARK OCCLUSION</tt> from the
--   Unicode standard, defined by <tt>'\x0818'</tt> (•࠘).
SamaritanMarkOcclusion :: CombiningCharacter

-- | The combining character <tt>SAMARITAN MARK DAGESH</tt> from the
--   Unicode standard, defined by <tt>'\x0819'</tt> (•࠙).
SamaritanMarkDagesh :: CombiningCharacter

-- | The combining character <tt>SAMARITAN MARK EPENTHETIC YUT</tt> from
--   the Unicode standard, defined by <tt>'\x081b'</tt> (•ࠛ).
SamaritanMarkEpentheticYut :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN LONG E</tt> from the
--   Unicode standard, defined by <tt>'\x081c'</tt> (•ࠜ).
SamaritanVowelSignLongE :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN E</tt> from the
--   Unicode standard, defined by <tt>'\x081d'</tt> (•ࠝ).
SamaritanVowelSignE :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN OVERLONG AA</tt> from
--   the Unicode standard, defined by <tt>'\x081e'</tt> (•ࠞ).
SamaritanVowelSignOverlongAa :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN LONG AA</tt> from the
--   Unicode standard, defined by <tt>'\x081f'</tt> (•ࠟ).
SamaritanVowelSignLongAa :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN AA</tt> from the
--   Unicode standard, defined by <tt>'\x0820'</tt> (•ࠠ).
SamaritanVowelSignAa :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN OVERLONG A</tt> from
--   the Unicode standard, defined by <tt>'\x0821'</tt> (•ࠡ).
SamaritanVowelSignOverlongA :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN LONG A</tt> from the
--   Unicode standard, defined by <tt>'\x0822'</tt> (•ࠢ).
SamaritanVowelSignLongA :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN A</tt> from the
--   Unicode standard, defined by <tt>'\x0823'</tt> (•ࠣ).
SamaritanVowelSignA :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN SHORT A</tt> from the
--   Unicode standard, defined by <tt>'\x0825'</tt> (•ࠥ).
SamaritanVowelSignShortA :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN LONG U</tt> from the
--   Unicode standard, defined by <tt>'\x0826'</tt> (•ࠦ).
SamaritanVowelSignLongU :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN U</tt> from the
--   Unicode standard, defined by <tt>'\x0827'</tt> (•ࠧ).
SamaritanVowelSignU :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN LONG I</tt> from the
--   Unicode standard, defined by <tt>'\x0829'</tt> (•ࠩ).
SamaritanVowelSignLongI :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN I</tt> from the
--   Unicode standard, defined by <tt>'\x082a'</tt> (•ࠪ).
SamaritanVowelSignI :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN O</tt> from the
--   Unicode standard, defined by <tt>'\x082b'</tt> (•ࠫ).
SamaritanVowelSignO :: CombiningCharacter

-- | The combining character <tt>SAMARITAN VOWEL SIGN SUKUN</tt> from the
--   Unicode standard, defined by <tt>'\x082c'</tt> (•ࠬ).
SamaritanVowelSignSukun :: CombiningCharacter

-- | The combining character <tt>SAMARITAN MARK NEQUDAA</tt> from the
--   Unicode standard, defined by <tt>'\x082d'</tt> (•࠭).
SamaritanMarkNequdaa :: CombiningCharacter

-- | The combining character <tt>MANDAIC AFFRICATION MARK</tt> from the
--   Unicode standard, defined by <tt>'\x0859'</tt> (•࡙).
MandaicAffricationMark :: CombiningCharacter

-- | The combining character <tt>MANDAIC VOCALIZATION MARK</tt> from the
--   Unicode standard, defined by <tt>'\x085a'</tt> (•࡚).
MandaicVocalizationMark :: CombiningCharacter

-- | The combining character <tt>MANDAIC GEMINATION MARK</tt> from the
--   Unicode standard, defined by <tt>'\x085b'</tt> (•࡛).
MandaicGeminationMark :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WORD AR-RUB</tt> from
--   the Unicode standard, defined by <tt>'\x08d4'</tt> (•ࣔ).
ArabicSmallHighWordArRub :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH SAD</tt> from the
--   Unicode standard, defined by <tt>'\x08d5'</tt> (•ࣕ).
ArabicSmallHighSad :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH AIN</tt> from the
--   Unicode standard, defined by <tt>'\x08d6'</tt> (•ࣖ).
ArabicSmallHighAin :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH QAF</tt> from the
--   Unicode standard, defined by <tt>'\x08d7'</tt> (•ࣗ).
ArabicSmallHighQaf :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH NOON WITH KASRA</tt>
--   from the Unicode standard, defined by <tt>'\x08d8'</tt> (•ࣘ).
ArabicSmallHighNoonWithKasra :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL LOW NOON WITH KASRA</tt> from
--   the Unicode standard, defined by <tt>'\x08d9'</tt> (•ࣙ).
ArabicSmallLowNoonWithKasra :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WORD ATH-THALATHA</tt>
--   from the Unicode standard, defined by <tt>'\x08da'</tt> (•ࣚ).
ArabicSmallHighWordAthThalatha :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WORD AS-SAJDA</tt> from
--   the Unicode standard, defined by <tt>'\x08db'</tt> (•ࣛ).
ArabicSmallHighWordAsSajda :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WORD AN-NISF</tt> from
--   the Unicode standard, defined by <tt>'\x08dc'</tt> (•ࣜ).
ArabicSmallHighWordAnNisf :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WORD SAKTA</tt> from the
--   Unicode standard, defined by <tt>'\x08dd'</tt> (•ࣝ).
ArabicSmallHighWordSakta :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WORD QIF</tt> from the
--   Unicode standard, defined by <tt>'\x08de'</tt> (•ࣞ).
ArabicSmallHighWordQif :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WORD WAQFA</tt> from the
--   Unicode standard, defined by <tt>'\x08df'</tt> (•ࣟ).
ArabicSmallHighWordWaqfa :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH FOOTNOTE MARKER</tt>
--   from the Unicode standard, defined by <tt>'\x08e0'</tt> (•࣠).
ArabicSmallHighFootnoteMarker :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH SIGN SAFHA</tt> from the
--   Unicode standard, defined by <tt>'\x08e1'</tt> (•࣡).
ArabicSmallHighSignSafha :: CombiningCharacter

-- | The combining character <tt>ARABIC TURNED DAMMA BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x08e3'</tt> (•ࣣ).
ArabicTurnedDammaBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC CURLY FATHA</tt> from the Unicode
--   standard, defined by <tt>'\x08e4'</tt> (•ࣤ).
ArabicCurlyFatha :: CombiningCharacter

-- | The combining character <tt>ARABIC CURLY DAMMA</tt> from the Unicode
--   standard, defined by <tt>'\x08e5'</tt> (•ࣥ).
ArabicCurlyDamma :: CombiningCharacter

-- | The combining character <tt>ARABIC CURLY KASRA</tt> from the Unicode
--   standard, defined by <tt>'\x08e6'</tt> (•ࣦ).
ArabicCurlyKasra :: CombiningCharacter

-- | The combining character <tt>ARABIC CURLY FATHATAN</tt> from the
--   Unicode standard, defined by <tt>'\x08e7'</tt> (•ࣧ).
ArabicCurlyFathatan :: CombiningCharacter

-- | The combining character <tt>ARABIC CURLY DAMMATAN</tt> from the
--   Unicode standard, defined by <tt>'\x08e8'</tt> (•ࣨ).
ArabicCurlyDammatan :: CombiningCharacter

-- | The combining character <tt>ARABIC CURLY KASRATAN</tt> from the
--   Unicode standard, defined by <tt>'\x08e9'</tt> (•ࣩ).
ArabicCurlyKasratan :: CombiningCharacter

-- | The combining character <tt>ARABIC TONE ONE DOT ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x08ea'</tt> (•࣪).
ArabicToneOneDotAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC TONE TWO DOTS ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x08eb'</tt> (•࣫).
ArabicToneTwoDotsAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC TONE LOOP ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x08ec'</tt> (•࣬).
ArabicToneLoopAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC TONE ONE DOT BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x08ed'</tt> (•࣭).
ArabicToneOneDotBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC TONE TWO DOTS BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x08ee'</tt> (•࣮).
ArabicToneTwoDotsBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC TONE LOOP BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x08ef'</tt> (•࣯).
ArabicToneLoopBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC OPEN FATHATAN</tt> from the Unicode
--   standard, defined by <tt>'\x08f0'</tt> (•ࣰ).
ArabicOpenFathatan :: CombiningCharacter

-- | The combining character <tt>ARABIC OPEN DAMMATAN</tt> from the Unicode
--   standard, defined by <tt>'\x08f1'</tt> (•ࣱ).
ArabicOpenDammatan :: CombiningCharacter

-- | The combining character <tt>ARABIC OPEN KASRATAN</tt> from the Unicode
--   standard, defined by <tt>'\x08f2'</tt> (•ࣲ).
ArabicOpenKasratan :: CombiningCharacter

-- | The combining character <tt>ARABIC SMALL HIGH WAW</tt> from the
--   Unicode standard, defined by <tt>'\x08f3'</tt> (•ࣳ).
ArabicSmallHighWaw :: CombiningCharacter

-- | The combining character <tt>ARABIC FATHA WITH RING</tt> from the
--   Unicode standard, defined by <tt>'\x08f4'</tt> (•ࣴ).
ArabicFathaWithRing :: CombiningCharacter

-- | The combining character <tt>ARABIC FATHA WITH DOT ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x08f5'</tt> (•ࣵ).
ArabicFathaWithDotAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC KASRA WITH DOT BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x08f6'</tt> (•ࣶ).
ArabicKasraWithDotBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC LEFT ARROWHEAD ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x08f7'</tt> (•ࣷ).
ArabicLeftArrowheadAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC RIGHT ARROWHEAD ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x08f8'</tt> (•ࣸ).
ArabicRightArrowheadAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC LEFT ARROWHEAD BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x08f9'</tt> (•ࣹ).
ArabicLeftArrowheadBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC RIGHT ARROWHEAD BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x08fa'</tt> (•ࣺ).
ArabicRightArrowheadBelow :: CombiningCharacter

-- | The combining character <tt>ARABIC DOUBLE RIGHT ARROWHEAD ABOVE</tt>
--   from the Unicode standard, defined by <tt>'\x08fb'</tt> (•ࣻ).
ArabicDoubleRightArrowheadAbove :: CombiningCharacter

-- | The combining character <tt>ARABIC DOUBLE RIGHT ARROWHEAD ABOVE WITH
--   DOT</tt> from the Unicode standard, defined by <tt>'\x08fc'</tt> (•ࣼ).
ArabicDoubleRightArrowheadAboveWithDot :: CombiningCharacter

-- | The combining character <tt>ARABIC RIGHT ARROWHEAD ABOVE WITH DOT</tt>
--   from the Unicode standard, defined by <tt>'\x08fd'</tt> (•ࣽ).
ArabicRightArrowheadAboveWithDot :: CombiningCharacter

-- | The combining character <tt>ARABIC DAMMA WITH DOT</tt> from the
--   Unicode standard, defined by <tt>'\x08fe'</tt> (•ࣾ).
ArabicDammaWithDot :: CombiningCharacter

-- | The combining character <tt>ARABIC MARK SIDEWAYS NOON GHUNNA</tt> from
--   the Unicode standard, defined by <tt>'\x08ff'</tt> (•ࣿ).
ArabicMarkSidewaysNoonGhunna :: CombiningCharacter

-- | The combining character <tt>DEVANAGARI SIGN NUKTA</tt> from the
--   Unicode standard, defined by <tt>'\x093c'</tt> (•़).
DevanagariSignNukta :: CombiningCharacter

-- | The combining character <tt>DEVANAGARI SIGN VIRAMA</tt> from the
--   Unicode standard, defined by <tt>'\x094d'</tt> (•्).
DevanagariSignVirama :: CombiningCharacter

-- | The combining character <tt>DEVANAGARI STRESS SIGN UDATTA</tt> from
--   the Unicode standard, defined by <tt>'\x0951'</tt> (•॑).
DevanagariStressSignUdatta :: CombiningCharacter

-- | The combining character <tt>DEVANAGARI STRESS SIGN ANUDATTA</tt> from
--   the Unicode standard, defined by <tt>'\x0952'</tt> (•॒).
DevanagariStressSignAnudatta :: CombiningCharacter

-- | The combining character <tt>DEVANAGARI GRAVE ACCENT</tt> from the
--   Unicode standard, defined by <tt>'\x0953'</tt> (•॓).
DevanagariGraveAccent :: CombiningCharacter

-- | The combining character <tt>DEVANAGARI ACUTE ACCENT</tt> from the
--   Unicode standard, defined by <tt>'\x0954'</tt> (•॔).
DevanagariAcuteAccent :: CombiningCharacter

-- | The combining character <tt>BENGALI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x09bc'</tt> (•়).
BengaliSignNukta :: CombiningCharacter

-- | The combining character <tt>BENGALI VOWEL SIGN AA</tt> from the
--   Unicode standard, defined by <tt>'\x09be'</tt> (•া).
BengaliVowelSignAa :: CombiningCharacter

-- | The combining character <tt>BENGALI SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x09cd'</tt> (•্).
BengaliSignVirama :: CombiningCharacter

-- | The combining character <tt>BENGALI AU LENGTH MARK</tt> from the
--   Unicode standard, defined by <tt>'\x09d7'</tt> (•ৗ).
BengaliAuLengthMark :: CombiningCharacter

-- | The combining character <tt>GURMUKHI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x0a3c'</tt> (•਼).
GurmukhiSignNukta :: CombiningCharacter

-- | The combining character <tt>GURMUKHI SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x0a4d'</tt> (•੍).
GurmukhiSignVirama :: CombiningCharacter

-- | The combining character <tt>GUJARATI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x0abc'</tt> (•઼).
GujaratiSignNukta :: CombiningCharacter

-- | The combining character <tt>GUJARATI SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x0acd'</tt> (•્).
GujaratiSignVirama :: CombiningCharacter

-- | The combining character <tt>ORIYA SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x0b3c'</tt> (•଼).
OriyaSignNukta :: CombiningCharacter

-- | The combining character <tt>ORIYA VOWEL SIGN AA</tt> from the Unicode
--   standard, defined by <tt>'\x0b3e'</tt> (•ା).
OriyaVowelSignAa :: CombiningCharacter

-- | The combining character <tt>ORIYA SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x0b4d'</tt> (•୍).
OriyaSignVirama :: CombiningCharacter

-- | The combining character <tt>ORIYA AI LENGTH MARK</tt> from the Unicode
--   standard, defined by <tt>'\x0b56'</tt> (•ୖ).
OriyaAiLengthMark :: CombiningCharacter

-- | The combining character <tt>ORIYA AU LENGTH MARK</tt> from the Unicode
--   standard, defined by <tt>'\x0b57'</tt> (•ୗ).
OriyaAuLengthMark :: CombiningCharacter

-- | The combining character <tt>TAMIL VOWEL SIGN AA</tt> from the Unicode
--   standard, defined by <tt>'\x0bbe'</tt> (•ா).
TamilVowelSignAa :: CombiningCharacter

-- | The combining character <tt>TAMIL SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x0bcd'</tt> (•்).
TamilSignVirama :: CombiningCharacter

-- | The combining character <tt>TAMIL AU LENGTH MARK</tt> from the Unicode
--   standard, defined by <tt>'\x0bd7'</tt> (•ௗ).
TamilAuLengthMark :: CombiningCharacter

-- | The combining character <tt>TELUGU SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x0c4d'</tt> (•్).
TeluguSignVirama :: CombiningCharacter

-- | The combining character <tt>TELUGU LENGTH MARK</tt> from the Unicode
--   standard, defined by <tt>'\x0c55'</tt> (•ౕ).
TeluguLengthMark :: CombiningCharacter

-- | The combining character <tt>TELUGU AI LENGTH MARK</tt> from the
--   Unicode standard, defined by <tt>'\x0c56'</tt> (•ౖ).
TeluguAiLengthMark :: CombiningCharacter

-- | The combining character <tt>KANNADA SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x0cbc'</tt> (•಼).
KannadaSignNukta :: CombiningCharacter

-- | The combining character <tt>KANNADA VOWEL SIGN UU</tt> from the
--   Unicode standard, defined by <tt>'\x0cc2'</tt> (•ೂ).
KannadaVowelSignUu :: CombiningCharacter

-- | The combining character <tt>KANNADA SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x0ccd'</tt> (•್).
KannadaSignVirama :: CombiningCharacter

-- | The combining character <tt>KANNADA LENGTH MARK</tt> from the Unicode
--   standard, defined by <tt>'\x0cd5'</tt> (•ೕ).
KannadaLengthMark :: CombiningCharacter

-- | The combining character <tt>KANNADA AI LENGTH MARK</tt> from the
--   Unicode standard, defined by <tt>'\x0cd6'</tt> (•ೖ).
KannadaAiLengthMark :: CombiningCharacter

-- | The combining character <tt>MALAYALAM VOWEL SIGN AA</tt> from the
--   Unicode standard, defined by <tt>'\x0d3e'</tt> (•ാ).
MalayalamVowelSignAa :: CombiningCharacter

-- | The combining character <tt>MALAYALAM SIGN VIRAMA</tt> from the
--   Unicode standard, defined by <tt>'\x0d4d'</tt> (•്).
MalayalamSignVirama :: CombiningCharacter

-- | The combining character <tt>MALAYALAM AU LENGTH MARK</tt> from the
--   Unicode standard, defined by <tt>'\x0d57'</tt> (•ൗ).
MalayalamAuLengthMark :: CombiningCharacter

-- | The combining character <tt>SINHALA SIGN AL-LAKUNA</tt> from the
--   Unicode standard, defined by <tt>'\x0dca'</tt> (•්).
SinhalaSignAlLakuna :: CombiningCharacter

-- | The combining character <tt>SINHALA VOWEL SIGN AELA-PILLA</tt> from
--   the Unicode standard, defined by <tt>'\x0dcf'</tt> (•ා).
SinhalaVowelSignAelaPilla :: CombiningCharacter

-- | The combining character <tt>SINHALA VOWEL SIGN GAYANUKITTA</tt> from
--   the Unicode standard, defined by <tt>'\x0ddf'</tt> (•ෟ).
SinhalaVowelSignGayanukitta :: CombiningCharacter

-- | The combining character <tt>THAI CHARACTER SARA U</tt> from the
--   Unicode standard, defined by <tt>'\x0e38'</tt> (•ุ).
ThaiCharacterSaraU :: CombiningCharacter

-- | The combining character <tt>THAI CHARACTER SARA UU</tt> from the
--   Unicode standard, defined by <tt>'\x0e39'</tt> (•ู).
ThaiCharacterSaraUu :: CombiningCharacter

-- | The combining character <tt>THAI CHARACTER PHINTHU</tt> from the
--   Unicode standard, defined by <tt>'\x0e3a'</tt> (•ฺ).
ThaiCharacterPhinthu :: CombiningCharacter

-- | The combining character <tt>THAI CHARACTER MAI EK</tt> from the
--   Unicode standard, defined by <tt>'\x0e48'</tt> (•่).
ThaiCharacterMaiEk :: CombiningCharacter

-- | The combining character <tt>THAI CHARACTER MAI THO</tt> from the
--   Unicode standard, defined by <tt>'\x0e49'</tt> (•้).
ThaiCharacterMaiTho :: CombiningCharacter

-- | The combining character <tt>THAI CHARACTER MAI TRI</tt> from the
--   Unicode standard, defined by <tt>'\x0e4a'</tt> (•๊).
ThaiCharacterMaiTri :: CombiningCharacter

-- | The combining character <tt>THAI CHARACTER MAI CHATTAWA</tt> from the
--   Unicode standard, defined by <tt>'\x0e4b'</tt> (•๋).
ThaiCharacterMaiChattawa :: CombiningCharacter

-- | The combining character <tt>LAO VOWEL SIGN U</tt> from the Unicode
--   standard, defined by <tt>'\x0eb8'</tt> (•ຸ).
LaoVowelSignU :: CombiningCharacter

-- | The combining character <tt>LAO VOWEL SIGN UU</tt> from the Unicode
--   standard, defined by <tt>'\x0eb9'</tt> (•ູ).
LaoVowelSignUu :: CombiningCharacter

-- | The combining character <tt>LAO TONE MAI EK</tt> from the Unicode
--   standard, defined by <tt>'\x0ec8'</tt> (•່).
LaoToneMaiEk :: CombiningCharacter

-- | The combining character <tt>LAO TONE MAI THO</tt> from the Unicode
--   standard, defined by <tt>'\x0ec9'</tt> (•້).
LaoToneMaiTho :: CombiningCharacter

-- | The combining character <tt>LAO TONE MAI TI</tt> from the Unicode
--   standard, defined by <tt>'\x0eca'</tt> (•໊).
LaoToneMaiTi :: CombiningCharacter

-- | The combining character <tt>LAO TONE MAI CATAWA</tt> from the Unicode
--   standard, defined by <tt>'\x0ecb'</tt> (•໋).
LaoToneMaiCatawa :: CombiningCharacter

-- | The combining character <tt>TIBETAN ASTROLOGICAL SIGN -KHYUD PA</tt>
--   from the Unicode standard, defined by <tt>'\x0f18'</tt> (•༘).
TibetanAstrologicalSignKhyudPa :: CombiningCharacter

-- | The combining character <tt>TIBETAN ASTROLOGICAL SIGN SDONG
--   TSHUGS</tt> from the Unicode standard, defined by <tt>'\x0f19'</tt>
--   (•༙).
TibetanAstrologicalSignSdongTshugs :: CombiningCharacter

-- | The combining character <tt>TIBETAN MARK NGAS BZUNG NYI ZLA</tt> from
--   the Unicode standard, defined by <tt>'\x0f35'</tt> (•༵).
TibetanMarkNgasBzungNyiZla :: CombiningCharacter

-- | The combining character <tt>TIBETAN MARK NGAS BZUNG SGOR RTAGS</tt>
--   from the Unicode standard, defined by <tt>'\x0f37'</tt> (•༷).
TibetanMarkNgasBzungSgorRtags :: CombiningCharacter

-- | The combining character <tt>TIBETAN MARK TSA -PHRU</tt> from the
--   Unicode standard, defined by <tt>'\x0f39'</tt> (•༹).
TibetanMarkTsaPhru :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN AA</tt> from the
--   Unicode standard, defined by <tt>'\x0f71'</tt> (•ཱ).
TibetanVowelSignAa :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN I</tt> from the Unicode
--   standard, defined by <tt>'\x0f72'</tt> (•ི).
TibetanVowelSignI :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN U</tt> from the Unicode
--   standard, defined by <tt>'\x0f74'</tt> (•ུ).
TibetanVowelSignU :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN E</tt> from the Unicode
--   standard, defined by <tt>'\x0f7a'</tt> (•ེ).
TibetanVowelSignE :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN EE</tt> from the
--   Unicode standard, defined by <tt>'\x0f7b'</tt> (•ཻ).
TibetanVowelSignEe :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN O</tt> from the Unicode
--   standard, defined by <tt>'\x0f7c'</tt> (•ོ).
TibetanVowelSignO :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN OO</tt> from the
--   Unicode standard, defined by <tt>'\x0f7d'</tt> (•ཽ).
TibetanVowelSignOo :: CombiningCharacter

-- | The combining character <tt>TIBETAN VOWEL SIGN REVERSED I</tt> from
--   the Unicode standard, defined by <tt>'\x0f80'</tt> (•ྀ).
TibetanVowelSignReversedI :: CombiningCharacter

-- | The combining character <tt>TIBETAN SIGN NYI ZLA NAA DA</tt> from the
--   Unicode standard, defined by <tt>'\x0f82'</tt> (•ྂ).
TibetanSignNyiZlaNaaDa :: CombiningCharacter

-- | The combining character <tt>TIBETAN SIGN SNA LDAN</tt> from the
--   Unicode standard, defined by <tt>'\x0f83'</tt> (•ྃ).
TibetanSignSnaLdan :: CombiningCharacter

-- | The combining character <tt>TIBETAN MARK HALANTA</tt> from the Unicode
--   standard, defined by <tt>'\x0f84'</tt> (•྄).
TibetanMarkHalanta :: CombiningCharacter

-- | The combining character <tt>TIBETAN SIGN LCI RTAGS</tt> from the
--   Unicode standard, defined by <tt>'\x0f86'</tt> (•྆).
TibetanSignLciRtags :: CombiningCharacter

-- | The combining character <tt>TIBETAN SIGN YANG RTAGS</tt> from the
--   Unicode standard, defined by <tt>'\x0f87'</tt> (•྇).
TibetanSignYangRtags :: CombiningCharacter

-- | The combining character <tt>TIBETAN SUBJOINED LETTER SSA</tt> from the
--   Unicode standard, defined by <tt>'\x0fb5'</tt> (•ྵ).
TibetanSubjoinedLetterSsa :: CombiningCharacter

-- | The combining character <tt>TIBETAN SUBJOINED LETTER HA</tt> from the
--   Unicode standard, defined by <tt>'\x0fb7'</tt> (•ྷ).
TibetanSubjoinedLetterHa :: CombiningCharacter

-- | The combining character <tt>TIBETAN SYMBOL PADMA GDAN</tt> from the
--   Unicode standard, defined by <tt>'\x0fc6'</tt> (•࿆).
TibetanSymbolPadmaGdan :: CombiningCharacter

-- | The combining character <tt>MYANMAR VOWEL SIGN II</tt> from the
--   Unicode standard, defined by <tt>'\x102e'</tt> (•ီ).
MyanmarVowelSignIi :: CombiningCharacter

-- | The combining character <tt>MYANMAR SIGN DOT BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1037'</tt> (•့).
MyanmarSignDotBelow :: CombiningCharacter

-- | The combining character <tt>MYANMAR SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x1039'</tt> (•္).
MyanmarSignVirama :: CombiningCharacter

-- | The combining character <tt>MYANMAR SIGN ASAT</tt> from the Unicode
--   standard, defined by <tt>'\x103a'</tt> (•်).
MyanmarSignAsat :: CombiningCharacter

-- | The combining character <tt>MYANMAR SIGN SHAN COUNCIL EMPHATIC
--   TONE</tt> from the Unicode standard, defined by <tt>'\x108d'</tt>
--   (•ႍ).
MyanmarSignShanCouncilEmphaticTone :: CombiningCharacter

-- | The combining character <tt>ETHIOPIC COMBINING GEMINATION AND VOWEL
--   LENGTH MARK</tt> from the Unicode standard, defined by
--   <tt>'\x135d'</tt> (•፝).
EthiopicCombiningGeminationAndVowelLengthMark :: CombiningCharacter

-- | The combining character <tt>ETHIOPIC COMBINING VOWEL LENGTH MARK</tt>
--   from the Unicode standard, defined by <tt>'\x135e'</tt> (•፞).
EthiopicCombiningVowelLengthMark :: CombiningCharacter

-- | The combining character <tt>ETHIOPIC COMBINING GEMINATION MARK</tt>
--   from the Unicode standard, defined by <tt>'\x135f'</tt> (•፟).
EthiopicCombiningGeminationMark :: CombiningCharacter

-- | The combining character <tt>TAGALOG SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x1714'</tt> (•᜔).
TagalogSignVirama :: CombiningCharacter

-- | The combining character <tt>HANUNOO SIGN PAMUDPOD</tt> from the
--   Unicode standard, defined by <tt>'\x1734'</tt> (•᜴).
HanunooSignPamudpod :: CombiningCharacter

-- | The combining character <tt>KHMER SIGN COENG</tt> from the Unicode
--   standard, defined by <tt>'\x17d2'</tt> (•្).
KhmerSignCoeng :: CombiningCharacter

-- | The combining character <tt>KHMER SIGN ATTHACAN</tt> from the Unicode
--   standard, defined by <tt>'\x17dd'</tt> (•៝).
KhmerSignAtthacan :: CombiningCharacter

-- | The combining character <tt>MONGOLIAN LETTER ALI GALI DAGALGA</tt>
--   from the Unicode standard, defined by <tt>'\x18a9'</tt> (•ᢩ).
MongolianLetterAliGaliDagalga :: CombiningCharacter

-- | The combining character <tt>LIMBU SIGN MUKPHRENG</tt> from the Unicode
--   standard, defined by <tt>'\x1939'</tt> (•᤹).
LimbuSignMukphreng :: CombiningCharacter

-- | The combining character <tt>LIMBU SIGN KEMPHRENG</tt> from the Unicode
--   standard, defined by <tt>'\x193a'</tt> (•᤺).
LimbuSignKemphreng :: CombiningCharacter

-- | The combining character <tt>LIMBU SIGN SA-I</tt> from the Unicode
--   standard, defined by <tt>'\x193b'</tt> (•᤻).
LimbuSignSaI :: CombiningCharacter

-- | The combining character <tt>BUGINESE VOWEL SIGN I</tt> from the
--   Unicode standard, defined by <tt>'\x1a17'</tt> (•ᨗ).
BugineseVowelSignI :: CombiningCharacter

-- | The combining character <tt>BUGINESE VOWEL SIGN U</tt> from the
--   Unicode standard, defined by <tt>'\x1a18'</tt> (•ᨘ).
BugineseVowelSignU :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN SAKOT</tt> from the Unicode
--   standard, defined by <tt>'\x1a60'</tt> (•᩠).
TaiThamSignSakot :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN TONE-1</tt> from the Unicode
--   standard, defined by <tt>'\x1a75'</tt> (•᩵).
TaiThamSignTone1 :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN TONE-2</tt> from the Unicode
--   standard, defined by <tt>'\x1a76'</tt> (•᩶).
TaiThamSignTone2 :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN KHUEN TONE-3</tt> from the
--   Unicode standard, defined by <tt>'\x1a77'</tt> (•᩷).
TaiThamSignKhuenTone3 :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN KHUEN TONE-4</tt> from the
--   Unicode standard, defined by <tt>'\x1a78'</tt> (•᩸).
TaiThamSignKhuenTone4 :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN KHUEN TONE-5</tt> from the
--   Unicode standard, defined by <tt>'\x1a79'</tt> (•᩹).
TaiThamSignKhuenTone5 :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN RA HAAM</tt> from the
--   Unicode standard, defined by <tt>'\x1a7a'</tt> (•᩺).
TaiThamSignRaHaam :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN MAI SAM</tt> from the
--   Unicode standard, defined by <tt>'\x1a7b'</tt> (•᩻).
TaiThamSignMaiSam :: CombiningCharacter

-- | The combining character <tt>TAI THAM SIGN KHUEN-LUE KARAN</tt> from
--   the Unicode standard, defined by <tt>'\x1a7c'</tt> (•᩼).
TaiThamSignKhuenLueKaran :: CombiningCharacter

-- | The combining character <tt>TAI THAM COMBINING CRYPTOGRAMMIC DOT</tt>
--   from the Unicode standard, defined by <tt>'\x1a7f'</tt> (•᩿).
TaiThamCombiningCryptogrammicDot :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLED CIRCUMFLEX ACCENT</tt>
--   from the Unicode standard, defined by <tt>'\x1ab0'</tt> (•᪰).
CombiningDoubledCircumflexAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING DIAERESIS-RING</tt> from the
--   Unicode standard, defined by <tt>'\x1ab1'</tt> (•᪱).
CombiningDiaeresisRing :: CombiningCharacter

-- | The combining character <tt>COMBINING INFINITY</tt> from the Unicode
--   standard, defined by <tt>'\x1ab2'</tt> (•᪲).
CombiningInfinity :: CombiningCharacter

-- | The combining character <tt>COMBINING DOWNWARDS ARROW</tt> from the
--   Unicode standard, defined by <tt>'\x1ab3'</tt> (•᪳).
CombiningDownwardsArrow :: CombiningCharacter

-- | The combining character <tt>COMBINING TRIPLE DOT</tt> from the Unicode
--   standard, defined by <tt>'\x1ab4'</tt> (•᪴).
CombiningTripleDot :: CombiningCharacter

-- | The combining character <tt>COMBINING X-X BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x1ab5'</tt> (•᪵).
CombiningXXBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING WIGGLY LINE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1ab6'</tt> (•᪶).
CombiningWigglyLineBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING OPEN MARK BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1ab7'</tt> (•᪷).
CombiningOpenMarkBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE OPEN MARK BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x1ab8'</tt> (•᪸).
CombiningDoubleOpenMarkBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LIGHT CENTRALIZATION STROKE
--   BELOW</tt> from the Unicode standard, defined by <tt>'\x1ab9'</tt>
--   (•᪹).
CombiningLightCentralizationStrokeBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING STRONG CENTRALIZATION STROKE
--   BELOW</tt> from the Unicode standard, defined by <tt>'\x1aba'</tt>
--   (•᪺).
CombiningStrongCentralizationStrokeBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING PARENTHESES ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x1abb'</tt> (•᪻).
CombiningParenthesesAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE PARENTHESES ABOVE</tt>
--   from the Unicode standard, defined by <tt>'\x1abc'</tt> (•᪼).
CombiningDoubleParenthesesAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING PARENTHESES BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1abd'</tt> (•᪽).
CombiningParenthesesBelow :: CombiningCharacter

-- | The combining character <tt>BALINESE SIGN REREKAN</tt> from the
--   Unicode standard, defined by <tt>'\x1b34'</tt> (•᬴).
BalineseSignRerekan :: CombiningCharacter

-- | The combining character <tt>BALINESE VOWEL SIGN TEDUNG</tt> from the
--   Unicode standard, defined by <tt>'\x1b35'</tt> (•ᬵ).
BalineseVowelSignTedung :: CombiningCharacter

-- | The combining character <tt>BALINESE ADEG ADEG</tt> from the Unicode
--   standard, defined by <tt>'\x1b44'</tt> (•᭄).
BalineseAdegAdeg :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING
--   TEGEH</tt> from the Unicode standard, defined by <tt>'\x1b6b'</tt>
--   (•᭫).
BalineseMusicalSymbolCombiningTegeh :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING
--   ENDEP</tt> from the Unicode standard, defined by <tt>'\x1b6c'</tt>
--   (•᭬).
BalineseMusicalSymbolCombiningEndep :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING
--   KEMPUL</tt> from the Unicode standard, defined by <tt>'\x1b6d'</tt>
--   (•᭭).
BalineseMusicalSymbolCombiningKempul :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING
--   KEMPLI</tt> from the Unicode standard, defined by <tt>'\x1b6e'</tt>
--   (•᭮).
BalineseMusicalSymbolCombiningKempli :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING
--   JEGOGAN</tt> from the Unicode standard, defined by <tt>'\x1b6f'</tt>
--   (•᭯).
BalineseMusicalSymbolCombiningJegogan :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING KEMPUL
--   WITH JEGOGAN</tt> from the Unicode standard, defined by
--   <tt>'\x1b70'</tt> (•᭰).
BalineseMusicalSymbolCombiningKempulWithJegogan :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING KEMPLI
--   WITH JEGOGAN</tt> from the Unicode standard, defined by
--   <tt>'\x1b71'</tt> (•᭱).
BalineseMusicalSymbolCombiningKempliWithJegogan :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING
--   BENDE</tt> from the Unicode standard, defined by <tt>'\x1b72'</tt>
--   (•᭲).
BalineseMusicalSymbolCombiningBende :: CombiningCharacter

-- | The combining character <tt>BALINESE MUSICAL SYMBOL COMBINING
--   GONG</tt> from the Unicode standard, defined by <tt>'\x1b73'</tt>
--   (•᭳).
BalineseMusicalSymbolCombiningGong :: CombiningCharacter

-- | The combining character <tt>SUNDANESE SIGN PAMAAEH</tt> from the
--   Unicode standard, defined by <tt>'\x1baa'</tt> (•᮪).
SundaneseSignPamaaeh :: CombiningCharacter

-- | The combining character <tt>SUNDANESE SIGN VIRAMA</tt> from the
--   Unicode standard, defined by <tt>'\x1bab'</tt> (•᮫).
SundaneseSignVirama :: CombiningCharacter

-- | The combining character <tt>BATAK SIGN TOMPI</tt> from the Unicode
--   standard, defined by <tt>'\x1be6'</tt> (•᯦).
BatakSignTompi :: CombiningCharacter

-- | The combining character <tt>BATAK PANGOLAT</tt> from the Unicode
--   standard, defined by <tt>'\x1bf2'</tt> (•᯲).
BatakPangolat :: CombiningCharacter

-- | The combining character <tt>BATAK PANONGONAN</tt> from the Unicode
--   standard, defined by <tt>'\x1bf3'</tt> (•᯳).
BatakPanongonan :: CombiningCharacter

-- | The combining character <tt>LEPCHA SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x1c37'</tt> (•᰷).
LepchaSignNukta :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE KARSHANA</tt> from the Unicode
--   standard, defined by <tt>'\x1cd0'</tt> (•᳐).
VedicToneKarshana :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE SHARA</tt> from the Unicode
--   standard, defined by <tt>'\x1cd1'</tt> (•᳑).
VedicToneShara :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE PRENKHA</tt> from the Unicode
--   standard, defined by <tt>'\x1cd2'</tt> (•᳒).
VedicTonePrenkha :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN YAJURVEDIC MIDLINE SVARITA</tt>
--   from the Unicode standard, defined by <tt>'\x1cd4'</tt> (•᳔).
VedicSignYajurvedicMidlineSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE YAJURVEDIC AGGRAVATED
--   INDEPENDENT SVARITA</tt> from the Unicode standard, defined by
--   <tt>'\x1cd5'</tt> (•᳕).
VedicToneYajurvedicAggravatedIndependentSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE YAJURVEDIC INDEPENDENT
--   SVARITA</tt> from the Unicode standard, defined by <tt>'\x1cd6'</tt>
--   (•᳖).
VedicToneYajurvedicIndependentSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE YAJURVEDIC KATHAKA INDEPENDENT
--   SVARITA</tt> from the Unicode standard, defined by <tt>'\x1cd7'</tt>
--   (•᳗).
VedicToneYajurvedicKathakaIndependentSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE CANDRA BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1cd8'</tt> (•᳘).
VedicToneCandraBelow :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE YAJURVEDIC KATHAKA INDEPENDENT
--   SVARITA SCHROEDER</tt> from the Unicode standard, defined by
--   <tt>'\x1cd9'</tt> (•᳙).
VedicToneYajurvedicKathakaIndependentSvaritaSchroeder :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE DOUBLE SVARITA</tt> from the
--   Unicode standard, defined by <tt>'\x1cda'</tt> (•᳚).
VedicToneDoubleSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE TRIPLE SVARITA</tt> from the
--   Unicode standard, defined by <tt>'\x1cdb'</tt> (•᳛).
VedicToneTripleSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE KATHAKA ANUDATTA</tt> from the
--   Unicode standard, defined by <tt>'\x1cdc'</tt> (•᳜).
VedicToneKathakaAnudatta :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE DOT BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x1cdd'</tt> (•᳝).
VedicToneDotBelow :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE TWO DOTS BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1cde'</tt> (•᳞).
VedicToneTwoDotsBelow :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE THREE DOTS BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1cdf'</tt> (•᳟).
VedicToneThreeDotsBelow :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT
--   SVARITA</tt> from the Unicode standard, defined by <tt>'\x1ce0'</tt>
--   (•᳠).
VedicToneRigvedicKashmiriIndependentSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN VISARGA SVARITA</tt> from the
--   Unicode standard, defined by <tt>'\x1ce2'</tt> (•᳢).
VedicSignVisargaSvarita :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN VISARGA UDATTA</tt> from the
--   Unicode standard, defined by <tt>'\x1ce3'</tt> (•᳣).
VedicSignVisargaUdatta :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN REVERSED VISARGA UDATTA</tt>
--   from the Unicode standard, defined by <tt>'\x1ce4'</tt> (•᳤).
VedicSignReversedVisargaUdatta :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN VISARGA ANUDATTA</tt> from the
--   Unicode standard, defined by <tt>'\x1ce5'</tt> (•᳥).
VedicSignVisargaAnudatta :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN REVERSED VISARGA ANUDATTA</tt>
--   from the Unicode standard, defined by <tt>'\x1ce6'</tt> (•᳦).
VedicSignReversedVisargaAnudatta :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN VISARGA UDATTA WITH TAIL</tt>
--   from the Unicode standard, defined by <tt>'\x1ce7'</tt> (•᳧).
VedicSignVisargaUdattaWithTail :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN VISARGA ANUDATTA WITH TAIL</tt>
--   from the Unicode standard, defined by <tt>'\x1ce8'</tt> (•᳨).
VedicSignVisargaAnudattaWithTail :: CombiningCharacter

-- | The combining character <tt>VEDIC SIGN TIRYAK</tt> from the Unicode
--   standard, defined by <tt>'\x1ced'</tt> (•᳭).
VedicSignTiryak :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE CANDRA ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x1cf4'</tt> (•᳴).
VedicToneCandraAbove :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE RING ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x1cf8'</tt> (•᳸).
VedicToneRingAbove :: CombiningCharacter

-- | The combining character <tt>VEDIC TONE DOUBLE RING ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x1cf9'</tt> (•᳹).
VedicToneDoubleRingAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DOTTED GRAVE ACCENT</tt> from
--   the Unicode standard, defined by <tt>'\x1dc0'</tt> (•᷀).
CombiningDottedGraveAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING DOTTED ACUTE ACCENT</tt> from
--   the Unicode standard, defined by <tt>'\x1dc1'</tt> (•᷁).
CombiningDottedAcuteAccent :: CombiningCharacter

-- | The combining character <tt>COMBINING SNAKE BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1dc2'</tt> (•᷂).
CombiningSnakeBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING SUSPENSION MARK</tt> from the
--   Unicode standard, defined by <tt>'\x1dc3'</tt> (•᷃).
CombiningSuspensionMark :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON-ACUTE</tt> from the
--   Unicode standard, defined by <tt>'\x1dc4'</tt> (•᷄).
CombiningMacronAcute :: CombiningCharacter

-- | The combining character <tt>COMBINING GRAVE-MACRON</tt> from the
--   Unicode standard, defined by <tt>'\x1dc5'</tt> (•᷅).
CombiningGraveMacron :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON-GRAVE</tt> from the
--   Unicode standard, defined by <tt>'\x1dc6'</tt> (•᷆).
CombiningMacronGrave :: CombiningCharacter

-- | The combining character <tt>COMBINING ACUTE-MACRON</tt> from the
--   Unicode standard, defined by <tt>'\x1dc7'</tt> (•᷇).
CombiningAcuteMacron :: CombiningCharacter

-- | The combining character <tt>COMBINING GRAVE-ACUTE-GRAVE</tt> from the
--   Unicode standard, defined by <tt>'\x1dc8'</tt> (•᷈).
CombiningGraveAcuteGrave :: CombiningCharacter

-- | The combining character <tt>COMBINING ACUTE-GRAVE-ACUTE</tt> from the
--   Unicode standard, defined by <tt>'\x1dc9'</tt> (•᷉).
CombiningAcuteGraveAcute :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER R BELOW</tt>
--   from the Unicode standard, defined by <tt>'\x1dca'</tt> (•᷊).
CombiningLatinSmallLetterRBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING BREVE-MACRON</tt> from the
--   Unicode standard, defined by <tt>'\x1dcb'</tt> (•᷋).
CombiningBreveMacron :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON-BREVE</tt> from the
--   Unicode standard, defined by <tt>'\x1dcc'</tt> (•᷌).
CombiningMacronBreve :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE CIRCUMFLEX ABOVE</tt>
--   from the Unicode standard, defined by <tt>'\x1dcd'</tt> (•᷍).
CombiningDoubleCircumflexAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING OGONEK ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x1dce'</tt> (•᷎).
CombiningOgonekAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING ZIGZAG BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x1dcf'</tt> (•᷏).
CombiningZigzagBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING IS BELOW</tt> from the Unicode
--   standard, defined by <tt>'\x1dd0'</tt> (•᷐).
CombiningIsBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING UR ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x1dd1'</tt> (•᷑).
CombiningUrAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING US ABOVE</tt> from the Unicode
--   standard, defined by <tt>'\x1dd2'</tt> (•᷒).
CombiningUsAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER FLATTENED
--   OPEN A ABOVE</tt> from the Unicode standard, defined by
--   <tt>'\x1dd3'</tt> (•ᷓ).
CombiningLatinSmallLetterFlattenedOpenAAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER AE</tt> from
--   the Unicode standard, defined by <tt>'\x1dd4'</tt> (•ᷔ).
CombiningLatinSmallLetterAe :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER AO</tt> from
--   the Unicode standard, defined by <tt>'\x1dd5'</tt> (•ᷕ).
CombiningLatinSmallLetterAo :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER AV</tt> from
--   the Unicode standard, defined by <tt>'\x1dd6'</tt> (•ᷖ).
CombiningLatinSmallLetterAv :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER C
--   CEDILLA</tt> from the Unicode standard, defined by <tt>'\x1dd7'</tt>
--   (•ᷗ).
CombiningLatinSmallLetterCCedilla :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER INSULAR
--   D</tt> from the Unicode standard, defined by <tt>'\x1dd8'</tt> (•ᷘ).
CombiningLatinSmallLetterInsularD :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER ETH</tt> from
--   the Unicode standard, defined by <tt>'\x1dd9'</tt> (•ᷙ).
CombiningLatinSmallLetterEth :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER G</tt> from
--   the Unicode standard, defined by <tt>'\x1dda'</tt> (•ᷚ).
CombiningLatinSmallLetterG :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN LETTER SMALL CAPITAL
--   G</tt> from the Unicode standard, defined by <tt>'\x1ddb'</tt> (•ᷛ).
CombiningLatinLetterSmallCapitalG :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER K</tt> from
--   the Unicode standard, defined by <tt>'\x1ddc'</tt> (•ᷜ).
CombiningLatinSmallLetterK :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER L</tt> from
--   the Unicode standard, defined by <tt>'\x1ddd'</tt> (•ᷝ).
CombiningLatinSmallLetterL :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN LETTER SMALL CAPITAL
--   L</tt> from the Unicode standard, defined by <tt>'\x1dde'</tt> (•ᷞ).
CombiningLatinLetterSmallCapitalL :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN LETTER SMALL CAPITAL
--   M</tt> from the Unicode standard, defined by <tt>'\x1ddf'</tt> (•ᷟ).
CombiningLatinLetterSmallCapitalM :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER N</tt> from
--   the Unicode standard, defined by <tt>'\x1de0'</tt> (•ᷠ).
CombiningLatinSmallLetterN :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN LETTER SMALL CAPITAL
--   N</tt> from the Unicode standard, defined by <tt>'\x1de1'</tt> (•ᷡ).
CombiningLatinLetterSmallCapitalN :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN LETTER SMALL CAPITAL
--   R</tt> from the Unicode standard, defined by <tt>'\x1de2'</tt> (•ᷢ).
CombiningLatinLetterSmallCapitalR :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER R
--   ROTUNDA</tt> from the Unicode standard, defined by <tt>'\x1de3'</tt>
--   (•ᷣ).
CombiningLatinSmallLetterRRotunda :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER S</tt> from
--   the Unicode standard, defined by <tt>'\x1de4'</tt> (•ᷤ).
CombiningLatinSmallLetterS :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER LONG S</tt>
--   from the Unicode standard, defined by <tt>'\x1de5'</tt> (•ᷥ).
CombiningLatinSmallLetterLongS :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER Z</tt> from
--   the Unicode standard, defined by <tt>'\x1de6'</tt> (•ᷦ).
CombiningLatinSmallLetterZ :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER ALPHA</tt>
--   from the Unicode standard, defined by <tt>'\x1de7'</tt> (•ᷧ).
CombiningLatinSmallLetterAlpha :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER B</tt> from
--   the Unicode standard, defined by <tt>'\x1de8'</tt> (•ᷨ).
CombiningLatinSmallLetterB :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER BETA</tt>
--   from the Unicode standard, defined by <tt>'\x1de9'</tt> (•ᷩ).
CombiningLatinSmallLetterBeta :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER SCHWA</tt>
--   from the Unicode standard, defined by <tt>'\x1dea'</tt> (•ᷪ).
CombiningLatinSmallLetterSchwa :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER F</tt> from
--   the Unicode standard, defined by <tt>'\x1deb'</tt> (•ᷫ).
CombiningLatinSmallLetterF :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER L WITH DOUBLE
--   MIDDLE TILDE</tt> from the Unicode standard, defined by
--   <tt>'\x1dec'</tt> (•ᷬ).
CombiningLatinSmallLetterLWithDoubleMiddleTilde :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER O WITH LIGHT
--   CENTRALIZATION STROKE</tt> from the Unicode standard, defined by
--   <tt>'\x1ded'</tt> (•ᷭ).
CombiningLatinSmallLetterOWithLightCentralizationStroke :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER P</tt> from
--   the Unicode standard, defined by <tt>'\x1dee'</tt> (•ᷮ).
CombiningLatinSmallLetterP :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER ESH</tt> from
--   the Unicode standard, defined by <tt>'\x1def'</tt> (•ᷯ).
CombiningLatinSmallLetterEsh :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER U WITH LIGHT
--   CENTRALIZATION STROKE</tt> from the Unicode standard, defined by
--   <tt>'\x1df0'</tt> (•ᷰ).
CombiningLatinSmallLetterUWithLightCentralizationStroke :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER W</tt> from
--   the Unicode standard, defined by <tt>'\x1df1'</tt> (•ᷱ).
CombiningLatinSmallLetterW :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER A WITH
--   DIAERESIS</tt> from the Unicode standard, defined by <tt>'\x1df2'</tt>
--   (•ᷲ).
CombiningLatinSmallLetterAWithDiaeresis :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER O WITH
--   DIAERESIS</tt> from the Unicode standard, defined by <tt>'\x1df3'</tt>
--   (•ᷳ).
CombiningLatinSmallLetterOWithDiaeresis :: CombiningCharacter

-- | The combining character <tt>COMBINING LATIN SMALL LETTER U WITH
--   DIAERESIS</tt> from the Unicode standard, defined by <tt>'\x1df4'</tt>
--   (•ᷴ).
CombiningLatinSmallLetterUWithDiaeresis :: CombiningCharacter

-- | The combining character <tt>COMBINING UP TACK ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x1df5'</tt> (•᷵).
CombiningUpTackAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING DELETION MARK</tt> from the
--   Unicode standard, defined by <tt>'\x1dfb'</tt> (•᷻).
CombiningDeletionMark :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE INVERTED BREVE BELOW</tt>
--   from the Unicode standard, defined by <tt>'\x1dfc'</tt> (•᷼).
CombiningDoubleInvertedBreveBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING ALMOST EQUAL TO BELOW</tt> from
--   the Unicode standard, defined by <tt>'\x1dfd'</tt> (•᷽).
CombiningAlmostEqualToBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT ARROWHEAD ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x1dfe'</tt> (•᷾).
CombiningLeftArrowheadAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT ARROWHEAD AND DOWN
--   ARROWHEAD BELOW</tt> from the Unicode standard, defined by
--   <tt>'\x1dff'</tt> (•᷿).
CombiningRightArrowheadAndDownArrowheadBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT HARPOON ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x20d0'</tt> (•⃐).
CombiningLeftHarpoonAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT HARPOON ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x20d1'</tt> (•⃑).
CombiningRightHarpoonAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LONG VERTICAL LINE OVERLAY</tt>
--   from the Unicode standard, defined by <tt>'\x20d2'</tt> (•⃒).
CombiningLongVerticalLineOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING SHORT VERTICAL LINE OVERLAY</tt>
--   from the Unicode standard, defined by <tt>'\x20d3'</tt> (•⃓).
CombiningShortVerticalLineOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING ANTICLOCKWISE ARROW ABOVE</tt>
--   from the Unicode standard, defined by <tt>'\x20d4'</tt> (•⃔).
CombiningAnticlockwiseArrowAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING CLOCKWISE ARROW ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x20d5'</tt> (•⃕).
CombiningClockwiseArrowAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT ARROW ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x20d6'</tt> (•⃖).
CombiningLeftArrowAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT ARROW ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x20d7'</tt> (•⃗).
CombiningRightArrowAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING RING OVERLAY</tt> from the
--   Unicode standard, defined by <tt>'\x20d8'</tt> (•⃘).
CombiningRingOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING CLOCKWISE RING OVERLAY</tt> from
--   the Unicode standard, defined by <tt>'\x20d9'</tt> (•⃙).
CombiningClockwiseRingOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING ANTICLOCKWISE RING OVERLAY</tt>
--   from the Unicode standard, defined by <tt>'\x20da'</tt> (•⃚).
CombiningAnticlockwiseRingOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING THREE DOTS ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x20db'</tt> (•⃛).
CombiningThreeDotsAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING FOUR DOTS ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x20dc'</tt> (•⃜).
CombiningFourDotsAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT RIGHT ARROW ABOVE</tt> from
--   the Unicode standard, defined by <tt>'\x20e1'</tt> (•⃡).
CombiningLeftRightArrowAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING REVERSE SOLIDUS OVERLAY</tt>
--   from the Unicode standard, defined by <tt>'\x20e5'</tt> (•⃥).
CombiningReverseSolidusOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE VERTICAL STROKE
--   OVERLAY</tt> from the Unicode standard, defined by <tt>'\x20e6'</tt>
--   (•⃦).
CombiningDoubleVerticalStrokeOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING ANNUITY SYMBOL</tt> from the
--   Unicode standard, defined by <tt>'\x20e7'</tt> (•⃧).
CombiningAnnuitySymbol :: CombiningCharacter

-- | The combining character <tt>COMBINING TRIPLE UNDERDOT</tt> from the
--   Unicode standard, defined by <tt>'\x20e8'</tt> (•⃨).
CombiningTripleUnderdot :: CombiningCharacter

-- | The combining character <tt>COMBINING WIDE BRIDGE ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x20e9'</tt> (•⃩).
CombiningWideBridgeAbove :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFTWARDS ARROW OVERLAY</tt>
--   from the Unicode standard, defined by <tt>'\x20ea'</tt> (•⃪).
CombiningLeftwardsArrowOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING LONG DOUBLE SOLIDUS OVERLAY</tt>
--   from the Unicode standard, defined by <tt>'\x20eb'</tt> (•⃫).
CombiningLongDoubleSolidusOverlay :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHTWARDS HARPOON WITH BARB
--   DOWNWARDS</tt> from the Unicode standard, defined by <tt>'\x20ec'</tt>
--   (•⃬).
CombiningRightwardsHarpoonWithBarbDownwards :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFTWARDS HARPOON WITH BARB
--   DOWNWARDS</tt> from the Unicode standard, defined by <tt>'\x20ed'</tt>
--   (•⃭).
CombiningLeftwardsHarpoonWithBarbDownwards :: CombiningCharacter

-- | The combining character <tt>COMBINING LEFT ARROW BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x20ee'</tt> (•⃮).
CombiningLeftArrowBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING RIGHT ARROW BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x20ef'</tt> (•⃯).
CombiningRightArrowBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING ASTERISK ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x20f0'</tt> (•⃰).
CombiningAsteriskAbove :: CombiningCharacter

-- | The combining character <tt>COPTIC COMBINING NI ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x2cef'</tt> (•⳯).
CopticCombiningNiAbove :: CombiningCharacter

-- | The combining character <tt>COPTIC COMBINING SPIRITUS ASPER</tt> from
--   the Unicode standard, defined by <tt>'\x2cf0'</tt> (•⳰).
CopticCombiningSpiritusAsper :: CombiningCharacter

-- | The combining character <tt>COPTIC COMBINING SPIRITUS LENIS</tt> from
--   the Unicode standard, defined by <tt>'\x2cf1'</tt> (•⳱).
CopticCombiningSpiritusLenis :: CombiningCharacter

-- | The combining character <tt>TIFINAGH CONSONANT JOINER</tt> from the
--   Unicode standard, defined by <tt>'\x2d7f'</tt> (•⵿).
TifinaghConsonantJoiner :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER BE</tt> from the
--   Unicode standard, defined by <tt>'\x2de0'</tt> (•ⷠ).
CombiningCyrillicLetterBe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER VE</tt> from the
--   Unicode standard, defined by <tt>'\x2de1'</tt> (•ⷡ).
CombiningCyrillicLetterVe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER GHE</tt> from
--   the Unicode standard, defined by <tt>'\x2de2'</tt> (•ⷢ).
CombiningCyrillicLetterGhe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER DE</tt> from the
--   Unicode standard, defined by <tt>'\x2de3'</tt> (•ⷣ).
CombiningCyrillicLetterDe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER ZHE</tt> from
--   the Unicode standard, defined by <tt>'\x2de4'</tt> (•ⷤ).
CombiningCyrillicLetterZhe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER ZE</tt> from the
--   Unicode standard, defined by <tt>'\x2de5'</tt> (•ⷥ).
CombiningCyrillicLetterZe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER KA</tt> from the
--   Unicode standard, defined by <tt>'\x2de6'</tt> (•ⷦ).
CombiningCyrillicLetterKa :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER EL</tt> from the
--   Unicode standard, defined by <tt>'\x2de7'</tt> (•ⷧ).
CombiningCyrillicLetterEl :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER EM</tt> from the
--   Unicode standard, defined by <tt>'\x2de8'</tt> (•ⷨ).
CombiningCyrillicLetterEm :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER EN</tt> from the
--   Unicode standard, defined by <tt>'\x2de9'</tt> (•ⷩ).
CombiningCyrillicLetterEn :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER O</tt> from the
--   Unicode standard, defined by <tt>'\x2dea'</tt> (•ⷪ).
CombiningCyrillicLetterO :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER PE</tt> from the
--   Unicode standard, defined by <tt>'\x2deb'</tt> (•ⷫ).
CombiningCyrillicLetterPe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER ER</tt> from the
--   Unicode standard, defined by <tt>'\x2dec'</tt> (•ⷬ).
CombiningCyrillicLetterEr :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER ES</tt> from the
--   Unicode standard, defined by <tt>'\x2ded'</tt> (•ⷭ).
CombiningCyrillicLetterEs :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER TE</tt> from the
--   Unicode standard, defined by <tt>'\x2dee'</tt> (•ⷮ).
CombiningCyrillicLetterTe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER HA</tt> from the
--   Unicode standard, defined by <tt>'\x2def'</tt> (•ⷯ).
CombiningCyrillicLetterHa :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER TSE</tt> from
--   the Unicode standard, defined by <tt>'\x2df0'</tt> (•ⷰ).
CombiningCyrillicLetterTse :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER CHE</tt> from
--   the Unicode standard, defined by <tt>'\x2df1'</tt> (•ⷱ).
CombiningCyrillicLetterChe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER SHA</tt> from
--   the Unicode standard, defined by <tt>'\x2df2'</tt> (•ⷲ).
CombiningCyrillicLetterSha :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER SHCHA</tt> from
--   the Unicode standard, defined by <tt>'\x2df3'</tt> (•ⷳ).
CombiningCyrillicLetterShcha :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER FITA</tt> from
--   the Unicode standard, defined by <tt>'\x2df4'</tt> (•ⷴ).
CombiningCyrillicLetterFita :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER ES-TE</tt> from
--   the Unicode standard, defined by <tt>'\x2df5'</tt> (•ⷵ).
CombiningCyrillicLetterEsTe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER A</tt> from the
--   Unicode standard, defined by <tt>'\x2df6'</tt> (•ⷶ).
CombiningCyrillicLetterA :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER IE</tt> from the
--   Unicode standard, defined by <tt>'\x2df7'</tt> (•ⷷ).
CombiningCyrillicLetterIe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER DJERV</tt> from
--   the Unicode standard, defined by <tt>'\x2df8'</tt> (•ⷸ).
CombiningCyrillicLetterDjerv :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER MONOGRAPH
--   UK</tt> from the Unicode standard, defined by <tt>'\x2df9'</tt> (•ⷹ).
CombiningCyrillicLetterMonographUk :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER YAT</tt> from
--   the Unicode standard, defined by <tt>'\x2dfa'</tt> (•ⷺ).
CombiningCyrillicLetterYat :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER YU</tt> from the
--   Unicode standard, defined by <tt>'\x2dfb'</tt> (•ⷻ).
CombiningCyrillicLetterYu :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER IOTIFIED A</tt>
--   from the Unicode standard, defined by <tt>'\x2dfc'</tt> (•ⷼ).
CombiningCyrillicLetterIotifiedA :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER LITTLE YUS</tt>
--   from the Unicode standard, defined by <tt>'\x2dfd'</tt> (•ⷽ).
CombiningCyrillicLetterLittleYus :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER BIG YUS</tt>
--   from the Unicode standard, defined by <tt>'\x2dfe'</tt> (•ⷾ).
CombiningCyrillicLetterBigYus :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER IOTIFIED BIG
--   YUS</tt> from the Unicode standard, defined by <tt>'\x2dff'</tt> (•ⷿ).
CombiningCyrillicLetterIotifiedBigYus :: CombiningCharacter

-- | The combining character <tt>IDEOGRAPHIC LEVEL TONE MARK</tt> from the
--   Unicode standard, defined by <tt>'\x302a'</tt> (•〪).
IdeographicLevelToneMark :: CombiningCharacter

-- | The combining character <tt>IDEOGRAPHIC RISING TONE MARK</tt> from the
--   Unicode standard, defined by <tt>'\x302b'</tt> (•〫).
IdeographicRisingToneMark :: CombiningCharacter

-- | The combining character <tt>IDEOGRAPHIC DEPARTING TONE MARK</tt> from
--   the Unicode standard, defined by <tt>'\x302c'</tt> (•〬).
IdeographicDepartingToneMark :: CombiningCharacter

-- | The combining character <tt>IDEOGRAPHIC ENTERING TONE MARK</tt> from
--   the Unicode standard, defined by <tt>'\x302d'</tt> (•〭).
IdeographicEnteringToneMark :: CombiningCharacter

-- | The combining character <tt>HANGUL SINGLE DOT TONE MARK</tt> from the
--   Unicode standard, defined by <tt>'\x302e'</tt> (•〮).
HangulSingleDotToneMark :: CombiningCharacter

-- | The combining character <tt>HANGUL DOUBLE DOT TONE MARK</tt> from the
--   Unicode standard, defined by <tt>'\x302f'</tt> (•〯).
HangulDoubleDotToneMark :: CombiningCharacter

-- | The combining character <tt>COMBINING KATAKANA-HIRAGANA VOICED SOUND
--   MARK</tt> from the Unicode standard, defined by <tt>'\x3099'</tt>
--   (•゙).
CombiningKatakanaHiraganaVoicedSoundMark :: CombiningCharacter

-- | The combining character <tt>COMBINING KATAKANA-HIRAGANA SEMI-VOICED
--   SOUND MARK</tt> from the Unicode standard, defined by
--   <tt>'\x309a'</tt> (•゚).
CombiningKatakanaHiraganaSemiVoicedSoundMark :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC VZMET</tt> from the
--   Unicode standard, defined by <tt>'\xa66f'</tt> (•꙯).
CombiningCyrillicVzmet :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER UKRAINIAN
--   IE</tt> from the Unicode standard, defined by <tt>'\xa674'</tt> (•ꙴ).
CombiningCyrillicLetterUkrainianIe :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER I</tt> from the
--   Unicode standard, defined by <tt>'\xa675'</tt> (•ꙵ).
CombiningCyrillicLetterI :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER YI</tt> from the
--   Unicode standard, defined by <tt>'\xa676'</tt> (•ꙶ).
CombiningCyrillicLetterYi :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER U</tt> from the
--   Unicode standard, defined by <tt>'\xa677'</tt> (•ꙷ).
CombiningCyrillicLetterU :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER HARD SIGN</tt>
--   from the Unicode standard, defined by <tt>'\xa678'</tt> (•ꙸ).
CombiningCyrillicLetterHardSign :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER YERU</tt> from
--   the Unicode standard, defined by <tt>'\xa679'</tt> (•ꙹ).
CombiningCyrillicLetterYeru :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER SOFT SIGN</tt>
--   from the Unicode standard, defined by <tt>'\xa67a'</tt> (•ꙺ).
CombiningCyrillicLetterSoftSign :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER OMEGA</tt> from
--   the Unicode standard, defined by <tt>'\xa67b'</tt> (•ꙻ).
CombiningCyrillicLetterOmega :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC KAVYKA</tt> from the
--   Unicode standard, defined by <tt>'\xa67c'</tt> (•꙼).
CombiningCyrillicKavyka :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC PAYEROK</tt> from the
--   Unicode standard, defined by <tt>'\xa67d'</tt> (•꙽).
CombiningCyrillicPayerok :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER EF</tt> from the
--   Unicode standard, defined by <tt>'\xa69e'</tt> (•ꚞ).
CombiningCyrillicLetterEf :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC LETTER IOTIFIED E</tt>
--   from the Unicode standard, defined by <tt>'\xa69f'</tt> (•ꚟ).
CombiningCyrillicLetterIotifiedE :: CombiningCharacter

-- | The combining character <tt>BAMUM COMBINING MARK KOQNDON</tt> from the
--   Unicode standard, defined by <tt>'\xa6f0'</tt> (•꛰).
BamumCombiningMarkKoqndon :: CombiningCharacter

-- | The combining character <tt>BAMUM COMBINING MARK TUKWENTIS</tt> from
--   the Unicode standard, defined by <tt>'\xa6f1'</tt> (•꛱).
BamumCombiningMarkTukwentis :: CombiningCharacter

-- | The combining character <tt>SYLOTI NAGRI SIGN HASANTA</tt> from the
--   Unicode standard, defined by <tt>'\xa806'</tt> (•꠆).
SylotiNagriSignHasanta :: CombiningCharacter

-- | The combining character <tt>SAURASHTRA SIGN VIRAMA</tt> from the
--   Unicode standard, defined by <tt>'\xa8c4'</tt> (•꣄).
SaurashtraSignVirama :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT ZERO</tt> from
--   the Unicode standard, defined by <tt>'\xa8e0'</tt> (•꣠).
CombiningDevanagariDigitZero :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT ONE</tt> from
--   the Unicode standard, defined by <tt>'\xa8e1'</tt> (•꣡).
CombiningDevanagariDigitOne :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT TWO</tt> from
--   the Unicode standard, defined by <tt>'\xa8e2'</tt> (•꣢).
CombiningDevanagariDigitTwo :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT THREE</tt> from
--   the Unicode standard, defined by <tt>'\xa8e3'</tt> (•꣣).
CombiningDevanagariDigitThree :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT FOUR</tt> from
--   the Unicode standard, defined by <tt>'\xa8e4'</tt> (•꣤).
CombiningDevanagariDigitFour :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT FIVE</tt> from
--   the Unicode standard, defined by <tt>'\xa8e5'</tt> (•꣥).
CombiningDevanagariDigitFive :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT SIX</tt> from
--   the Unicode standard, defined by <tt>'\xa8e6'</tt> (•꣦).
CombiningDevanagariDigitSix :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT SEVEN</tt> from
--   the Unicode standard, defined by <tt>'\xa8e7'</tt> (•꣧).
CombiningDevanagariDigitSeven :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT EIGHT</tt> from
--   the Unicode standard, defined by <tt>'\xa8e8'</tt> (•꣨).
CombiningDevanagariDigitEight :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI DIGIT NINE</tt> from
--   the Unicode standard, defined by <tt>'\xa8e9'</tt> (•꣩).
CombiningDevanagariDigitNine :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI LETTER A</tt> from
--   the Unicode standard, defined by <tt>'\xa8ea'</tt> (•꣪).
CombiningDevanagariLetterA :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI LETTER U</tt> from
--   the Unicode standard, defined by <tt>'\xa8eb'</tt> (•꣫).
CombiningDevanagariLetterU :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI LETTER KA</tt> from
--   the Unicode standard, defined by <tt>'\xa8ec'</tt> (•꣬).
CombiningDevanagariLetterKa :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI LETTER NA</tt> from
--   the Unicode standard, defined by <tt>'\xa8ed'</tt> (•꣭).
CombiningDevanagariLetterNa :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI LETTER PA</tt> from
--   the Unicode standard, defined by <tt>'\xa8ee'</tt> (•꣮).
CombiningDevanagariLetterPa :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI LETTER RA</tt> from
--   the Unicode standard, defined by <tt>'\xa8ef'</tt> (•꣯).
CombiningDevanagariLetterRa :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI LETTER VI</tt> from
--   the Unicode standard, defined by <tt>'\xa8f0'</tt> (•꣰).
CombiningDevanagariLetterVi :: CombiningCharacter

-- | The combining character <tt>COMBINING DEVANAGARI SIGN AVAGRAHA</tt>
--   from the Unicode standard, defined by <tt>'\xa8f1'</tt> (•꣱).
CombiningDevanagariSignAvagraha :: CombiningCharacter

-- | The combining character <tt>KAYAH LI TONE PLOPHU</tt> from the Unicode
--   standard, defined by <tt>'\xa92b'</tt> (•꤫).
KayahLiTonePlophu :: CombiningCharacter

-- | The combining character <tt>KAYAH LI TONE CALYA</tt> from the Unicode
--   standard, defined by <tt>'\xa92c'</tt> (•꤬).
KayahLiToneCalya :: CombiningCharacter

-- | The combining character <tt>KAYAH LI TONE CALYA PLOPHU</tt> from the
--   Unicode standard, defined by <tt>'\xa92d'</tt> (•꤭).
KayahLiToneCalyaPlophu :: CombiningCharacter

-- | The combining character <tt>REJANG VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\xa953'</tt> (•꥓).
RejangVirama :: CombiningCharacter

-- | The combining character <tt>JAVANESE SIGN CECAK TELU</tt> from the
--   Unicode standard, defined by <tt>'\xa9b3'</tt> (•꦳).
JavaneseSignCecakTelu :: CombiningCharacter

-- | The combining character <tt>JAVANESE PANGKON</tt> from the Unicode
--   standard, defined by <tt>'\xa9c0'</tt> (•꧀).
JavanesePangkon :: CombiningCharacter

-- | The combining character <tt>TAI VIET MAI KANG</tt> from the Unicode
--   standard, defined by <tt>'\xaab0'</tt> (•ꪰ).
TaiVietMaiKang :: CombiningCharacter

-- | The combining character <tt>TAI VIET VOWEL I</tt> from the Unicode
--   standard, defined by <tt>'\xaab2'</tt> (•ꪲ).
TaiVietVowelI :: CombiningCharacter

-- | The combining character <tt>TAI VIET VOWEL UE</tt> from the Unicode
--   standard, defined by <tt>'\xaab3'</tt> (•ꪳ).
TaiVietVowelUe :: CombiningCharacter

-- | The combining character <tt>TAI VIET VOWEL U</tt> from the Unicode
--   standard, defined by <tt>'\xaab4'</tt> (•ꪴ).
TaiVietVowelU :: CombiningCharacter

-- | The combining character <tt>TAI VIET MAI KHIT</tt> from the Unicode
--   standard, defined by <tt>'\xaab7'</tt> (•ꪷ).
TaiVietMaiKhit :: CombiningCharacter

-- | The combining character <tt>TAI VIET VOWEL IA</tt> from the Unicode
--   standard, defined by <tt>'\xaab8'</tt> (•ꪸ).
TaiVietVowelIa :: CombiningCharacter

-- | The combining character <tt>TAI VIET VOWEL AM</tt> from the Unicode
--   standard, defined by <tt>'\xaabe'</tt> (•ꪾ).
TaiVietVowelAm :: CombiningCharacter

-- | The combining character <tt>TAI VIET TONE MAI EK</tt> from the Unicode
--   standard, defined by <tt>'\xaabf'</tt> (•꪿).
TaiVietToneMaiEk :: CombiningCharacter

-- | The combining character <tt>TAI VIET TONE MAI THO</tt> from the
--   Unicode standard, defined by <tt>'\xaac1'</tt> (•꫁).
TaiVietToneMaiTho :: CombiningCharacter

-- | The combining character <tt>MEETEI MAYEK VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\xaaf6'</tt> (•꫶).
MeeteiMayekVirama :: CombiningCharacter

-- | The combining character <tt>MEETEI MAYEK APUN IYEK</tt> from the
--   Unicode standard, defined by <tt>'\xabed'</tt> (•꯭).
MeeteiMayekApunIyek :: CombiningCharacter

-- | The combining character <tt>HEBREW POINT JUDEO-SPANISH VARIKA</tt>
--   from the Unicode standard, defined by <tt>'\xfb1e'</tt> (•ﬞ).
HebrewPointJudeoSpanishVarika :: CombiningCharacter

-- | The combining character <tt>COMBINING LIGATURE LEFT HALF</tt> from the
--   Unicode standard, defined by <tt>'\xfe20'</tt> (•︠).
CombiningLigatureLeftHalf :: CombiningCharacter

-- | The combining character <tt>COMBINING LIGATURE RIGHT HALF</tt> from
--   the Unicode standard, defined by <tt>'\xfe21'</tt> (•︡).
CombiningLigatureRightHalf :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE TILDE LEFT HALF</tt> from
--   the Unicode standard, defined by <tt>'\xfe22'</tt> (•︢).
CombiningDoubleTildeLeftHalf :: CombiningCharacter

-- | The combining character <tt>COMBINING DOUBLE TILDE RIGHT HALF</tt>
--   from the Unicode standard, defined by <tt>'\xfe23'</tt> (•︣).
CombiningDoubleTildeRightHalf :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON LEFT HALF</tt> from the
--   Unicode standard, defined by <tt>'\xfe24'</tt> (•︤).
CombiningMacronLeftHalf :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON RIGHT HALF</tt> from the
--   Unicode standard, defined by <tt>'\xfe25'</tt> (•︥).
CombiningMacronRightHalf :: CombiningCharacter

-- | The combining character <tt>COMBINING CONJOINING MACRON</tt> from the
--   Unicode standard, defined by <tt>'\xfe26'</tt> (•︦).
CombiningConjoiningMacron :: CombiningCharacter

-- | The combining character <tt>COMBINING LIGATURE LEFT HALF BELOW</tt>
--   from the Unicode standard, defined by <tt>'\xfe27'</tt> (•︧).
CombiningLigatureLeftHalfBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING LIGATURE RIGHT HALF BELOW</tt>
--   from the Unicode standard, defined by <tt>'\xfe28'</tt> (•︨).
CombiningLigatureRightHalfBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING TILDE LEFT HALF BELOW</tt> from
--   the Unicode standard, defined by <tt>'\xfe29'</tt> (•︩).
CombiningTildeLeftHalfBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING TILDE RIGHT HALF BELOW</tt> from
--   the Unicode standard, defined by <tt>'\xfe2a'</tt> (•︪).
CombiningTildeRightHalfBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON LEFT HALF BELOW</tt> from
--   the Unicode standard, defined by <tt>'\xfe2b'</tt> (•︫).
CombiningMacronLeftHalfBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING MACRON RIGHT HALF BELOW</tt>
--   from the Unicode standard, defined by <tt>'\xfe2c'</tt> (•︬).
CombiningMacronRightHalfBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING CONJOINING MACRON BELOW</tt>
--   from the Unicode standard, defined by <tt>'\xfe2d'</tt> (•︭).
CombiningConjoiningMacronBelow :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC TITLO LEFT HALF</tt>
--   from the Unicode standard, defined by <tt>'\xfe2e'</tt> (•︮).
CombiningCyrillicTitloLeftHalf :: CombiningCharacter

-- | The combining character <tt>COMBINING CYRILLIC TITLO RIGHT HALF</tt>
--   from the Unicode standard, defined by <tt>'\xfe2f'</tt> (•︯).
CombiningCyrillicTitloRightHalf :: CombiningCharacter

-- | The combining character <tt>PHAISTOS DISC SIGN COMBINING OBLIQUE
--   STROKE</tt> from the Unicode standard, defined by <tt>'\x101fd'</tt>
--   (•𐇽).
PhaistosDiscSignCombiningObliqueStroke :: CombiningCharacter

-- | The combining character <tt>COPTIC EPACT THOUSANDS MARK</tt> from the
--   Unicode standard, defined by <tt>'\x102e0'</tt> (•𐋠).
CopticEpactThousandsMark :: CombiningCharacter

-- | The combining character <tt>COMBINING OLD PERMIC LETTER AN</tt> from
--   the Unicode standard, defined by <tt>'\x10376'</tt> (•𐍶).
CombiningOldPermicLetterAn :: CombiningCharacter

-- | The combining character <tt>COMBINING OLD PERMIC LETTER DOI</tt> from
--   the Unicode standard, defined by <tt>'\x10377'</tt> (•𐍷).
CombiningOldPermicLetterDoi :: CombiningCharacter

-- | The combining character <tt>COMBINING OLD PERMIC LETTER ZATA</tt> from
--   the Unicode standard, defined by <tt>'\x10378'</tt> (•𐍸).
CombiningOldPermicLetterZata :: CombiningCharacter

-- | The combining character <tt>COMBINING OLD PERMIC LETTER NENOE</tt>
--   from the Unicode standard, defined by <tt>'\x10379'</tt> (•𐍹).
CombiningOldPermicLetterNenoe :: CombiningCharacter

-- | The combining character <tt>COMBINING OLD PERMIC LETTER SII</tt> from
--   the Unicode standard, defined by <tt>'\x1037a'</tt> (•𐍺).
CombiningOldPermicLetterSii :: CombiningCharacter

-- | The combining character <tt>KHAROSHTHI SIGN DOUBLE RING BELOW</tt>
--   from the Unicode standard, defined by <tt>'\x10a0d'</tt> (•𐨍).
KharoshthiSignDoubleRingBelow :: CombiningCharacter

-- | The combining character <tt>KHAROSHTHI SIGN VISARGA</tt> from the
--   Unicode standard, defined by <tt>'\x10a0f'</tt> (•𐨏).
KharoshthiSignVisarga :: CombiningCharacter

-- | The combining character <tt>KHAROSHTHI SIGN BAR ABOVE</tt> from the
--   Unicode standard, defined by <tt>'\x10a38'</tt> (•𐨸).
KharoshthiSignBarAbove :: CombiningCharacter

-- | The combining character <tt>KHAROSHTHI SIGN CAUDA</tt> from the
--   Unicode standard, defined by <tt>'\x10a39'</tt> (•𐨹).
KharoshthiSignCauda :: CombiningCharacter

-- | The combining character <tt>KHAROSHTHI SIGN DOT BELOW</tt> from the
--   Unicode standard, defined by <tt>'\x10a3a'</tt> (•𐨺).
KharoshthiSignDotBelow :: CombiningCharacter

-- | The combining character <tt>KHAROSHTHI VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x10a3f'</tt> (•𐨿).
KharoshthiVirama :: CombiningCharacter

-- | The combining character <tt>MANICHAEAN ABBREVIATION MARK ABOVE</tt>
--   from the Unicode standard, defined by <tt>'\x10ae5'</tt> (•𐫥).
ManichaeanAbbreviationMarkAbove :: CombiningCharacter

-- | The combining character <tt>MANICHAEAN ABBREVIATION MARK BELOW</tt>
--   from the Unicode standard, defined by <tt>'\x10ae6'</tt> (•𐫦).
ManichaeanAbbreviationMarkBelow :: CombiningCharacter

-- | The combining character <tt>BRAHMI VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x11046'</tt> (•𑁆).
BrahmiVirama :: CombiningCharacter

-- | The combining character <tt>BRAHMI NUMBER JOINER</tt> from the Unicode
--   standard, defined by <tt>'\x1107f'</tt> (•𑁿).
BrahmiNumberJoiner :: CombiningCharacter

-- | The combining character <tt>KAITHI SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x110b9'</tt> (•𑂹).
KaithiSignVirama :: CombiningCharacter

-- | The combining character <tt>KAITHI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x110ba'</tt> (•𑂺).
KaithiSignNukta :: CombiningCharacter

-- | The combining character <tt>CHAKMA SIGN CANDRABINDU</tt> from the
--   Unicode standard, defined by <tt>'\x11100'</tt> (•𑄀).
ChakmaSignCandrabindu :: CombiningCharacter

-- | The combining character <tt>CHAKMA SIGN ANUSVARA</tt> from the Unicode
--   standard, defined by <tt>'\x11101'</tt> (•𑄁).
ChakmaSignAnusvara :: CombiningCharacter

-- | The combining character <tt>CHAKMA SIGN VISARGA</tt> from the Unicode
--   standard, defined by <tt>'\x11102'</tt> (•𑄂).
ChakmaSignVisarga :: CombiningCharacter

-- | The combining character <tt>CHAKMA VOWEL SIGN A</tt> from the Unicode
--   standard, defined by <tt>'\x11127'</tt> (•𑄧).
ChakmaVowelSignA :: CombiningCharacter

-- | The combining character <tt>CHAKMA VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x11133'</tt> (•𑄳).
ChakmaVirama :: CombiningCharacter

-- | The combining character <tt>CHAKMA MAAYYAA</tt> from the Unicode
--   standard, defined by <tt>'\x11134'</tt> (•𑄴).
ChakmaMaayyaa :: CombiningCharacter

-- | The combining character <tt>MAHAJANI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x11173'</tt> (•𑅳).
MahajaniSignNukta :: CombiningCharacter

-- | The combining character <tt>SHARADA SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x111c0'</tt> (•𑇀).
SharadaSignVirama :: CombiningCharacter

-- | The combining character <tt>SHARADA SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x111ca'</tt> (•𑇊).
SharadaSignNukta :: CombiningCharacter

-- | The combining character <tt>KHOJKI SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x11235'</tt> (•𑈵).
KhojkiSignVirama :: CombiningCharacter

-- | The combining character <tt>KHOJKI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x11236'</tt> (•𑈶).
KhojkiSignNukta :: CombiningCharacter

-- | The combining character <tt>KHUDAWADI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x112e9'</tt> (•𑋩).
KhudawadiSignNukta :: CombiningCharacter

-- | The combining character <tt>KHUDAWADI SIGN VIRAMA</tt> from the
--   Unicode standard, defined by <tt>'\x112ea'</tt> (•𑋪).
KhudawadiSignVirama :: CombiningCharacter

-- | The combining character <tt>GRANTHA SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x1133c'</tt> (•𑌼).
GranthaSignNukta :: CombiningCharacter

-- | The combining character <tt>GRANTHA VOWEL SIGN AA</tt> from the
--   Unicode standard, defined by <tt>'\x1133e'</tt> (•𑌾).
GranthaVowelSignAa :: CombiningCharacter

-- | The combining character <tt>GRANTHA SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x1134d'</tt> (•𑍍).
GranthaSignVirama :: CombiningCharacter

-- | The combining character <tt>GRANTHA AU LENGTH MARK</tt> from the
--   Unicode standard, defined by <tt>'\x11357'</tt> (•𑍗).
GranthaAuLengthMark :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA DIGIT ZERO</tt> from the
--   Unicode standard, defined by <tt>'\x11366'</tt> (•𑍦).
CombiningGranthaDigitZero :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA DIGIT ONE</tt> from the
--   Unicode standard, defined by <tt>'\x11367'</tt> (•𑍧).
CombiningGranthaDigitOne :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA DIGIT TWO</tt> from the
--   Unicode standard, defined by <tt>'\x11368'</tt> (•𑍨).
CombiningGranthaDigitTwo :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA DIGIT THREE</tt> from
--   the Unicode standard, defined by <tt>'\x11369'</tt> (•𑍩).
CombiningGranthaDigitThree :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA DIGIT FOUR</tt> from the
--   Unicode standard, defined by <tt>'\x1136a'</tt> (•𑍪).
CombiningGranthaDigitFour :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA DIGIT FIVE</tt> from the
--   Unicode standard, defined by <tt>'\x1136b'</tt> (•𑍫).
CombiningGranthaDigitFive :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA DIGIT SIX</tt> from the
--   Unicode standard, defined by <tt>'\x1136c'</tt> (•𑍬).
CombiningGranthaDigitSix :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA LETTER A</tt> from the
--   Unicode standard, defined by <tt>'\x11370'</tt> (•𑍰).
CombiningGranthaLetterA :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA LETTER KA</tt> from the
--   Unicode standard, defined by <tt>'\x11371'</tt> (•𑍱).
CombiningGranthaLetterKa :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA LETTER NA</tt> from the
--   Unicode standard, defined by <tt>'\x11372'</tt> (•𑍲).
CombiningGranthaLetterNa :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA LETTER VI</tt> from the
--   Unicode standard, defined by <tt>'\x11373'</tt> (•𑍳).
CombiningGranthaLetterVi :: CombiningCharacter

-- | The combining character <tt>COMBINING GRANTHA LETTER PA</tt> from the
--   Unicode standard, defined by <tt>'\x11374'</tt> (•𑍴).
CombiningGranthaLetterPa :: CombiningCharacter

-- | The combining character <tt>NEWA SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x11442'</tt> (•𑑂).
NewaSignVirama :: CombiningCharacter

-- | The combining character <tt>NEWA SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x11446'</tt> (•𑑆).
NewaSignNukta :: CombiningCharacter

-- | The combining character <tt>TIRHUTA VOWEL SIGN AA</tt> from the
--   Unicode standard, defined by <tt>'\x114b0'</tt> (•𑒰).
TirhutaVowelSignAa :: CombiningCharacter

-- | The combining character <tt>TIRHUTA VOWEL SIGN SHORT E</tt> from the
--   Unicode standard, defined by <tt>'\x114ba'</tt> (•𑒺).
TirhutaVowelSignShortE :: CombiningCharacter

-- | The combining character <tt>TIRHUTA VOWEL SIGN SHORT O</tt> from the
--   Unicode standard, defined by <tt>'\x114bd'</tt> (•𑒽).
TirhutaVowelSignShortO :: CombiningCharacter

-- | The combining character <tt>TIRHUTA SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x114c2'</tt> (•𑓂).
TirhutaSignVirama :: CombiningCharacter

-- | The combining character <tt>TIRHUTA SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x114c3'</tt> (•𑓃).
TirhutaSignNukta :: CombiningCharacter

-- | The combining character <tt>SIDDHAM VOWEL SIGN AA</tt> from the
--   Unicode standard, defined by <tt>'\x115af'</tt> (•𑖯).
SiddhamVowelSignAa :: CombiningCharacter

-- | The combining character <tt>SIDDHAM SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x115bf'</tt> (•𑖿).
SiddhamSignVirama :: CombiningCharacter

-- | The combining character <tt>SIDDHAM SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x115c0'</tt> (•𑗀).
SiddhamSignNukta :: CombiningCharacter

-- | The combining character <tt>MODI SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x1163f'</tt> (•𑘿).
ModiSignVirama :: CombiningCharacter

-- | The combining character <tt>TAKRI SIGN VIRAMA</tt> from the Unicode
--   standard, defined by <tt>'\x116b6'</tt> (•𑚶).
TakriSignVirama :: CombiningCharacter

-- | The combining character <tt>TAKRI SIGN NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x116b7'</tt> (•𑚷).
TakriSignNukta :: CombiningCharacter

-- | The combining character <tt>AHOM SIGN KILLER</tt> from the Unicode
--   standard, defined by <tt>'\x1172b'</tt> (•𑜫).
AhomSignKiller :: CombiningCharacter

-- | The combining character <tt>BHAIKSUKI SIGN VIRAMA</tt> from the
--   Unicode standard, defined by <tt>'\x11c3f'</tt> (•𑰿).
BhaiksukiSignVirama :: CombiningCharacter

-- | The combining character <tt>BASSA VAH COMBINING HIGH TONE</tt> from
--   the Unicode standard, defined by <tt>'\x16af0'</tt> (•𖫰).
BassaVahCombiningHighTone :: CombiningCharacter

-- | The combining character <tt>BASSA VAH COMBINING LOW TONE</tt> from the
--   Unicode standard, defined by <tt>'\x16af1'</tt> (•𖫱).
BassaVahCombiningLowTone :: CombiningCharacter

-- | The combining character <tt>BASSA VAH COMBINING MID TONE</tt> from the
--   Unicode standard, defined by <tt>'\x16af2'</tt> (•𖫲).
BassaVahCombiningMidTone :: CombiningCharacter

-- | The combining character <tt>BASSA VAH COMBINING LOW-MID TONE</tt> from
--   the Unicode standard, defined by <tt>'\x16af3'</tt> (•𖫳).
BassaVahCombiningLowMidTone :: CombiningCharacter

-- | The combining character <tt>BASSA VAH COMBINING HIGH-LOW TONE</tt>
--   from the Unicode standard, defined by <tt>'\x16af4'</tt> (•𖫴).
BassaVahCombiningHighLowTone :: CombiningCharacter

-- | The combining character <tt>PAHAWH HMONG MARK CIM TUB</tt> from the
--   Unicode standard, defined by <tt>'\x16b30'</tt> (•𖬰).
PahawhHmongMarkCimTub :: CombiningCharacter

-- | The combining character <tt>PAHAWH HMONG MARK CIM SO</tt> from the
--   Unicode standard, defined by <tt>'\x16b31'</tt> (•𖬱).
PahawhHmongMarkCimSo :: CombiningCharacter

-- | The combining character <tt>PAHAWH HMONG MARK CIM KES</tt> from the
--   Unicode standard, defined by <tt>'\x16b32'</tt> (•𖬲).
PahawhHmongMarkCimKes :: CombiningCharacter

-- | The combining character <tt>PAHAWH HMONG MARK CIM KHAV</tt> from the
--   Unicode standard, defined by <tt>'\x16b33'</tt> (•𖬳).
PahawhHmongMarkCimKhav :: CombiningCharacter

-- | The combining character <tt>PAHAWH HMONG MARK CIM SUAM</tt> from the
--   Unicode standard, defined by <tt>'\x16b34'</tt> (•𖬴).
PahawhHmongMarkCimSuam :: CombiningCharacter

-- | The combining character <tt>PAHAWH HMONG MARK CIM HOM</tt> from the
--   Unicode standard, defined by <tt>'\x16b35'</tt> (•𖬵).
PahawhHmongMarkCimHom :: CombiningCharacter

-- | The combining character <tt>PAHAWH HMONG MARK CIM TAUM</tt> from the
--   Unicode standard, defined by <tt>'\x16b36'</tt> (•𖬶).
PahawhHmongMarkCimTaum :: CombiningCharacter

-- | The combining character <tt>DUPLOYAN DOUBLE MARK</tt> from the Unicode
--   standard, defined by <tt>'\x1bc9e'</tt> (•𛲞).
DuployanDoubleMark :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING STEM</tt> from
--   the Unicode standard, defined by <tt>'\x1d165'</tt> (•𝅥).
MusicalSymbolCombiningStem :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING SPRECHGESANG
--   STEM</tt> from the Unicode standard, defined by <tt>'\x1d166'</tt>
--   (•𝅦).
MusicalSymbolCombiningSprechgesangStem :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING TREMOLO-1</tt>
--   from the Unicode standard, defined by <tt>'\x1d167'</tt> (•𝅧).
MusicalSymbolCombiningTremolo1 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING TREMOLO-2</tt>
--   from the Unicode standard, defined by <tt>'\x1d168'</tt> (•𝅨).
MusicalSymbolCombiningTremolo2 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING TREMOLO-3</tt>
--   from the Unicode standard, defined by <tt>'\x1d169'</tt> (•𝅩).
MusicalSymbolCombiningTremolo3 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING AUGMENTATION
--   DOT</tt> from the Unicode standard, defined by <tt>'\x1d16d'</tt>
--   (•𝅭).
MusicalSymbolCombiningAugmentationDot :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING FLAG-1</tt> from
--   the Unicode standard, defined by <tt>'\x1d16e'</tt> (•𝅮).
MusicalSymbolCombiningFlag1 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING FLAG-2</tt> from
--   the Unicode standard, defined by <tt>'\x1d16f'</tt> (•𝅯).
MusicalSymbolCombiningFlag2 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING FLAG-3</tt> from
--   the Unicode standard, defined by <tt>'\x1d170'</tt> (•𝅰).
MusicalSymbolCombiningFlag3 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING FLAG-4</tt> from
--   the Unicode standard, defined by <tt>'\x1d171'</tt> (•𝅱).
MusicalSymbolCombiningFlag4 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING FLAG-5</tt> from
--   the Unicode standard, defined by <tt>'\x1d172'</tt> (•𝅲).
MusicalSymbolCombiningFlag5 :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING ACCENT</tt> from
--   the Unicode standard, defined by <tt>'\x1d17b'</tt> (•𝅻).
MusicalSymbolCombiningAccent :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING STACCATO</tt>
--   from the Unicode standard, defined by <tt>'\x1d17c'</tt> (•𝅼).
MusicalSymbolCombiningStaccato :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING TENUTO</tt> from
--   the Unicode standard, defined by <tt>'\x1d17d'</tt> (•𝅽).
MusicalSymbolCombiningTenuto :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING
--   STACCATISSIMO</tt> from the Unicode standard, defined by
--   <tt>'\x1d17e'</tt> (•𝅾).
MusicalSymbolCombiningStaccatissimo :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING MARCATO</tt> from
--   the Unicode standard, defined by <tt>'\x1d17f'</tt> (•𝅿).
MusicalSymbolCombiningMarcato :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING
--   MARCATO-STACCATO</tt> from the Unicode standard, defined by
--   <tt>'\x1d180'</tt> (•𝆀).
MusicalSymbolCombiningMarcatoStaccato :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING
--   ACCENT-STACCATO</tt> from the Unicode standard, defined by
--   <tt>'\x1d181'</tt> (•𝆁).
MusicalSymbolCombiningAccentStaccato :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING LOURE</tt> from
--   the Unicode standard, defined by <tt>'\x1d182'</tt> (•𝆂).
MusicalSymbolCombiningLoure :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING DOIT</tt> from
--   the Unicode standard, defined by <tt>'\x1d185'</tt> (•𝆅).
MusicalSymbolCombiningDoit :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING RIP</tt> from the
--   Unicode standard, defined by <tt>'\x1d186'</tt> (•𝆆).
MusicalSymbolCombiningRip :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING FLIP</tt> from
--   the Unicode standard, defined by <tt>'\x1d187'</tt> (•𝆇).
MusicalSymbolCombiningFlip :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING SMEAR</tt> from
--   the Unicode standard, defined by <tt>'\x1d188'</tt> (•𝆈).
MusicalSymbolCombiningSmear :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING BEND</tt> from
--   the Unicode standard, defined by <tt>'\x1d189'</tt> (•𝆉).
MusicalSymbolCombiningBend :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING DOUBLE
--   TONGUE</tt> from the Unicode standard, defined by <tt>'\x1d18a'</tt>
--   (•𝆊).
MusicalSymbolCombiningDoubleTongue :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING TRIPLE
--   TONGUE</tt> from the Unicode standard, defined by <tt>'\x1d18b'</tt>
--   (•𝆋).
MusicalSymbolCombiningTripleTongue :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING DOWN BOW</tt>
--   from the Unicode standard, defined by <tt>'\x1d1aa'</tt> (•𝆪).
MusicalSymbolCombiningDownBow :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING UP BOW</tt> from
--   the Unicode standard, defined by <tt>'\x1d1ab'</tt> (•𝆫).
MusicalSymbolCombiningUpBow :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING HARMONIC</tt>
--   from the Unicode standard, defined by <tt>'\x1d1ac'</tt> (•𝆬).
MusicalSymbolCombiningHarmonic :: CombiningCharacter

-- | The combining character <tt>MUSICAL SYMBOL COMBINING SNAP
--   PIZZICATO</tt> from the Unicode standard, defined by
--   <tt>'\x1d1ad'</tt> (•𝆭).
MusicalSymbolCombiningSnapPizzicato :: CombiningCharacter

-- | The combining character <tt>COMBINING GREEK MUSICAL TRISEME</tt> from
--   the Unicode standard, defined by <tt>'\x1d242'</tt> (•𝉂).
CombiningGreekMusicalTriseme :: CombiningCharacter

-- | The combining character <tt>COMBINING GREEK MUSICAL TETRASEME</tt>
--   from the Unicode standard, defined by <tt>'\x1d243'</tt> (•𝉃).
CombiningGreekMusicalTetraseme :: CombiningCharacter

-- | The combining character <tt>COMBINING GREEK MUSICAL PENTASEME</tt>
--   from the Unicode standard, defined by <tt>'\x1d244'</tt> (•𝉄).
CombiningGreekMusicalPentaseme :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER AZU</tt> from
--   the Unicode standard, defined by <tt>'\x1e000'</tt> (•𞀀).
CombiningGlagoliticLetterAzu :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER BUKY</tt> from
--   the Unicode standard, defined by <tt>'\x1e001'</tt> (•𞀁).
CombiningGlagoliticLetterBuky :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER VEDE</tt> from
--   the Unicode standard, defined by <tt>'\x1e002'</tt> (•𞀂).
CombiningGlagoliticLetterVede :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER GLAGOLI</tt>
--   from the Unicode standard, defined by <tt>'\x1e003'</tt> (•𞀃).
CombiningGlagoliticLetterGlagoli :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER DOBRO</tt>
--   from the Unicode standard, defined by <tt>'\x1e004'</tt> (•𞀄).
CombiningGlagoliticLetterDobro :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER YESTU</tt>
--   from the Unicode standard, defined by <tt>'\x1e005'</tt> (•𞀅).
CombiningGlagoliticLetterYestu :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER ZHIVETE</tt>
--   from the Unicode standard, defined by <tt>'\x1e006'</tt> (•𞀆).
CombiningGlagoliticLetterZhivete :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER ZEMLJA</tt>
--   from the Unicode standard, defined by <tt>'\x1e008'</tt> (•𞀈).
CombiningGlagoliticLetterZemlja :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER IZHE</tt> from
--   the Unicode standard, defined by <tt>'\x1e009'</tt> (•𞀉).
CombiningGlagoliticLetterIzhe :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER INITIAL
--   IZHE</tt> from the Unicode standard, defined by <tt>'\x1e00a'</tt>
--   (•𞀊).
CombiningGlagoliticLetterInitialIzhe :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER I</tt> from
--   the Unicode standard, defined by <tt>'\x1e00b'</tt> (•𞀋).
CombiningGlagoliticLetterI :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER DJERVI</tt>
--   from the Unicode standard, defined by <tt>'\x1e00c'</tt> (•𞀌).
CombiningGlagoliticLetterDjervi :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER KAKO</tt> from
--   the Unicode standard, defined by <tt>'\x1e00d'</tt> (•𞀍).
CombiningGlagoliticLetterKako :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER LJUDIJE</tt>
--   from the Unicode standard, defined by <tt>'\x1e00e'</tt> (•𞀎).
CombiningGlagoliticLetterLjudije :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER MYSLITE</tt>
--   from the Unicode standard, defined by <tt>'\x1e00f'</tt> (•𞀏).
CombiningGlagoliticLetterMyslite :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER NASHI</tt>
--   from the Unicode standard, defined by <tt>'\x1e010'</tt> (•𞀐).
CombiningGlagoliticLetterNashi :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER ONU</tt> from
--   the Unicode standard, defined by <tt>'\x1e011'</tt> (•𞀑).
CombiningGlagoliticLetterOnu :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER POKOJI</tt>
--   from the Unicode standard, defined by <tt>'\x1e012'</tt> (•𞀒).
CombiningGlagoliticLetterPokoji :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER RITSI</tt>
--   from the Unicode standard, defined by <tt>'\x1e013'</tt> (•𞀓).
CombiningGlagoliticLetterRitsi :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER SLOVO</tt>
--   from the Unicode standard, defined by <tt>'\x1e014'</tt> (•𞀔).
CombiningGlagoliticLetterSlovo :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER TVRIDO</tt>
--   from the Unicode standard, defined by <tt>'\x1e015'</tt> (•𞀕).
CombiningGlagoliticLetterTvrido :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER UKU</tt> from
--   the Unicode standard, defined by <tt>'\x1e016'</tt> (•𞀖).
CombiningGlagoliticLetterUku :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER FRITU</tt>
--   from the Unicode standard, defined by <tt>'\x1e017'</tt> (•𞀗).
CombiningGlagoliticLetterFritu :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER HERU</tt> from
--   the Unicode standard, defined by <tt>'\x1e018'</tt> (•𞀘).
CombiningGlagoliticLetterHeru :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER SHTA</tt> from
--   the Unicode standard, defined by <tt>'\x1e01b'</tt> (•𞀛).
CombiningGlagoliticLetterShta :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER TSI</tt> from
--   the Unicode standard, defined by <tt>'\x1e01c'</tt> (•𞀜).
CombiningGlagoliticLetterTsi :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER CHRIVI</tt>
--   from the Unicode standard, defined by <tt>'\x1e01d'</tt> (•𞀝).
CombiningGlagoliticLetterChrivi :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER SHA</tt> from
--   the Unicode standard, defined by <tt>'\x1e01e'</tt> (•𞀞).
CombiningGlagoliticLetterSha :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER YERU</tt> from
--   the Unicode standard, defined by <tt>'\x1e01f'</tt> (•𞀟).
CombiningGlagoliticLetterYeru :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER YERI</tt> from
--   the Unicode standard, defined by <tt>'\x1e020'</tt> (•𞀠).
CombiningGlagoliticLetterYeri :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER YATI</tt> from
--   the Unicode standard, defined by <tt>'\x1e021'</tt> (•𞀡).
CombiningGlagoliticLetterYati :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER YU</tt> from
--   the Unicode standard, defined by <tt>'\x1e023'</tt> (•𞀣).
CombiningGlagoliticLetterYu :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER SMALL YUS</tt>
--   from the Unicode standard, defined by <tt>'\x1e024'</tt> (•𞀤).
CombiningGlagoliticLetterSmallYus :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER YO</tt> from
--   the Unicode standard, defined by <tt>'\x1e026'</tt> (•𞀦).
CombiningGlagoliticLetterYo :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER IOTATED SMALL
--   YUS</tt> from the Unicode standard, defined by <tt>'\x1e027'</tt>
--   (•𞀧).
CombiningGlagoliticLetterIotatedSmallYus :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER BIG YUS</tt>
--   from the Unicode standard, defined by <tt>'\x1e028'</tt> (•𞀨).
CombiningGlagoliticLetterBigYus :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER IOTATED BIG
--   YUS</tt> from the Unicode standard, defined by <tt>'\x1e029'</tt>
--   (•𞀩).
CombiningGlagoliticLetterIotatedBigYus :: CombiningCharacter

-- | The combining character <tt>COMBINING GLAGOLITIC LETTER FITA</tt> from
--   the Unicode standard, defined by <tt>'\x1e02a'</tt> (•𞀪).
CombiningGlagoliticLetterFita :: CombiningCharacter

-- | The combining character <tt>MENDE KIKAKUI COMBINING NUMBER TEENS</tt>
--   from the Unicode standard, defined by <tt>'\x1e8d0'</tt> (•𞣐).
MendeKikakuiCombiningNumberTeens :: CombiningCharacter

-- | The combining character <tt>MENDE KIKAKUI COMBINING NUMBER TENS</tt>
--   from the Unicode standard, defined by <tt>'\x1e8d1'</tt> (•𞣑).
MendeKikakuiCombiningNumberTens :: CombiningCharacter

-- | The combining character <tt>MENDE KIKAKUI COMBINING NUMBER
--   HUNDREDS</tt> from the Unicode standard, defined by <tt>'\x1e8d2'</tt>
--   (•𞣒).
MendeKikakuiCombiningNumberHundreds :: CombiningCharacter

-- | The combining character <tt>MENDE KIKAKUI COMBINING NUMBER
--   THOUSANDS</tt> from the Unicode standard, defined by
--   <tt>'\x1e8d3'</tt> (•𞣓).
MendeKikakuiCombiningNumberThousands :: CombiningCharacter

-- | The combining character <tt>MENDE KIKAKUI COMBINING NUMBER TEN
--   THOUSANDS</tt> from the Unicode standard, defined by
--   <tt>'\x1e8d4'</tt> (•𞣔).
MendeKikakuiCombiningNumberTenThousands :: CombiningCharacter

-- | The combining character <tt>MENDE KIKAKUI COMBINING NUMBER HUNDRED
--   THOUSANDS</tt> from the Unicode standard, defined by
--   <tt>'\x1e8d5'</tt> (•𞣕).
MendeKikakuiCombiningNumberHundredThousands :: CombiningCharacter

-- | The combining character <tt>MENDE KIKAKUI COMBINING NUMBER
--   MILLIONS</tt> from the Unicode standard, defined by <tt>'\x1e8d6'</tt>
--   (•𞣖).
MendeKikakuiCombiningNumberMillions :: CombiningCharacter

-- | The combining character <tt>ADLAM ALIF LENGTHENER</tt> from the
--   Unicode standard, defined by <tt>'\x1e944'</tt> (•𞥄).
AdlamAlifLengthener :: CombiningCharacter

-- | The combining character <tt>ADLAM VOWEL LENGTHENER</tt> from the
--   Unicode standard, defined by <tt>'\x1e945'</tt> (•𞥅).
AdlamVowelLengthener :: CombiningCharacter

-- | The combining character <tt>ADLAM GEMINATION MARK</tt> from the
--   Unicode standard, defined by <tt>'\x1e946'</tt> (•𞥆).
AdlamGeminationMark :: CombiningCharacter

-- | The combining character <tt>ADLAM HAMZA</tt> from the Unicode
--   standard, defined by <tt>'\x1e947'</tt> (•𞥇).
AdlamHamza :: CombiningCharacter

-- | The combining character <tt>ADLAM CONSONANT MODIFIER</tt> from the
--   Unicode standard, defined by <tt>'\x1e948'</tt> (•𞥈).
AdlamConsonantModifier :: CombiningCharacter

-- | The combining character <tt>ADLAM GEMINATE CONSONANT MODIFIER</tt>
--   from the Unicode standard, defined by <tt>'\x1e949'</tt> (•𞥉).
AdlamGeminateConsonantModifier :: CombiningCharacter

-- | The combining character <tt>ADLAM NUKTA</tt> from the Unicode
--   standard, defined by <tt>'\x1e94a'</tt> (•𞥊).
AdlamNukta :: CombiningCharacter

-- | A type synonym to make working with <a>CombiningCharacter</a> more
--   convenient.
type CombiningChar = CombiningCharacter

-- | A set of <a>CombiningCharacter</a>s that can then all be applied to
--   the same character. The <a>(*^)</a> is used both to "stack" characters
--   in a <a>CombiningSequence</a>, and to apply a
--   <a>CombiningCharacter</a> or a <a>CombiningSequence</a> to a
--   <a>Char</a>.
newtype CombiningSequence
CombiningSequence :: NonEmpty CombiningCharacter -> CombiningSequence

-- | Convert the given <a>CombiningCharacter</a> to a <a>Char</a> in
--   Unicode, this codepoints need a preceding codepoint to be applied to.
combiningToUnicode :: CombiningCharacter -> Char

-- | Convert the given <a>Char</a> to its corresponding
--   <a>CombiningCharacter</a> wrapped in a <a>Just</a> data constructor.
--   If the given <a>Char</a> is not a <i>combining</i> character,
--   <a>Nothing</a> is returned.
combiningCharacter :: Char -> Maybe CombiningCharacter

-- | Convert the given <a>Char</a> to its corresponding
--   <a>CombiningCharacter</a>. If the given <a>Char</a> is not a
--   <i>combining</i> character, an error is produced.
combiningCharacter' :: Char -> CombiningCharacter

-- | Checks if the given <a>Char</a> is a combining character.
isCombiningCharacter :: Char -> Bool

-- | Convert the given <a>Char</a>acter to its "root" character that omits
--   all the applied <a>CombiningCharacter</a>s. If the given
--   <a>Char</a>acter is a <a>CombiningCharacter</a> itself, then this is
--   returned.
stripCombiningSequence :: Char -> Char

-- | Remove the <a>CombiningCharacter</a>s in the <a>Text</a> and the ones
--   that are applied to a character through "composition". This function
--   is useful for example to remove diacritics from a <a>Text</a> object.
stripCombinings :: Text -> Text

-- | A typeclass used to apply a <a>CombiningCharacter</a> or a
--   <a>CombiningSequence</a> to a <a>Char</a>, and return a <a>Text</a>
--   object.
class ApplyCombine a b c | a b -> c, b c -> a

-- | Applies the given <a>CombiningCharacter</a> or
--   <a>CombiningSequence</a> to the given character. The operator is
--   right-to-left, to allow "stacking" of <a>CombiningCharacter</a>s for
--   example:
--   
--   <pre>
--   'a' *^ CombiningGraveAccent *^ CombiningPlusSignBelow
--   </pre>
(*^) :: ApplyCombine a b c => a -> b -> c

-- | Applies the given <a>CombiningCharacter</a> or
--   <a>CombiningSequence</a> to the given character, and use composition
--   characters in case that is possible. The operator is right-to-left, to
--   allow "stacking" of <a>CombiningCharacter</a>s for example:
--   
--   <pre>
--   'a' *^! CombiningGraveAccent *^! CombiningPlusSignBelow
--   </pre>
(*^!) :: ApplyCombine a b c => a -> b -> c
infixr 8 *^
infixr 8 *^!

-- | Convert a given character that can be represented a <a>Char</a> and a
--   <a>CombiningCharacter</a> to a 2-tuple that contains this combination.
--   The returning <a>Char</a> (the first item in the 2-tuple) can still be
--   a composed form, and thus can sometimes be passed again through this
--   function.
decomposeCombining :: Char -> Maybe (Char, CombiningCharacter)

-- | Convert the given <a>Char</a>acter to a 2-tuple that contains the
--   "root" character, and a set of <a>CombiningCharacter</a>s that can be
--   applied to construct that character. Characters that do not contain a
--   combining character return an empty list for the list of
--   <a>CombiningCharacter</a>s.
--   
--   For a <a>Char</a> that is a <a>CombiningCharacter</a> itself, it will
--   return a 2-tuple with that character as first item, and an empty list
--   of <a>CombiningCharacter</a>s.
decomposeCombiningSequence :: Char -> (Char, [CombiningCharacter])

-- | Check if for the given <a>Char</a> and the given
--   <a>CombiningCharacter</a> a dedicated <a>Char</a> exists that is the
--   equivalent. If so, that dedicated character is wrapped in a
--   <a>Just</a>; <a>Nothing</a> otherwise. This is a flipped version of
--   <a>composeCombining'</a>.
composeCombining :: Char -> CombiningCharacter -> Maybe Char

-- | Check if for the given <a>Char</a> and the given
--   <a>CombiningCharacter</a> a dedicated <a>Char</a> exists that is the
--   equivalent. If so, that dedicated character is wrapped in a
--   <a>Just</a>; <a>Nothing</a> otherwise. This is a flipped version of
--   <a>composeCombining</a>.
composeCombining' :: CombiningCharacter -> Char -> Maybe Char

-- | Try to combine the given character with the <a>CombiningCharacter</a>s
--   in the list, by applying <a>composeCombining</a> on the items
--   left-to-right. The result is a 2-tuple with a more dedicated
--   <a>Char</a>acter (if possible), and a list of
--   <a>CombiningCharacter</a>s that could not be applied. This is a
--   flipped version of <a>composeCombiningSequence'</a>.
composeCombiningSequence :: Char -> [CombiningCharacter] -> (Char, [CombiningCharacter])

-- | Try to combine the given character with the <a>CombiningCharacter</a>s
--   in the list, by applying <a>composeCombining</a> on the items
--   left-to-right. The result is a 2-tuple with a more dedicated
--   <a>Char</a>acter (if possible), and a list of
--   <a>CombiningCharacter</a>s that could not be applied. This is a
--   flipped version of <a>composeCombiningSequence</a>.
composeCombiningSequence' :: [CombiningCharacter] -> Char -> (Char, [CombiningCharacter])

-- | A pattern synonym for <a>CombiningGraveAccent</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0300'</tt> (•̀).
pattern GraveAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAcuteAccent</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0301'</tt> (•́).
pattern AcuteAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCircumflexAccent</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0302'</tt>
--   (•̂).
pattern CircumflexAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTilde</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0303'</tt> (•̃).
pattern Tilde :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacron</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0304'</tt> (•̄).
pattern Macron :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOverline</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0305'</tt> (•̅).
pattern Overline :: CombiningCharacter

-- | A pattern synonym for <a>CombiningBreve</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0306'</tt> (•̆).
pattern Breve :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDotAbove</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0307'</tt> (•̇).
pattern DotAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDiaeresis</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0308'</tt> (•̈).
pattern Diaeresis :: CombiningCharacter

-- | A pattern synonym for <a>CombiningHookAbove</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0309'</tt> (•̉).
pattern HookAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRingAbove</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x030a'</tt> (•̊).
pattern RingAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleAcuteAccent</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x030b'</tt>
--   (•̋).
pattern DoubleAcuteAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCaron</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x030c'</tt> (•̌).
pattern Caron :: CombiningCharacter

-- | A pattern synonym for <a>CombiningVerticalLineAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x030d'</tt>
--   (•̍).
pattern VerticalLineAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleVerticalLineAbove</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x030e'</tt>
--   (•̎).
pattern DoubleVerticalLineAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleGraveAccent</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x030f'</tt>
--   (•̏).
pattern DoubleGraveAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCandrabindu</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0310'</tt> (•̐).
pattern Candrabindu :: CombiningCharacter

-- | A pattern synonym for <a>CombiningInvertedBreve</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0311'</tt> (•̑).
pattern InvertedBreve :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTurnedCommaAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0312'</tt>
--   (•̒).
pattern TurnedCommaAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCommaAbove</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0313'</tt> (•̓).
pattern CommaAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningReversedCommaAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0314'</tt>
--   (•̔).
pattern ReversedCommaAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCommaAboveRight</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0315'</tt>
--   (•̕).
pattern CommaAboveRight :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGraveAccentBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0316'</tt>
--   (•̖).
pattern GraveAccentBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAcuteAccentBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0317'</tt>
--   (•̗).
pattern AcuteAccentBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftTackBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0318'</tt> (•̘).
pattern LeftTackBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightTackBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0319'</tt> (•̙).
pattern RightTackBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftAngleAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x031a'</tt> (•̚).
pattern LeftAngleAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningHorn</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x031b'</tt> (•̛).
pattern Horn :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftHalfRingBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x031c'</tt>
--   (•̜).
pattern LeftHalfRingBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningUpTackBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x031d'</tt> (•̝).
pattern UpTackBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDownTackBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x031e'</tt> (•̞).
pattern DownTackBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningPlusSignBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x031f'</tt> (•̟).
pattern PlusSignBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMinusSignBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0320'</tt> (•̠).
pattern MinusSignBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningPalatalizedHookBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0321'</tt>
--   (•̡).
pattern PalatalizedHookBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRetroflexHookBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0322'</tt>
--   (•̢).
pattern RetroflexHookBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDotBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0323'</tt> (•̣).
pattern DotBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDiaeresisBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0324'</tt> (•̤).
pattern DiaeresisBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRingBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0325'</tt> (•̥).
pattern RingBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCommaBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0326'</tt> (•̦).
pattern CommaBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCedilla</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0327'</tt> (•̧).
pattern Cedilla :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOgonek</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0328'</tt> (•̨).
pattern Ogonek :: CombiningCharacter

-- | A pattern synonym for <a>CombiningVerticalLineBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0329'</tt>
--   (•̩).
pattern VerticalLineBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningBridgeBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x032a'</tt> (•̪).
pattern BridgeBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningInvertedDoubleArchBelow</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x032b'</tt>
--   (•̫).
pattern InvertedDoubleArchBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCaronBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x032c'</tt> (•̬).
pattern CaronBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCircumflexAccentBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x032d'</tt>
--   (•̭).
pattern CircumflexAccentBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningBreveBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x032e'</tt> (•̮).
pattern BreveBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningInvertedBreveBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x032f'</tt>
--   (•̯).
pattern InvertedBreveBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTildeBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0330'</tt> (•̰).
pattern TildeBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0331'</tt> (•̱).
pattern MacronBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLowLine</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0332'</tt> (•̲).
pattern LowLine :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleLowLine</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0333'</tt> (•̳).
pattern DoubleLowLine :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTildeOverlay</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0334'</tt> (•̴).
pattern TildeOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningShortStrokeOverlay</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0335'</tt>
--   (•̵).
pattern ShortStrokeOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLongStrokeOverlay</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0336'</tt>
--   (•̶).
pattern LongStrokeOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningShortSolidusOverlay</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0337'</tt>
--   (•̷).
pattern ShortSolidusOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLongSolidusOverlay</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0338'</tt>
--   (•̸).
pattern LongSolidusOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightHalfRingBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0339'</tt>
--   (•̹).
pattern RightHalfRingBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningInvertedBridgeBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x033a'</tt>
--   (•̺).
pattern InvertedBridgeBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningSquareBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x033b'</tt> (•̻).
pattern SquareBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningSeagullBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x033c'</tt> (•̼).
pattern SeagullBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningXAbove</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x033d'</tt> (•̽).
pattern XAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningVerticalTilde</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x033e'</tt> (•̾).
pattern VerticalTilde :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleOverline</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x033f'</tt> (•̿).
pattern DoubleOverline :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGraveToneMark</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0340'</tt> (•̀).
pattern GraveToneMark :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAcuteToneMark</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0341'</tt> (•́).
pattern AcuteToneMark :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGreekPerispomeni</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0342'</tt>
--   (•͂).
pattern GreekPerispomeni :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGreekKoronis</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0343'</tt> (•̓).
pattern GreekKoronis :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGreekDialytikaTonos</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0344'</tt>
--   (•̈́).
pattern GreekDialytikaTonos :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGreekYpogegrammeni</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0345'</tt>
--   (•ͅ).
pattern GreekYpogegrammeni :: CombiningCharacter

-- | A pattern synonym for <a>CombiningBridgeAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0346'</tt> (•͆).
pattern BridgeAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningEqualsSignBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0347'</tt>
--   (•͇).
pattern EqualsSignBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleVerticalLineBelow</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x0348'</tt>
--   (•͈).
pattern DoubleVerticalLineBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftAngleBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0349'</tt> (•͉).
pattern LeftAngleBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningNotTildeAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x034a'</tt> (•͊).
pattern NotTildeAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningHomotheticAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x034b'</tt>
--   (•͋).
pattern HomotheticAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAlmostEqualToAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x034c'</tt>
--   (•͌).
pattern AlmostEqualToAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftRightArrowBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x034d'</tt>
--   (•͍).
pattern LeftRightArrowBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningUpwardsArrowBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x034e'</tt>
--   (•͎).
pattern UpwardsArrowBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightArrowheadAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0350'</tt>
--   (•͐).
pattern RightArrowheadAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftHalfRingAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0351'</tt>
--   (•͑).
pattern LeftHalfRingAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningFermata</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0352'</tt> (•͒).
pattern Fermata :: CombiningCharacter

-- | A pattern synonym for <a>CombiningXBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x0353'</tt> (•͓).
pattern XBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftArrowheadBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0354'</tt>
--   (•͔).
pattern LeftArrowheadBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightArrowheadBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0355'</tt>
--   (•͕).
pattern RightArrowheadBelow :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningRightArrowheadAndUpArrowheadBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0356'</tt> (•͖).
pattern RightArrowheadAndUpArrowheadBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightHalfRingAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0357'</tt>
--   (•͗).
pattern RightHalfRingAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDotAboveRight</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0358'</tt> (•͘).
pattern DotAboveRight :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAsteriskBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0359'</tt> (•͙).
pattern AsteriskBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleRingBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x035a'</tt>
--   (•͚).
pattern DoubleRingBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningZigzagAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x035b'</tt> (•͛).
pattern ZigzagAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleBreveBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x035c'</tt>
--   (•͜).
pattern DoubleBreveBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleBreve</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x035d'</tt> (•͝).
pattern DoubleBreve :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleMacron</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x035e'</tt> (•͞).
pattern DoubleMacron :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleMacronBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x035f'</tt>
--   (•͟).
pattern DoubleMacronBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleTilde</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0360'</tt> (•͠).
pattern DoubleTilde :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleInvertedBreve</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0361'</tt>
--   (•͡).
pattern DoubleInvertedBreve :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleRightwardsArrowBelow</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x0362'</tt>
--   (•͢).
pattern DoubleRightwardsArrowBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterA</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0363'</tt>
--   (•ͣ).
pattern LatinSmallLetterA :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterE</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0364'</tt>
--   (•ͤ).
pattern LatinSmallLetterE :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterI</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0365'</tt>
--   (•ͥ).
pattern LatinSmallLetterI :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterO</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0366'</tt>
--   (•ͦ).
pattern LatinSmallLetterO :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterU</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0367'</tt>
--   (•ͧ).
pattern LatinSmallLetterU :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterC</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0368'</tt>
--   (•ͨ).
pattern LatinSmallLetterC :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterD</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0369'</tt>
--   (•ͩ).
pattern LatinSmallLetterD :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterH</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x036a'</tt>
--   (•ͪ).
pattern LatinSmallLetterH :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterM</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x036b'</tt>
--   (•ͫ).
pattern LatinSmallLetterM :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterR</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x036c'</tt>
--   (•ͬ).
pattern LatinSmallLetterR :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterT</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x036d'</tt>
--   (•ͭ).
pattern LatinSmallLetterT :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterV</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x036e'</tt>
--   (•ͮ).
pattern LatinSmallLetterV :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterX</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x036f'</tt>
--   (•ͯ).
pattern LatinSmallLetterX :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicTitlo</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x0483'</tt> (•҃).
pattern CyrillicTitlo :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicPalatalization</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0484'</tt>
--   (•҄).
pattern CyrillicPalatalization :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicDasiaPneumata</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0485'</tt>
--   (•҅).
pattern CyrillicDasiaPneumata :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicPsiliPneumata</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0486'</tt>
--   (•҆).
pattern CyrillicPsiliPneumata :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicPokrytie</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x0487'</tt>
--   (•҇).
pattern CyrillicPokrytie :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningShortHighTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07eb'</tt>
--   (•߫).
pattern NkoShortHighTone :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningShortLowTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07ec'</tt>
--   (•߬).
pattern NkoShortLowTone :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningShortRisingTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07ed'</tt>
--   (•߭).
pattern NkoShortRisingTone :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningLongDescendingTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07ee'</tt>
--   (•߮).
pattern NkoLongDescendingTone :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningLongHighTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07ef'</tt>
--   (•߯).
pattern NkoLongHighTone :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningLongLowTone</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x07f0'</tt> (•߰).
pattern NkoLongLowTone :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningLongRisingTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07f1'</tt>
--   (•߱).
pattern NkoLongRisingTone :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningNasalizationMark</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07f2'</tt>
--   (•߲).
pattern NkoNasalizationMark :: CombiningCharacter

-- | A pattern synonym for <a>NkoCombiningDoubleDotAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x07f3'</tt>
--   (•߳).
pattern NkoDoubleDotAbove :: CombiningCharacter

-- | A pattern synonym for
--   <a>EthiopicCombiningGeminationAndVowelLengthMark</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x135d'</tt> (•፝).
pattern EthiopicGeminationAndVowelLengthMark :: CombiningCharacter

-- | A pattern synonym for <a>EthiopicCombiningVowelLengthMark</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x135e'</tt>
--   (•፞).
pattern EthiopicVowelLengthMark :: CombiningCharacter

-- | A pattern synonym for <a>EthiopicCombiningGeminationMark</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x135f'</tt>
--   (•፟).
pattern EthiopicGeminationMark :: CombiningCharacter

-- | A pattern synonym for <a>TaiThamCombiningCryptogrammicDot</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1a7f'</tt>
--   (•᩿).
pattern TaiThamCryptogrammicDot :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubledCircumflexAccent</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1ab0'</tt>
--   (•᪰).
pattern DoubledCircumflexAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDiaeresisRing</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1ab1'</tt> (•᪱).
pattern DiaeresisRing :: CombiningCharacter

-- | A pattern synonym for <a>CombiningInfinity</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x1ab2'</tt> (•᪲).
pattern Infinity :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDownwardsArrow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1ab3'</tt> (•᪳).
pattern DownwardsArrow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTripleDot</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x1ab4'</tt> (•᪴).
pattern TripleDot :: CombiningCharacter

-- | A pattern synonym for <a>CombiningXXBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x1ab5'</tt> (•᪵).
pattern XXBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningWigglyLineBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1ab6'</tt>
--   (•᪶).
pattern WigglyLineBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOpenMarkBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1ab7'</tt> (•᪷).
pattern OpenMarkBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleOpenMarkBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1ab8'</tt>
--   (•᪸).
pattern DoubleOpenMarkBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLightCentralizationStrokeBelow</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1ab9'</tt> (•᪹).
pattern LightCentralizationStrokeBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningStrongCentralizationStrokeBelow</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1aba'</tt> (•᪺).
pattern StrongCentralizationStrokeBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningParenthesesAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1abb'</tt>
--   (•᪻).
pattern ParenthesesAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleParenthesesAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1abc'</tt>
--   (•᪼).
pattern DoubleParenthesesAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningParenthesesBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1abd'</tt>
--   (•᪽).
pattern ParenthesesBelow :: CombiningCharacter

-- | A pattern synonym for <a>BalineseMusicalSymbolCombiningTegeh</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1b6b'</tt>
--   (•᭫).
pattern BalineseMusicalSymbolTegeh :: CombiningCharacter

-- | A pattern synonym for <a>BalineseMusicalSymbolCombiningEndep</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1b6c'</tt>
--   (•᭬).
pattern BalineseMusicalSymbolEndep :: CombiningCharacter

-- | A pattern synonym for <a>BalineseMusicalSymbolCombiningKempul</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1b6d'</tt>
--   (•᭭).
pattern BalineseMusicalSymbolKempul :: CombiningCharacter

-- | A pattern synonym for <a>BalineseMusicalSymbolCombiningKempli</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1b6e'</tt>
--   (•᭮).
pattern BalineseMusicalSymbolKempli :: CombiningCharacter

-- | A pattern synonym for <a>BalineseMusicalSymbolCombiningJegogan</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1b6f'</tt> (•᭯).
pattern BalineseMusicalSymbolJegogan :: CombiningCharacter

-- | A pattern synonym for
--   <a>BalineseMusicalSymbolCombiningKempulWithJegogan</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1b70'</tt>
--   (•᭰).
pattern BalineseMusicalSymbolKempulWithJegogan :: CombiningCharacter

-- | A pattern synonym for
--   <a>BalineseMusicalSymbolCombiningKempliWithJegogan</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1b71'</tt>
--   (•᭱).
pattern BalineseMusicalSymbolKempliWithJegogan :: CombiningCharacter

-- | A pattern synonym for <a>BalineseMusicalSymbolCombiningBende</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1b72'</tt>
--   (•᭲).
pattern BalineseMusicalSymbolBende :: CombiningCharacter

-- | A pattern synonym for <a>BalineseMusicalSymbolCombiningGong</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1b73'</tt>
--   (•᭳).
pattern BalineseMusicalSymbolGong :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDottedGraveAccent</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dc0'</tt>
--   (•᷀).
pattern DottedGraveAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDottedAcuteAccent</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dc1'</tt>
--   (•᷁).
pattern DottedAcuteAccent :: CombiningCharacter

-- | A pattern synonym for <a>CombiningSnakeBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x1dc2'</tt> (•᷂).
pattern SnakeBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningSuspensionMark</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dc3'</tt> (•᷃).
pattern SuspensionMark :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronAcute</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dc4'</tt> (•᷄).
pattern MacronAcute :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGraveMacron</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dc5'</tt> (•᷅).
pattern GraveMacron :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronGrave</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dc6'</tt> (•᷆).
pattern MacronGrave :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAcuteMacron</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dc7'</tt> (•᷇).
pattern AcuteMacron :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGraveAcuteGrave</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dc8'</tt>
--   (•᷈).
pattern GraveAcuteGrave :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAcuteGraveAcute</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dc9'</tt>
--   (•᷉).
pattern AcuteGraveAcute :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterRBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dca'</tt>
--   (•᷊).
pattern LatinSmallLetterRBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningBreveMacron</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dcb'</tt> (•᷋).
pattern BreveMacron :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronBreve</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dcc'</tt> (•᷌).
pattern MacronBreve :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleCircumflexAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dcd'</tt>
--   (•᷍).
pattern DoubleCircumflexAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOgonekAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dce'</tt> (•᷎).
pattern OgonekAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningZigzagBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dcf'</tt> (•᷏).
pattern ZigzagBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningIsBelow</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x1dd0'</tt> (•᷐).
pattern IsBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningUrAbove</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x1dd1'</tt> (•᷑).
pattern UrAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningUsAbove</a>, the name without the
--   <tt>Combining</tt> part, defined by <tt>'\x1dd2'</tt> (•᷒).
pattern UsAbove :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningLatinSmallLetterFlattenedOpenAAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dd3'</tt> (•ᷓ).
pattern LatinSmallLetterFlattenedOpenAAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterAe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dd4'</tt>
--   (•ᷔ).
pattern LatinSmallLetterAe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterAo</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dd5'</tt>
--   (•ᷕ).
pattern LatinSmallLetterAo :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterAv</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dd6'</tt>
--   (•ᷖ).
pattern LatinSmallLetterAv :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterCCedilla</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1dd7'</tt>
--   (•ᷗ).
pattern LatinSmallLetterCCedilla :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterInsularD</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1dd8'</tt>
--   (•ᷘ).
pattern LatinSmallLetterInsularD :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterEth</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dd9'</tt>
--   (•ᷙ).
pattern LatinSmallLetterEth :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterG</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dda'</tt>
--   (•ᷚ).
pattern LatinSmallLetterG :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinLetterSmallCapitalG</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1ddb'</tt>
--   (•ᷛ).
pattern LatinLetterSmallCapitalG :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterK</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1ddc'</tt>
--   (•ᷜ).
pattern LatinSmallLetterK :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterL</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1ddd'</tt>
--   (•ᷝ).
pattern LatinSmallLetterL :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinLetterSmallCapitalL</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1dde'</tt>
--   (•ᷞ).
pattern LatinLetterSmallCapitalL :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinLetterSmallCapitalM</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1ddf'</tt>
--   (•ᷟ).
pattern LatinLetterSmallCapitalM :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterN</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1de0'</tt>
--   (•ᷠ).
pattern LatinSmallLetterN :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinLetterSmallCapitalN</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1de1'</tt>
--   (•ᷡ).
pattern LatinLetterSmallCapitalN :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinLetterSmallCapitalR</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1de2'</tt>
--   (•ᷢ).
pattern LatinLetterSmallCapitalR :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterRRotunda</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1de3'</tt>
--   (•ᷣ).
pattern LatinSmallLetterRRotunda :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterS</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1de4'</tt>
--   (•ᷤ).
pattern LatinSmallLetterS :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterLongS</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1de5'</tt>
--   (•ᷥ).
pattern LatinSmallLetterLongS :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterZ</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1de6'</tt>
--   (•ᷦ).
pattern LatinSmallLetterZ :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterAlpha</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1de7'</tt>
--   (•ᷧ).
pattern LatinSmallLetterAlpha :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterB</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1de8'</tt>
--   (•ᷨ).
pattern LatinSmallLetterB :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterBeta</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1de9'</tt>
--   (•ᷩ).
pattern LatinSmallLetterBeta :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterSchwa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dea'</tt>
--   (•ᷪ).
pattern LatinSmallLetterSchwa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterF</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1deb'</tt>
--   (•ᷫ).
pattern LatinSmallLetterF :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningLatinSmallLetterLWithDoubleMiddleTilde</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dec'</tt>
--   (•ᷬ).
pattern LatinSmallLetterLWithDoubleMiddleTilde :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningLatinSmallLetterOWithLightCentralizationStroke</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1ded'</tt>
--   (•ᷭ).
pattern LatinSmallLetterOWithLightCentralizationStroke :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterP</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dee'</tt>
--   (•ᷮ).
pattern LatinSmallLetterP :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterEsh</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1def'</tt>
--   (•ᷯ).
pattern LatinSmallLetterEsh :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningLatinSmallLetterUWithLightCentralizationStroke</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1df0'</tt>
--   (•ᷰ).
pattern LatinSmallLetterUWithLightCentralizationStroke :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterW</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1df1'</tt>
--   (•ᷱ).
pattern LatinSmallLetterW :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterAWithDiaeresis</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1df2'</tt> (•ᷲ).
pattern LatinSmallLetterAWithDiaeresis :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterOWithDiaeresis</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1df3'</tt> (•ᷳ).
pattern LatinSmallLetterOWithDiaeresis :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLatinSmallLetterUWithDiaeresis</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1df4'</tt> (•ᷴ).
pattern LatinSmallLetterUWithDiaeresis :: CombiningCharacter

-- | A pattern synonym for <a>CombiningUpTackAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1df5'</tt> (•᷵).
pattern UpTackAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDeletionMark</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dfb'</tt> (•᷻).
pattern DeletionMark :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleInvertedBreveBelow</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x1dfc'</tt>
--   (•᷼).
pattern DoubleInvertedBreveBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAlmostEqualToBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dfd'</tt>
--   (•᷽).
pattern AlmostEqualToBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftArrowheadAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1dfe'</tt>
--   (•᷾).
pattern LeftArrowheadAbove :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningRightArrowheadAndDownArrowheadBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1dff'</tt> (•᷿).
pattern RightArrowheadAndDownArrowheadBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftHarpoonAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20d0'</tt>
--   (•⃐).
pattern LeftHarpoonAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightHarpoonAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20d1'</tt>
--   (•⃑).
pattern RightHarpoonAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLongVerticalLineOverlay</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x20d2'</tt>
--   (•⃒).
pattern LongVerticalLineOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningShortVerticalLineOverlay</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x20d3'</tt>
--   (•⃓).
pattern ShortVerticalLineOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAnticlockwiseArrowAbove</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x20d4'</tt>
--   (•⃔).
pattern AnticlockwiseArrowAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningClockwiseArrowAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20d5'</tt>
--   (•⃕).
pattern ClockwiseArrowAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftArrowAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20d6'</tt> (•⃖).
pattern LeftArrowAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightArrowAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20d7'</tt>
--   (•⃗).
pattern RightArrowAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRingOverlay</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20d8'</tt> (•⃘).
pattern RingOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningClockwiseRingOverlay</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20d9'</tt>
--   (•⃙).
pattern ClockwiseRingOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAnticlockwiseRingOverlay</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x20da'</tt>
--   (•⃚).
pattern AnticlockwiseRingOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningThreeDotsAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20db'</tt> (•⃛).
pattern ThreeDotsAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningFourDotsAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20dc'</tt> (•⃜).
pattern FourDotsAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftRightArrowAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20e1'</tt>
--   (•⃡).
pattern LeftRightArrowAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningReverseSolidusOverlay</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20e5'</tt>
--   (•⃥).
pattern ReverseSolidusOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleVerticalStrokeOverlay</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x20e6'</tt>
--   (•⃦).
pattern DoubleVerticalStrokeOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAnnuitySymbol</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20e7'</tt> (•⃧).
pattern AnnuitySymbol :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTripleUnderdot</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20e8'</tt> (•⃨).
pattern TripleUnderdot :: CombiningCharacter

-- | A pattern synonym for <a>CombiningWideBridgeAbove</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20e9'</tt>
--   (•⃩).
pattern WideBridgeAbove :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftwardsArrowOverlay</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20ea'</tt>
--   (•⃪).
pattern LeftwardsArrowOverlay :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLongDoubleSolidusOverlay</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x20eb'</tt>
--   (•⃫).
pattern LongDoubleSolidusOverlay :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningRightwardsHarpoonWithBarbDownwards</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20ec'</tt> (•⃬).
pattern RightwardsHarpoonWithBarbDownwards :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningLeftwardsHarpoonWithBarbDownwards</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20ed'</tt> (•⃭).
pattern LeftwardsHarpoonWithBarbDownwards :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLeftArrowBelow</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20ee'</tt> (•⃮).
pattern LeftArrowBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningRightArrowBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x20ef'</tt>
--   (•⃯).
pattern RightArrowBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningAsteriskAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x20f0'</tt> (•⃰).
pattern AsteriskAbove :: CombiningCharacter

-- | A pattern synonym for <a>CopticCombiningNiAbove</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x2cef'</tt> (•⳯).
pattern CopticNiAbove :: CombiningCharacter

-- | A pattern synonym for <a>CopticCombiningSpiritusAsper</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2cf0'</tt>
--   (•⳰).
pattern CopticSpiritusAsper :: CombiningCharacter

-- | A pattern synonym for <a>CopticCombiningSpiritusLenis</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2cf1'</tt>
--   (•⳱).
pattern CopticSpiritusLenis :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterBe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de0'</tt>
--   (•ⷠ).
pattern CyrillicLetterBe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterVe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de1'</tt>
--   (•ⷡ).
pattern CyrillicLetterVe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterGhe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de2'</tt>
--   (•ⷢ).
pattern CyrillicLetterGhe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterDe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de3'</tt>
--   (•ⷣ).
pattern CyrillicLetterDe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterZhe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de4'</tt>
--   (•ⷤ).
pattern CyrillicLetterZhe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterZe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de5'</tt>
--   (•ⷥ).
pattern CyrillicLetterZe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterKa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de6'</tt>
--   (•ⷦ).
pattern CyrillicLetterKa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterEl</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de7'</tt>
--   (•ⷧ).
pattern CyrillicLetterEl :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterEm</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de8'</tt>
--   (•ⷨ).
pattern CyrillicLetterEm :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterEn</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2de9'</tt>
--   (•ⷩ).
pattern CyrillicLetterEn :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterO</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2dea'</tt>
--   (•ⷪ).
pattern CyrillicLetterO :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterPe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2deb'</tt>
--   (•ⷫ).
pattern CyrillicLetterPe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterEr</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2dec'</tt>
--   (•ⷬ).
pattern CyrillicLetterEr :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterEs</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2ded'</tt>
--   (•ⷭ).
pattern CyrillicLetterEs :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterTe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2dee'</tt>
--   (•ⷮ).
pattern CyrillicLetterTe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterHa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2def'</tt>
--   (•ⷯ).
pattern CyrillicLetterHa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterTse</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df0'</tt>
--   (•ⷰ).
pattern CyrillicLetterTse :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterChe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df1'</tt>
--   (•ⷱ).
pattern CyrillicLetterChe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterSha</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df2'</tt>
--   (•ⷲ).
pattern CyrillicLetterSha :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterShcha</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df3'</tt>
--   (•ⷳ).
pattern CyrillicLetterShcha :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterFita</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df4'</tt>
--   (•ⷴ).
pattern CyrillicLetterFita :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterEsTe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df5'</tt>
--   (•ⷵ).
pattern CyrillicLetterEsTe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterA</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df6'</tt>
--   (•ⷶ).
pattern CyrillicLetterA :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterIe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df7'</tt>
--   (•ⷷ).
pattern CyrillicLetterIe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterDjerv</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2df8'</tt>
--   (•ⷸ).
pattern CyrillicLetterDjerv :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterMonographUk</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x2df9'</tt>
--   (•ⷹ).
pattern CyrillicLetterMonographUk :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterYat</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2dfa'</tt>
--   (•ⷺ).
pattern CyrillicLetterYat :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterYu</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2dfb'</tt>
--   (•ⷻ).
pattern CyrillicLetterYu :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterIotifiedA</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x2dfc'</tt>
--   (•ⷼ).
pattern CyrillicLetterIotifiedA :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterLittleYus</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\x2dfd'</tt>
--   (•ⷽ).
pattern CyrillicLetterLittleYus :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterBigYus</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x2dfe'</tt>
--   (•ⷾ).
pattern CyrillicLetterBigYus :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterIotifiedBigYus</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x2dff'</tt> (•ⷿ).
pattern CyrillicLetterIotifiedBigYus :: CombiningCharacter

-- | A pattern synonym for <a>CombiningKatakanaHiraganaVoicedSoundMark</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x3099'</tt> (•゙).
pattern KatakanaHiraganaVoicedSoundMark :: CombiningCharacter

-- | A pattern synonym for
--   <a>CombiningKatakanaHiraganaSemiVoicedSoundMark</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x309a'</tt> (•゚).
pattern KatakanaHiraganaSemiVoicedSoundMark :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicVzmet</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\xa66f'</tt> (•꙯).
pattern CyrillicVzmet :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterUkrainianIe</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\xa674'</tt>
--   (•ꙴ).
pattern CyrillicLetterUkrainianIe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterI</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa675'</tt>
--   (•ꙵ).
pattern CyrillicLetterI :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterYi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa676'</tt>
--   (•ꙶ).
pattern CyrillicLetterYi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterU</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa677'</tt>
--   (•ꙷ).
pattern CyrillicLetterU :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterHardSign</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa678'</tt>
--   (•ꙸ).
pattern CyrillicLetterHardSign :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterYeru</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa679'</tt>
--   (•ꙹ).
pattern CyrillicLetterYeru :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterSoftSign</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa67a'</tt>
--   (•ꙺ).
pattern CyrillicLetterSoftSign :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterOmega</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa67b'</tt>
--   (•ꙻ).
pattern CyrillicLetterOmega :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicKavyka</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\xa67c'</tt> (•꙼).
pattern CyrillicKavyka :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicPayerok</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa67d'</tt>
--   (•꙽).
pattern CyrillicPayerok :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterEf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa69e'</tt>
--   (•ꚞ).
pattern CyrillicLetterEf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicLetterIotifiedE</a>, the
--   name without the <tt>Combining</tt> part, defined by <tt>'\xa69f'</tt>
--   (•ꚟ).
pattern CyrillicLetterIotifiedE :: CombiningCharacter

-- | A pattern synonym for <a>BamumCombiningMarkKoqndon</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa6f0'</tt>
--   (•꛰).
pattern BamumMarkKoqndon :: CombiningCharacter

-- | A pattern synonym for <a>BamumCombiningMarkTukwentis</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa6f1'</tt>
--   (•꛱).
pattern BamumMarkTukwentis :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitZero</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e0'</tt>
--   (•꣠).
pattern DevanagariDigitZero :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitOne</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e1'</tt>
--   (•꣡).
pattern DevanagariDigitOne :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitTwo</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e2'</tt>
--   (•꣢).
pattern DevanagariDigitTwo :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitThree</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e3'</tt>
--   (•꣣).
pattern DevanagariDigitThree :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitFour</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e4'</tt>
--   (•꣤).
pattern DevanagariDigitFour :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitFive</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e5'</tt>
--   (•꣥).
pattern DevanagariDigitFive :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitSix</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e6'</tt>
--   (•꣦).
pattern DevanagariDigitSix :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitSeven</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e7'</tt>
--   (•꣧).
pattern DevanagariDigitSeven :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitEight</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e8'</tt>
--   (•꣨).
pattern DevanagariDigitEight :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariDigitNine</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8e9'</tt>
--   (•꣩).
pattern DevanagariDigitNine :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariLetterA</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8ea'</tt>
--   (•꣪).
pattern DevanagariLetterA :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariLetterU</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8eb'</tt>
--   (•꣫).
pattern DevanagariLetterU :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariLetterKa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8ec'</tt>
--   (•꣬).
pattern DevanagariLetterKa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariLetterNa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8ed'</tt>
--   (•꣭).
pattern DevanagariLetterNa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariLetterPa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8ee'</tt>
--   (•꣮).
pattern DevanagariLetterPa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariLetterRa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8ef'</tt>
--   (•꣯).
pattern DevanagariLetterRa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariLetterVi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8f0'</tt>
--   (•꣰).
pattern DevanagariLetterVi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDevanagariSignAvagraha</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xa8f1'</tt>
--   (•꣱).
pattern DevanagariSignAvagraha :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLigatureLeftHalf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe20'</tt>
--   (•︠).
pattern LigatureLeftHalf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLigatureRightHalf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe21'</tt>
--   (•︡).
pattern LigatureRightHalf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleTildeLeftHalf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe22'</tt>
--   (•︢).
pattern DoubleTildeLeftHalf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningDoubleTildeRightHalf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe23'</tt>
--   (•︣).
pattern DoubleTildeRightHalf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronLeftHalf</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\xfe24'</tt> (•︤).
pattern MacronLeftHalf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronRightHalf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe25'</tt>
--   (•︥).
pattern MacronRightHalf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningConjoiningMacron</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe26'</tt>
--   (•︦).
pattern ConjoiningMacron :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLigatureLeftHalfBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe27'</tt>
--   (•︧).
pattern LigatureLeftHalfBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningLigatureRightHalfBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe28'</tt>
--   (•︨).
pattern LigatureRightHalfBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTildeLeftHalfBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe29'</tt>
--   (•︩).
pattern TildeLeftHalfBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningTildeRightHalfBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe2a'</tt>
--   (•︪).
pattern TildeRightHalfBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronLeftHalfBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe2b'</tt>
--   (•︫).
pattern MacronLeftHalfBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningMacronRightHalfBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe2c'</tt>
--   (•︬).
pattern MacronRightHalfBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningConjoiningMacronBelow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe2d'</tt>
--   (•︭).
pattern ConjoiningMacronBelow :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicTitloLeftHalf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe2e'</tt>
--   (•︮).
pattern CyrillicTitloLeftHalf :: CombiningCharacter

-- | A pattern synonym for <a>CombiningCyrillicTitloRightHalf</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\xfe2f'</tt>
--   (•︯).
pattern CyrillicTitloRightHalf :: CombiningCharacter

-- | A pattern synonym for <a>PhaistosDiscSignCombiningObliqueStroke</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x101fd'</tt> (•𐇽).
pattern PhaistosDiscSignObliqueStroke :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOldPermicLetterAn</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x10376'</tt>
--   (•𐍶).
pattern OldPermicLetterAn :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOldPermicLetterDoi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x10377'</tt>
--   (•𐍷).
pattern OldPermicLetterDoi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOldPermicLetterZata</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x10378'</tt>
--   (•𐍸).
pattern OldPermicLetterZata :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOldPermicLetterNenoe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x10379'</tt>
--   (•𐍹).
pattern OldPermicLetterNenoe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningOldPermicLetterSii</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1037a'</tt>
--   (•𐍺).
pattern OldPermicLetterSii :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaDigitZero</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11366'</tt>
--   (•𑍦).
pattern GranthaDigitZero :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaDigitOne</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11367'</tt>
--   (•𑍧).
pattern GranthaDigitOne :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaDigitTwo</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11368'</tt>
--   (•𑍨).
pattern GranthaDigitTwo :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaDigitThree</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11369'</tt>
--   (•𑍩).
pattern GranthaDigitThree :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaDigitFour</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1136a'</tt>
--   (•𑍪).
pattern GranthaDigitFour :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaDigitFive</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1136b'</tt>
--   (•𑍫).
pattern GranthaDigitFive :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaDigitSix</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1136c'</tt>
--   (•𑍬).
pattern GranthaDigitSix :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaLetterA</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x11370'</tt> (•𑍰).
pattern GranthaLetterA :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaLetterKa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11371'</tt>
--   (•𑍱).
pattern GranthaLetterKa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaLetterNa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11372'</tt>
--   (•𑍲).
pattern GranthaLetterNa :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaLetterVi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11373'</tt>
--   (•𑍳).
pattern GranthaLetterVi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGranthaLetterPa</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x11374'</tt>
--   (•𑍴).
pattern GranthaLetterPa :: CombiningCharacter

-- | A pattern synonym for <a>BassaVahCombiningHighTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x16af0'</tt>
--   (•𖫰).
pattern BassaVahHighTone :: CombiningCharacter

-- | A pattern synonym for <a>BassaVahCombiningLowTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x16af1'</tt>
--   (•𖫱).
pattern BassaVahLowTone :: CombiningCharacter

-- | A pattern synonym for <a>BassaVahCombiningMidTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x16af2'</tt>
--   (•𖫲).
pattern BassaVahMidTone :: CombiningCharacter

-- | A pattern synonym for <a>BassaVahCombiningLowMidTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x16af3'</tt>
--   (•𖫳).
pattern BassaVahLowMidTone :: CombiningCharacter

-- | A pattern synonym for <a>BassaVahCombiningHighLowTone</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x16af4'</tt>
--   (•𖫴).
pattern BassaVahHighLowTone :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningStem</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d165'</tt>
--   (•𝅥).
pattern MusicalSymbolStem :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningSprechgesangStem</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d166'</tt> (•𝅦).
pattern MusicalSymbolSprechgesangStem :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningTremolo1</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d167'</tt>
--   (•𝅧).
pattern MusicalSymbolTremolo1 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningTremolo2</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d168'</tt>
--   (•𝅨).
pattern MusicalSymbolTremolo2 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningTremolo3</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d169'</tt>
--   (•𝅩).
pattern MusicalSymbolTremolo3 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningAugmentationDot</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d16d'</tt> (•𝅭).
pattern MusicalSymbolAugmentationDot :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningFlag1</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d16e'</tt>
--   (•𝅮).
pattern MusicalSymbolFlag1 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningFlag2</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d16f'</tt>
--   (•𝅯).
pattern MusicalSymbolFlag2 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningFlag3</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d170'</tt>
--   (•𝅰).
pattern MusicalSymbolFlag3 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningFlag4</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d171'</tt>
--   (•𝅱).
pattern MusicalSymbolFlag4 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningFlag5</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d172'</tt>
--   (•𝅲).
pattern MusicalSymbolFlag5 :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningAccent</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d17b'</tt>
--   (•𝅻).
pattern MusicalSymbolAccent :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningStaccato</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d17c'</tt>
--   (•𝅼).
pattern MusicalSymbolStaccato :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningTenuto</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d17d'</tt>
--   (•𝅽).
pattern MusicalSymbolTenuto :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningStaccatissimo</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d17e'</tt> (•𝅾).
pattern MusicalSymbolStaccatissimo :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningMarcato</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d17f'</tt>
--   (•𝅿).
pattern MusicalSymbolMarcato :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningMarcatoStaccato</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d180'</tt> (•𝆀).
pattern MusicalSymbolMarcatoStaccato :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningAccentStaccato</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d181'</tt> (•𝆁).
pattern MusicalSymbolAccentStaccato :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningLoure</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d182'</tt>
--   (•𝆂).
pattern MusicalSymbolLoure :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningDoit</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d185'</tt>
--   (•𝆅).
pattern MusicalSymbolDoit :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningRip</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d186'</tt>
--   (•𝆆).
pattern MusicalSymbolRip :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningFlip</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d187'</tt>
--   (•𝆇).
pattern MusicalSymbolFlip :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningSmear</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d188'</tt>
--   (•𝆈).
pattern MusicalSymbolSmear :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningBend</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d189'</tt>
--   (•𝆉).
pattern MusicalSymbolBend :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningDoubleTongue</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d18a'</tt> (•𝆊).
pattern MusicalSymbolDoubleTongue :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningTripleTongue</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d18b'</tt> (•𝆋).
pattern MusicalSymbolTripleTongue :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningDownBow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d1aa'</tt>
--   (•𝆪).
pattern MusicalSymbolDownBow :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningUpBow</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d1ab'</tt>
--   (•𝆫).
pattern MusicalSymbolUpBow :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningHarmonic</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d1ac'</tt>
--   (•𝆬).
pattern MusicalSymbolHarmonic :: CombiningCharacter

-- | A pattern synonym for <a>MusicalSymbolCombiningSnapPizzicato</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1d1ad'</tt> (•𝆭).
pattern MusicalSymbolSnapPizzicato :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGreekMusicalTriseme</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d242'</tt>
--   (•𝉂).
pattern GreekMusicalTriseme :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGreekMusicalTetraseme</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d243'</tt>
--   (•𝉃).
pattern GreekMusicalTetraseme :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGreekMusicalPentaseme</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1d244'</tt>
--   (•𝉄).
pattern GreekMusicalPentaseme :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterAzu</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e000'</tt>
--   (•𞀀).
pattern GlagoliticLetterAzu :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterBuky</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e001'</tt>
--   (•𞀁).
pattern GlagoliticLetterBuky :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterVede</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e002'</tt>
--   (•𞀂).
pattern GlagoliticLetterVede :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterGlagoli</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e003'</tt> (•𞀃).
pattern GlagoliticLetterGlagoli :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterDobro</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e004'</tt>
--   (•𞀄).
pattern GlagoliticLetterDobro :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterYestu</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e005'</tt>
--   (•𞀅).
pattern GlagoliticLetterYestu :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterZhivete</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e006'</tt> (•𞀆).
pattern GlagoliticLetterZhivete :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterZemlja</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e008'</tt>
--   (•𞀈).
pattern GlagoliticLetterZemlja :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterIzhe</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e009'</tt>
--   (•𞀉).
pattern GlagoliticLetterIzhe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterInitialIzhe</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e00a'</tt> (•𞀊).
pattern GlagoliticLetterInitialIzhe :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterI</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e00b'</tt>
--   (•𞀋).
pattern GlagoliticLetterI :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterDjervi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e00c'</tt>
--   (•𞀌).
pattern GlagoliticLetterDjervi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterKako</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e00d'</tt>
--   (•𞀍).
pattern GlagoliticLetterKako :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterLjudije</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e00e'</tt> (•𞀎).
pattern GlagoliticLetterLjudije :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterMyslite</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e00f'</tt> (•𞀏).
pattern GlagoliticLetterMyslite :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterNashi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e010'</tt>
--   (•𞀐).
pattern GlagoliticLetterNashi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterOnu</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e011'</tt>
--   (•𞀑).
pattern GlagoliticLetterOnu :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterPokoji</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e012'</tt>
--   (•𞀒).
pattern GlagoliticLetterPokoji :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterRitsi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e013'</tt>
--   (•𞀓).
pattern GlagoliticLetterRitsi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterSlovo</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e014'</tt>
--   (•𞀔).
pattern GlagoliticLetterSlovo :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterTvrido</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e015'</tt>
--   (•𞀕).
pattern GlagoliticLetterTvrido :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterUku</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e016'</tt>
--   (•𞀖).
pattern GlagoliticLetterUku :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterFritu</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e017'</tt>
--   (•𞀗).
pattern GlagoliticLetterFritu :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterHeru</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e018'</tt>
--   (•𞀘).
pattern GlagoliticLetterHeru :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterShta</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e01b'</tt>
--   (•𞀛).
pattern GlagoliticLetterShta :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterTsi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e01c'</tt>
--   (•𞀜).
pattern GlagoliticLetterTsi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterChrivi</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e01d'</tt>
--   (•𞀝).
pattern GlagoliticLetterChrivi :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterSha</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e01e'</tt>
--   (•𞀞).
pattern GlagoliticLetterSha :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterYeru</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e01f'</tt>
--   (•𞀟).
pattern GlagoliticLetterYeru :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterYeri</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e020'</tt>
--   (•𞀠).
pattern GlagoliticLetterYeri :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterYati</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e021'</tt>
--   (•𞀡).
pattern GlagoliticLetterYati :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterYu</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e023'</tt>
--   (•𞀣).
pattern GlagoliticLetterYu :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterSmallYus</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e024'</tt> (•𞀤).
pattern GlagoliticLetterSmallYus :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterYo</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e026'</tt>
--   (•𞀦).
pattern GlagoliticLetterYo :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterIotatedSmallYus</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e027'</tt> (•𞀧).
pattern GlagoliticLetterIotatedSmallYus :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterBigYus</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e028'</tt>
--   (•𞀨).
pattern GlagoliticLetterBigYus :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterIotatedBigYus</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e029'</tt> (•𞀩).
pattern GlagoliticLetterIotatedBigYus :: CombiningCharacter

-- | A pattern synonym for <a>CombiningGlagoliticLetterFita</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e02a'</tt>
--   (•𞀪).
pattern GlagoliticLetterFita :: CombiningCharacter

-- | A pattern synonym for <a>MendeKikakuiCombiningNumberTeens</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e8d0'</tt> (•𞣐).
pattern MendeKikakuiNumberTeens :: CombiningCharacter

-- | A pattern synonym for <a>MendeKikakuiCombiningNumberTens</a>, the name
--   without the <tt>Combining</tt> part, defined by <tt>'\x1e8d1'</tt>
--   (•𞣑).
pattern MendeKikakuiNumberTens :: CombiningCharacter

-- | A pattern synonym for <a>MendeKikakuiCombiningNumberHundreds</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e8d2'</tt> (•𞣒).
pattern MendeKikakuiNumberHundreds :: CombiningCharacter

-- | A pattern synonym for <a>MendeKikakuiCombiningNumberThousands</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e8d3'</tt> (•𞣓).
pattern MendeKikakuiNumberThousands :: CombiningCharacter

-- | A pattern synonym for <a>MendeKikakuiCombiningNumberTenThousands</a>,
--   the name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e8d4'</tt> (•𞣔).
pattern MendeKikakuiNumberTenThousands :: CombiningCharacter

-- | A pattern synonym for
--   <a>MendeKikakuiCombiningNumberHundredThousands</a>, the name without
--   the <tt>Combining</tt> part, defined by <tt>'\x1e8d5'</tt> (•𞣕).
pattern MendeKikakuiNumberHundredThousands :: CombiningCharacter

-- | A pattern synonym for <a>MendeKikakuiCombiningNumberMillions</a>, the
--   name without the <tt>Combining</tt> part, defined by
--   <tt>'\x1e8d6'</tt> (•𞣖).
pattern MendeKikakuiNumberMillions :: CombiningCharacter
instance GHC.Show.Show Data.Char.Combining.CombiningCharacter
instance GHC.Read.Read Data.Char.Combining.CombiningCharacter
instance GHC.Classes.Ord Data.Char.Combining.CombiningCharacter
instance GHC.Classes.Eq Data.Char.Combining.CombiningCharacter
instance GHC.Enum.Enum Data.Char.Combining.CombiningCharacter
instance GHC.Enum.Bounded Data.Char.Combining.CombiningCharacter
instance GHC.Show.Show Data.Char.Combining.CombiningSequence
instance GHC.Read.Read Data.Char.Combining.CombiningSequence
instance GHC.Classes.Ord Data.Char.Combining.CombiningSequence
instance GHC.Classes.Eq Data.Char.Combining.CombiningSequence
instance Data.Char.Combining.ApplyCombine Data.Char.Combining.CombiningCharacter Data.Char.Combining.CombiningCharacter Data.Char.Combining.CombiningSequence
instance Data.Char.Combining.ApplyCombine Data.Char.Combining.CombiningCharacter Data.Char.Combining.CombiningSequence Data.Char.Combining.CombiningSequence
instance Data.Char.Combining.ApplyCombine Data.Char.Combining.CombiningCharacter [Data.Char.Combining.CombiningCharacter] [Data.Char.Combining.CombiningCharacter]
instance Data.Char.Combining.ApplyCombine GHC.Types.Char Data.Char.Combining.CombiningCharacter Data.Text.Internal.Text
instance Data.Char.Combining.ApplyCombine GHC.Types.Char [Data.Char.Combining.CombiningCharacter] Data.Text.Internal.Text
instance Data.Char.Combining.ApplyCombine GHC.Types.Char Data.Char.Combining.CombiningSequence Data.Text.Internal.Text
instance Data.String.IsString Data.Char.Combining.CombiningSequence
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Combining.CombiningSequence
instance Data.String.IsString Data.Char.Combining.CombiningCharacter
instance Data.String.IsString [Data.Char.Combining.CombiningCharacter]
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Combining.CombiningCharacter
instance Data.Char.Core.UnicodeCharacter Data.Char.Combining.CombiningCharacter
instance Data.Char.Core.UnicodeText Data.Char.Combining.CombiningCharacter


-- | One can make use of a <a>block 2600</a> and <a>block 1fa00</a> of
--   Unicode characters to render chess characters. One can render chess
--   characters as <i>netral</i>, <i>white</i>, or <i>black</i> pieces, for
--   such pieces one can render these rotated by 0, 90, 180 and 270
--   degrees. Knights can be rendered on 45, 135, 225 and 315 degrees as
--   well. Furthermore unicode allows to render an <i>equihopper</i>, and
--   special variants like a <i>knight-queen</i>, <i>knight-rook</i>, and
--   <i>knight-bishop</i>.
--   
--   The module contains pattern synonyms for names that are often given to
--   the pieces.
module Data.Char.Chess

-- | The color of a chess piece, this can for most pieces be <a>Black</a>,
--   <a>White</a>, or <a>Neutral</a>.
data ChessColor

-- | <i>White</i> color.
White :: ChessColor

-- | <i>Black</i> color.
Black :: ChessColor

-- | Neutral chess pieces, sometimes depicted half <i>white</i> and half
--   <i>black</i>.
Neutral :: ChessColor

-- | A data type that defined binary colors (<a>BWhite</a>, and
--   <a>BBlack</a>), this is used for special chess pieces like a <i>knight
--   queen</i>, <i>knight rook</i>, and <i>knight bishop</i> that only have
--   no neutral color in unicode.
data ChessColorBinary

-- | <i>White</i> color.
BWhite :: ChessColorBinary

-- | <i>Black</i> color.
BBlack :: ChessColorBinary

-- | The type of chess pieces. Unicode includes an <a>Equihopper</a> as
--   piece as well.
data ChessPieceType

-- | The <i>king</i> chess piece.
King :: ChessPieceType

-- | The <i>queen</i> chess piece.
Queen :: ChessPieceType

-- | The <i>rook</i> chess piece.
Rook :: ChessPieceType

-- | The <i>bishop</i> chess piece.
Bishop :: ChessPieceType

-- | The <i>knight</i> chess piece.
Knight :: ChessPieceType

-- | The <i>pawn</i> chess piece.
Pawn :: ChessPieceType

-- | The <i>equihopper</i> chess piece.
Equihopper :: ChessPieceType

-- | Hybrid chess pieces like the <i>knight-queen</i>, <i>knight-rook</i>
--   and <i>knight-bishop</i>.
data ChessHybridType

-- | The <i>knight-queen</i> chess piece.
KnightQueen :: ChessHybridType

-- | The <i>knight-rook</i> chess piece.
KnightRook :: ChessHybridType

-- | The <i>knight-bishop</i> chess piece.
KnightBishop :: ChessHybridType

-- | Chess pieces that can be represented in Unicode. These are the
--   <i>king</i>, <i>queen</i>, <i>rook</i>, <i>bishop</i>, <i>knight</i>,
--   <i>pawn</i>, and <i>equihopper</i> over 0, 90, 180, and 270 degrees;
--   and the <i>knight</i> over <i>45</i>, <i>135</i>, <i>225</i>, and
--   <i>315</i> degrees in <a>Black</a>, <a>White</a> and <a>Neutral</a>.
--   Furthermore one can draw a <i>knight-queen</i>, <i>knight-rook</i>,
--   and <i>knight-bishop</i> pieces can be drawn without rotation and only
--   in <a>BBlack</a> or <a>BWhite</a>.
data ChessPiece

-- | Standard pieces drawn in <i>black</i>, <i>white</i>, or <i>neutral</i>
--   and with rotation.
Chess90 :: ChessColor -> ChessPieceType -> Rotate90 -> ChessPiece

-- | <i>Knights</i> have unicode characters to render these rotated over
--   <i>45</i>, <i>135</i>, <i>225</i> and <i>315</i> degrees.
Chess45Knight :: ChessColor -> Rotate45 -> ChessPiece

-- | Hybrid chess pieces can only be rendered in <a>BBlack</a> and
--   <a>BWhite</a>.
ChessHybrid :: ChessHybridType -> ChessColorBinary -> ChessPiece

-- | Extra rotations that can be performed for knight chess pieces.
data Rotate45

-- | Rotation over <i>45</i> degrees.
R45 :: Rotate45

-- | Rotation over <i>135</i> degrees.
R135 :: Rotate45

-- | Rotation over <i>225</i> degrees.
R225 :: Rotate45

-- | Rotation over <i>315</i> degrees.
R315 :: Rotate45

-- | Convert the given <a>ChessPiece</a> to the corresponding unicode
--   character.
chessPiece :: ChessPiece -> Char

-- | A <i>grasshopper</i> is a <i>queen</i> rotated over 180 degrees.
pattern Grasshopper :: ChessColor -> ChessPiece

-- | A <i>Nightrider</i> is a <i>knight</i> rotated over 180 degrees.
pattern Nightrider :: ChessColor -> ChessPiece

-- | An <i>amazon</i> is alterative name for a <i>knight-queen</i>.
pattern Amazon :: ChessColorBinary -> ChessPiece

-- | A <i>terror</i> is alterative name for a <i>knight-queen</i>.
pattern Terror :: ChessColorBinary -> ChessPiece

-- | An <i>omnipotent queen</i> is alterative name for a
--   <i>knight-queen</i>.
pattern OmnipotentQueen :: ChessColorBinary -> ChessPiece

-- | A <i>superqueen</i> is alterative name for a <i>knight-queen</i>.
pattern Superqueen :: ChessColorBinary -> ChessPiece

-- | A <i>chancellor</i> is alterative name for a <i>knight-rook</i>.
pattern Chancellor :: ChessColorBinary -> ChessPiece

-- | A <i>marshall</i> is alterative name for a <i>knight-rook</i>.
pattern Marshall :: ChessColorBinary -> ChessPiece

-- | An <i>empress</i> is alterative name for a <i>knight-rook</i>.
pattern Empress :: ChessColorBinary -> ChessPiece

-- | A <i>cardinal</i> is alterative name for a <i>knight-bishop</i>.
pattern Cardinal :: ChessColorBinary -> ChessPiece

-- | A <i>princess</i> is alterative name for a <i>knight-bishop</i>.
pattern Princess :: ChessColorBinary -> ChessPiece
instance GHC.Show.Show Data.Char.Chess.ChessColorBinary
instance GHC.Read.Read Data.Char.Chess.ChessColorBinary
instance GHC.Classes.Ord Data.Char.Chess.ChessColorBinary
instance GHC.Generics.Generic Data.Char.Chess.ChessColorBinary
instance GHC.Classes.Eq Data.Char.Chess.ChessColorBinary
instance GHC.Enum.Enum Data.Char.Chess.ChessColorBinary
instance Data.Data.Data Data.Char.Chess.ChessColorBinary
instance GHC.Enum.Bounded Data.Char.Chess.ChessColorBinary
instance GHC.Show.Show Data.Char.Chess.ChessColor
instance GHC.Read.Read Data.Char.Chess.ChessColor
instance GHC.Classes.Ord Data.Char.Chess.ChessColor
instance GHC.Generics.Generic Data.Char.Chess.ChessColor
instance GHC.Classes.Eq Data.Char.Chess.ChessColor
instance GHC.Enum.Enum Data.Char.Chess.ChessColor
instance Data.Data.Data Data.Char.Chess.ChessColor
instance GHC.Enum.Bounded Data.Char.Chess.ChessColor
instance GHC.Show.Show Data.Char.Chess.ChessPieceType
instance GHC.Read.Read Data.Char.Chess.ChessPieceType
instance GHC.Classes.Ord Data.Char.Chess.ChessPieceType
instance GHC.Generics.Generic Data.Char.Chess.ChessPieceType
instance GHC.Classes.Eq Data.Char.Chess.ChessPieceType
instance GHC.Enum.Enum Data.Char.Chess.ChessPieceType
instance Data.Data.Data Data.Char.Chess.ChessPieceType
instance GHC.Enum.Bounded Data.Char.Chess.ChessPieceType
instance GHC.Show.Show Data.Char.Chess.Rotate45
instance GHC.Read.Read Data.Char.Chess.Rotate45
instance GHC.Classes.Ord Data.Char.Chess.Rotate45
instance GHC.Generics.Generic Data.Char.Chess.Rotate45
instance GHC.Classes.Eq Data.Char.Chess.Rotate45
instance GHC.Enum.Enum Data.Char.Chess.Rotate45
instance Data.Data.Data Data.Char.Chess.Rotate45
instance GHC.Enum.Bounded Data.Char.Chess.Rotate45
instance GHC.Show.Show Data.Char.Chess.ChessHybridType
instance GHC.Read.Read Data.Char.Chess.ChessHybridType
instance GHC.Classes.Ord Data.Char.Chess.ChessHybridType
instance GHC.Generics.Generic Data.Char.Chess.ChessHybridType
instance GHC.Classes.Eq Data.Char.Chess.ChessHybridType
instance GHC.Enum.Enum Data.Char.Chess.ChessHybridType
instance Data.Data.Data Data.Char.Chess.ChessHybridType
instance GHC.Enum.Bounded Data.Char.Chess.ChessHybridType
instance GHC.Show.Show Data.Char.Chess.ChessPiece
instance GHC.Read.Read Data.Char.Chess.ChessPiece
instance GHC.Classes.Ord Data.Char.Chess.ChessPiece
instance GHC.Generics.Generic Data.Char.Chess.ChessPiece
instance GHC.Classes.Eq Data.Char.Chess.ChessPiece
instance Data.Data.Data Data.Char.Chess.ChessPiece
instance Data.Hashable.Class.Hashable Data.Char.Chess.ChessPiece
instance Control.DeepSeq.NFData Data.Char.Chess.ChessPiece
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Chess.ChessPiece
instance Data.Hashable.Class.Hashable Data.Char.Chess.ChessHybridType
instance Control.DeepSeq.NFData Data.Char.Chess.ChessHybridType
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Chess.ChessHybridType
instance Data.Hashable.Class.Hashable Data.Char.Chess.Rotate45
instance Control.DeepSeq.NFData Data.Char.Chess.Rotate45
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Chess.Rotate45
instance Data.Hashable.Class.Hashable Data.Char.Chess.ChessPieceType
instance Control.DeepSeq.NFData Data.Char.Chess.ChessPieceType
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Chess.ChessPieceType
instance Data.Hashable.Class.Hashable Data.Char.Chess.ChessColor
instance Control.DeepSeq.NFData Data.Char.Chess.ChessColor
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Chess.ChessColor
instance Data.Hashable.Class.Hashable Data.Char.Chess.ChessColorBinary
instance Control.DeepSeq.NFData Data.Char.Chess.ChessColorBinary
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Chess.ChessColorBinary


-- | The <a>1F0A0 code block</a> can be used to work with cards. This
--   module makes working with the three sets of cards more convenient. The
--   first set are cards with a suit (four suits) and a rank (14 ranks),
--   which allows us to generate 56 cards. Next there are three jokes with
--   the colors <i>red</i>, <i>black</i> and <i>white</i>. Finally there
--   are 21 trump cards and the fool card (a tarot card which normally has
--   no number).
--   
--   The module contains pattern synonyms that define common aliasses for
--   these cards.
module Data.Char.Card

-- | A data type for the card suits
data CardSuit

-- | The <i>spades</i> card suit.
Spades :: CardSuit

-- | The <i>hearts</i> card suit.
Hearts :: CardSuit

-- | The <i>diamonds</i> card suit.
Diamonds :: CardSuit

-- | The <i>clubs</i> card suit.
Clubs :: CardSuit

-- | A data type for the rank of the card.
data CardRank

-- | The <i>ace</i> card rank.
Ace :: CardRank

-- | Card rank 2.
R2 :: CardRank

-- | Card rank 3.
R3 :: CardRank

-- | Card rank 4.
R4 :: CardRank

-- | Card rank 5.
R5 :: CardRank

-- | Card rank 6.
R6 :: CardRank

-- | Card rank 7.
R7 :: CardRank

-- | Card rank 8.
R8 :: CardRank

-- | Card rank 9.
R9 :: CardRank

-- | Card rank 10.
R10 :: CardRank

-- | The <i>jack</i> card rank.
Jack :: CardRank

-- | The <i>knight</i> card rank.
Knight :: CardRank

-- | The <i>queen</i> card rank.
Queen :: CardRank

-- | The <i>king</i> card rank.
King :: CardRank

-- | A data type to represent the three colors for which there are jokers:
--   <i>red</i>, <i>black</i> and <i>white</i>.
data JokerColor

-- | The <i>red</i> joker.
Red :: JokerColor

-- | The <i>black</i> joker.
Black :: JokerColor

-- | The <i>white</i> joker.
White :: JokerColor

-- | A data type for the trump cards, often used for <i>tarot</i>.
data Trump

-- | The <i>fool</i> trump card, this tarot card is normally not numbered.
Fool :: Trump

-- | Tarot card <i>I</i>.
Trump1 :: Trump

-- | Tarot card <i>II</i>.
Trump2 :: Trump

-- | Tarot card <i>III</i>.
Trump3 :: Trump

-- | Tarot card <i>IV</i>.
Trump4 :: Trump

-- | Tarot card <i>V</i>.
Trump5 :: Trump

-- | Tarot card <i>VI</i>.
Trump6 :: Trump

-- | Tarot card <i>VII</i>.
Trump7 :: Trump

-- | Tarot card <i>VIII</i>.
Trump8 :: Trump

-- | Tarot card <i>IX</i>.
Trump9 :: Trump

-- | Tarot card <i>X</i>.
Trump10 :: Trump

-- | Tarot card <i>XI</i>.
Trump11 :: Trump

-- | Tarot card <i>XII</i>.
Trump12 :: Trump

-- | Tarot card <i>XIII</i>.
Trump13 :: Trump

-- | Tarot card <i>XIV</i>.
Trump14 :: Trump

-- | Tarot card <i>XV</i>.
Trump15 :: Trump

-- | Tarot card <i>XVI</i>.
Trump16 :: Trump

-- | Tarot card <i>XVII</i>.
Trump17 :: Trump

-- | Tarot card <i>XVIII</i>.
Trump18 :: Trump

-- | Tarot card <i>XIX</i>.
Trump19 :: Trump

-- | Tarot card <i>XX</i>.
Trump20 :: Trump

-- | Tarot card <i>XXI</i>.
Trump21 :: Trump

-- | A data type that represents the possible types of cards for which
--   there is a Unicode characters. This is the back of a card, a card with
--   a suit and rank, three <i>jokers</i>, and the 21 <i>trump</i> cards
--   and the <i>fool</i>.
data Card

-- | The back of the card.
Back :: Card

-- | A card that is a combination of a <a>CardSuit</a> and a
--   <a>CardRank</a>. There are 56 possibilities.
Card :: CardSuit -> CardRank -> Card

-- | Three possible <a>JokerColor</a> cards.
Joker :: JokerColor -> Card
Trump :: Trump -> Card

-- | The unicode character that represents the <i>back</i> of the card.
back :: Char

-- | Convert the given <a>Card</a> object to its unicode equivalent.
card :: Card -> Char

-- | Convert the given <a>CardSuit</a> and <a>CardRank</a> to the
--   equivalent unicode character for this card.
card' :: CardSuit -> CardRank -> Char

-- | Convert the given <a>JokerColor</a> to the unicode character which
--   represents this joker color.
joker :: JokerColor -> Char

-- | Convert the given 't:Trump' value to the unicode equivalent.
trump :: Trump -> Char

-- | <i>Swords</i> is an alias for the <i>spades</i> card suit.
pattern Swords :: CardSuit

-- | <i>Cups</i> is an alias for the <i>hearts</i> card suit.
pattern Cups :: CardSuit

-- | <i>Pentacles</i> is an alias for the <i>diamonds</i> card suit.
pattern Pentacles :: CardSuit

-- | <i>Wands</i> is an alias for the <i>clubs</i> card suit.
pattern Wands :: CardSuit

-- | In France, the <i>jack</i> is sometimes called the <i>valet</i>.
pattern Valet :: CardRank

-- | In Germany, Austria and Switzerland, the <i>jack</i> is sometimes
--   called the <i>bube</i>.
pattern Bube :: CardRank

-- | In Germany and Switzerland, the <i>jack</i> is sometimes called the
--   <i>unter</i>.
pattern Unter :: CardRank

-- | An alternative name for the <i>jack</i> is <i>page</i>.
pattern Page :: CardRank

-- | In Italy, the <i>jack</i> is sometimes called the <i>fante</i>.
pattern Fante :: CardRank

-- | In France, the <i>knight</i> is sometimes called the <i>chevalier</i>.
pattern Chevalier :: CardRank

-- | In Germany, the <i>knight</i> is sometimes called the <i>ober</i>.
pattern Ober :: CardRank

-- | In Germany, the <i>knight</i> is sometimes called the <i>ritter</i>.
pattern Ritter :: CardRank

-- | An alternative name for the <i>jack</i> is <i>cavall</i>.
pattern Cavall :: CardRank

-- | An alternative name for the <i>jack</i> is <i>cavaliere</i>.
pattern Cavaliere :: CardRank

-- | An alternative name for the <i>queen</i> is <i>dame</i>.
pattern Dame :: CardRank

-- | In Germany, the <i>queen</i> is sometimes called the <i>königin</i>.
pattern Königin :: CardRank

-- | In Italy, the <i>queen</i> is sometimes called the <i>regina</i>.
pattern Regina :: CardRank

-- | In France, the <i>king</i> is sometimes called the <i>roi</i>.
pattern Roi :: CardRank

-- | In Germany, the <i>king</i> is sometimes called the <i>könig</i>.
pattern König :: CardRank

-- | In Italy, the <i>queen</i> is sometimes called the <i>re</i>.
pattern Re :: CardRank

-- | The trump card with number <i>II</i> is named <i>childhood</i>.
pattern Childhood :: Trump

-- | The trump card with number <i>III</i> is named <i>youth</i>.
pattern Youth :: Trump

-- | The trump card with number <i>IV</i> is named <i>maturity</i>.
pattern Maturity :: Trump

-- | The trump card with number <i>V</i> is named <i>old age</i>.
pattern OldAge :: Trump

-- | The trump card with number <i>VI</i> is named <i>morning</i>.
pattern Morning :: Trump

-- | The trump card with number <i>VII</i> is named <i>afternoon</i>.
pattern Afternoon :: Trump

-- | The trump card with number <i>VIII</i> is named <i>evening</i>.
pattern Evening :: Trump

-- | The trump card with number <i>IX</i> is named <i>night</i>.
pattern Night :: Trump

-- | The trump card with number <i>X</i> is named <i>earth</i>.
pattern Earth :: Trump

-- | The trump card with number <i>X</i> is named <i>air</i>.
pattern Air :: Trump

-- | The trump card with number <i>XI</i> is named <i>water</i>.
pattern Water :: Trump

-- | The trump card with number <i>XI</i> is named <i>fire</i>.
pattern Fire :: Trump

-- | The trump card with number <i>XII</i> is named <i>dance</i>.
pattern Dance :: Trump

-- | The trump card with number <i>XIII</i> is named <i>shopping</i>.
pattern Shopping :: Trump

-- | The trump card with number <i>XIV</i> is named <i>open air</i>.
pattern OpenAir :: Trump

-- | The trump card with number <i>XV</i> is named <i>visual arts</i>.
pattern VisualArts :: Trump

-- | The trump card with number <i>XVI</i> is named <i>spring</i>.
pattern Spring :: Trump

-- | The trump card with number <i>XVII</i> is named <i>summer</i>.
pattern Summer :: Trump

-- | The trump card with number <i>XVIII</i> is named <i>autumn</i>.
pattern Autumn :: Trump

-- | The trump card with number <i>XIX</i> is named <i>winter</i>.
pattern Winter :: Trump

-- | The trump card with number <i>XX</i> is named the <i>game</i>.
pattern Game :: Trump

-- | The trump card with number <i>XXI</i> is named <i>collective</i>.
pattern Collective :: Trump

-- | The trump card with number <i>I</i> is named <i>individual</i>.
pattern Individual :: Trump
instance GHC.Show.Show Data.Char.Card.CardSuit
instance GHC.Read.Read Data.Char.Card.CardSuit
instance GHC.Classes.Ord Data.Char.Card.CardSuit
instance GHC.Generics.Generic Data.Char.Card.CardSuit
instance GHC.Classes.Eq Data.Char.Card.CardSuit
instance GHC.Enum.Enum Data.Char.Card.CardSuit
instance Data.Data.Data Data.Char.Card.CardSuit
instance GHC.Enum.Bounded Data.Char.Card.CardSuit
instance GHC.Show.Show Data.Char.Card.CardRank
instance GHC.Read.Read Data.Char.Card.CardRank
instance GHC.Classes.Ord Data.Char.Card.CardRank
instance GHC.Generics.Generic Data.Char.Card.CardRank
instance GHC.Classes.Eq Data.Char.Card.CardRank
instance GHC.Enum.Enum Data.Char.Card.CardRank
instance Data.Data.Data Data.Char.Card.CardRank
instance GHC.Enum.Bounded Data.Char.Card.CardRank
instance GHC.Show.Show Data.Char.Card.JokerColor
instance GHC.Read.Read Data.Char.Card.JokerColor
instance GHC.Classes.Ord Data.Char.Card.JokerColor
instance GHC.Generics.Generic Data.Char.Card.JokerColor
instance GHC.Classes.Eq Data.Char.Card.JokerColor
instance GHC.Enum.Enum Data.Char.Card.JokerColor
instance Data.Data.Data Data.Char.Card.JokerColor
instance GHC.Enum.Bounded Data.Char.Card.JokerColor
instance GHC.Show.Show Data.Char.Card.Trump
instance GHC.Read.Read Data.Char.Card.Trump
instance GHC.Classes.Ord Data.Char.Card.Trump
instance GHC.Generics.Generic Data.Char.Card.Trump
instance GHC.Classes.Eq Data.Char.Card.Trump
instance GHC.Enum.Enum Data.Char.Card.Trump
instance Data.Data.Data Data.Char.Card.Trump
instance GHC.Enum.Bounded Data.Char.Card.Trump
instance GHC.Show.Show Data.Char.Card.Card
instance GHC.Read.Read Data.Char.Card.Card
instance GHC.Classes.Ord Data.Char.Card.Card
instance GHC.Generics.Generic Data.Char.Card.Card
instance GHC.Classes.Eq Data.Char.Card.Card
instance Data.Data.Data Data.Char.Card.Card
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Card.Card
instance GHC.Enum.Bounded Data.Char.Card.Card
instance Data.Hashable.Class.Hashable Data.Char.Card.Card
instance Control.DeepSeq.NFData Data.Char.Card.Card
instance Data.Hashable.Class.Hashable Data.Char.Card.Trump
instance Control.DeepSeq.NFData Data.Char.Card.Trump
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Card.Trump
instance Data.Hashable.Class.Hashable Data.Char.Card.JokerColor
instance Control.DeepSeq.NFData Data.Char.Card.JokerColor
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Card.JokerColor
instance Data.Hashable.Class.Hashable Data.Char.Card.CardRank
instance Control.DeepSeq.NFData Data.Char.Card.CardRank
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Card.CardRank
instance Data.Hashable.Class.Hashable Data.Char.Card.CardSuit
instance Control.DeepSeq.NFData Data.Char.Card.CardSuit
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Card.CardSuit
instance Data.Char.Core.UnicodeCharacter Data.Char.Card.CardSuit
instance Data.Char.Core.UnicodeText Data.Char.Card.CardSuit


-- | Unicode has 2-by-2 blocks, this module aims to make it more convenient
--   to render such blocks.
module Data.Char.Block

-- | A data type that determines the state of the <i>row</i> in a block. it
--   determines the left and the right part of the row of the block.
data Row a
Row :: a -> a -> Row a

-- | The left part of a row of the block.
[left] :: Row a -> a

-- | The right part of the row of the block.
[right] :: Row a -> a

-- | Convert the given <a>Row</a> of <a>Bool</a>eans to an <a>Int</a> where
--   the left <a>Bool</a> has value 1, and the right one has value two. The
--   four different <a>Row</a>s thus are mapped to integers from zero to
--   three (both inclusive).
rowValue :: Row Bool -> Int

-- | Convert the given number to a <a>Row</a> of <a>Bool</a>s wrapped in a
--   <a>Just</a>. if the value is out of bounds, <a>Nothing</a> is
--   returned.
toRow :: Int -> Maybe (Row Bool)

-- | Convert the given number to a <a>Row</a> of <a>Bool</a>s. If the value
--   is out of bounds, it is unspecified what will happen.
toRow' :: Int -> Row Bool

-- | A pattern synonym for a <a>Row</a> where both the left and right
--   subpart are <a>False</a>.
pattern EmptyRow :: Row Bool

-- | A pattern synonym for a <a>Row</a> where both the left and right
--   subpart are <a>True</a>.
pattern FullRow :: Row Bool

-- | A pattern synonym for a <a>Row</a> where the left part is set to
--   <a>True</a>, and the right part is set to <a>False</a>.
pattern LeftRow :: Row Bool

-- | A pattern synonym for a <a>Row</a> where the left part is set to
--   <a>False</a>, and the right part is set to <a>True</a>.
pattern RightRow :: Row Bool

-- | A data type that determines the state of the four subparts of the
--   block.
data Block a
Block :: Row a -> Row a -> Block a

-- | The upper part of the block.
[upper] :: Block a -> Row a

-- | The lower part of the block.
[lower] :: Block a -> Row a

-- | Convert the given <a>Block</a> value to a block character in unicode.
--   <a>True</a> means that part is filled, and <a>False</a> means the part
--   is not filled.
filled :: Block Bool -> Char

-- | Convert the given <a>Char</a>acter to a <a>Block</a> of <a>Bool</a>s
--   wrapped in a <a>Just</a> if it exists; <a>Nothing</a> otherwise.
fromBlock :: Char -> Maybe (Block Bool)

-- | Convert the given <a>Char</a>acter to a <a>Block</a> of <a>Bool</a>s
--   if it exists; unspecified result otherwise.
fromBlock' :: Char -> Block Bool

-- | A pattern synonym for a <i>block</i> <a>Char</a>acter that will render
--   an empty block, this is equivalent to a space.
pattern EmptyBlock :: Char

-- | A pattern synonym for the <i>block</i> <a>Char</a>acter that will
--   render a full block.
pattern FullBlock :: Char

-- | A pattern synonym for a <i>block</i> <a>Char</a>acter that will render
--   a block where the <i>left</i> half of the block is filled.
pattern LeftHalfBlock :: Char

-- | A pattern synonym for a <i>block</i> <a>Char</a>acter that will render
--   a block where the <i>right</i> half of the block is filled.
pattern RightHalfBlock :: Char
instance Data.Traversable.Traversable Data.Char.Block.Row
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Block.Row a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Block.Row a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Block.Row a)
instance GHC.Generics.Generic1 Data.Char.Block.Row
instance GHC.Generics.Generic (Data.Char.Block.Row a)
instance GHC.Base.Functor Data.Char.Block.Row
instance Data.Foldable.Foldable Data.Char.Block.Row
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Block.Row a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Block.Row a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Block.Row a)
instance Data.Traversable.Traversable Data.Char.Block.Block
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Block.Block a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Block.Block a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Block.Block a)
instance GHC.Generics.Generic1 Data.Char.Block.Block
instance GHC.Generics.Generic (Data.Char.Block.Block a)
instance GHC.Base.Functor Data.Char.Block.Block
instance Data.Foldable.Foldable Data.Char.Block.Block
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Block.Block a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Block.Block a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Block.Block a)
instance Data.Functor.Classes.Eq1 Data.Char.Block.Block
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Block.Block a)
instance Data.Hashable.Class.Hashable1 Data.Char.Block.Block
instance Data.Char.Core.MirrorVertical (Data.Char.Block.Block a)
instance Data.Char.Core.MirrorHorizontal (Data.Char.Block.Block a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Block.Block a)
instance Control.DeepSeq.NFData1 Data.Char.Block.Block
instance Data.Functor.Classes.Ord1 Data.Char.Block.Block
instance GHC.Base.Applicative Data.Char.Block.Block
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Block.Block a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Block.Block
instance Data.Char.Core.UnicodeCharacter (Data.Char.Block.Block GHC.Types.Bool)
instance Data.Char.Core.UnicodeText (Data.Char.Block.Block GHC.Types.Bool)
instance Data.Functor.Classes.Eq1 Data.Char.Block.Row
instance Data.Hashable.Class.Hashable1 Data.Char.Block.Row
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Block.Row a)
instance Data.Char.Core.MirrorVertical (Data.Char.Block.Row a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Block.Row a)
instance Control.DeepSeq.NFData1 Data.Char.Block.Row
instance Data.Functor.Classes.Ord1 Data.Char.Block.Row
instance GHC.Base.Applicative Data.Char.Block.Row
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Block.Row a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Block.Row


-- | Unicode has a Braille segment for Braille with six dot cells, and a
--   segment for Braille with eight dot cells, this module aims to make it
--   more convenient to render such characters.
module Data.Char.Braille

-- | A datastructure to render Braille patterns with six dots cells.
data Braille6 a
Braille6 :: Row a -> Row a -> Row a -> Braille6 a

-- | The state of the top row of the Braille character.
[top] :: Braille6 a -> Row a

-- | The state of the middle row of the Braille character.
[middle] :: Braille6 a -> Row a

-- | The state of the bottom row of the Braille character.
[bottom] :: Braille6 a -> Row a

-- | A datastructure to render Braille patterns with eight dots cells.
data Braille a
Braille :: Row a -> Row a -> Row a -> Row a -> Braille a

-- | The state of the top row of the Braille character.
[row1] :: Braille a -> Row a

-- | The state of the second row of the Braille character.
[row2] :: Braille a -> Row a

-- | The state of the third row of the Braille character.
[row3] :: Braille a -> Row a

-- | The state of the bottom row of the Braille character.
[row4] :: Braille a -> Row a

-- | Convert a <a>Braille6</a> value to a <a>Braille6</a> character by
--   setting the bottom row with two <a>False</a> values.
toBraille :: Braille6 Bool -> Braille Bool

-- | Convert a <a>Braille6</a> value to a <a>Braille</a> character, by
--   putting in a given value at the two values at the bottom row.
toBraille' :: a -> Braille6 a -> Braille a

-- | Convert the given <a>Braille6</a> value to a unicode character
--   representing this Braille value.
braille6 :: Braille6 Bool -> Char

-- | Convert the given <a>Braille</a> value to a unicode character
--   representing this braille value.
braille :: Braille Bool -> Char

-- | Convert the given <a>Char</a>acter to a <a>Braille6</a> object of
--   <a>Bool</a>s wrapped in a <a>Just</a>. If the given character is not a
--   <i>Braille</i> character, or a <i>Braille</i> character where the
--   lowest row contains filled dots, <a>Nothing</a> is returned.
fromBraille6 :: Char -> Maybe (Braille6 Bool)

-- | Convert the given <a>Char</a>acter to a <a>Braille6</a> object of
--   <a>Bool</a>s. If the given character is not a <i>Braille</i>
--   character, or a <i>Braille</i> character where the lowest row contains
--   filled dots, then the result is unspecified.
fromBraille6' :: Char -> Braille6 Bool

-- | Convert the given <a>Char</a>acter to a <a>Braille</a> object of
--   <a>Bool</a>s wrapped in a <a>Just</a>. If the given character is not a
--   <i>Braille</i> character, <a>Nothing</a> is returned.
fromBraille :: Char -> Maybe (Braille Bool)

-- | Convert the given <a>Char</a>acter to a <a>Braille</a> object of
--   <a>Bool</a>s. If the given character is not a <i>Braille</i>
--   character, the result is unspecified.
fromBraille' :: Char -> Braille Bool
instance Data.Traversable.Traversable Data.Char.Braille.Braille6
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Braille.Braille6 a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Braille.Braille6 a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Braille.Braille6 a)
instance GHC.Generics.Generic1 Data.Char.Braille.Braille6
instance GHC.Generics.Generic (Data.Char.Braille.Braille6 a)
instance GHC.Base.Functor Data.Char.Braille.Braille6
instance Data.Foldable.Foldable Data.Char.Braille.Braille6
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Braille.Braille6 a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Braille.Braille6 a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Braille.Braille6 a)
instance Data.Traversable.Traversable Data.Char.Braille.Braille
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Braille.Braille a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Braille.Braille a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Braille.Braille a)
instance GHC.Generics.Generic1 Data.Char.Braille.Braille
instance GHC.Generics.Generic (Data.Char.Braille.Braille a)
instance GHC.Base.Functor Data.Char.Braille.Braille
instance Data.Foldable.Foldable Data.Char.Braille.Braille
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Braille.Braille a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Braille.Braille a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Braille.Braille a)
instance Data.Functor.Classes.Eq1 Data.Char.Braille.Braille
instance Data.Hashable.Class.Hashable1 Data.Char.Braille.Braille
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Braille.Braille a)
instance Data.Char.Core.MirrorHorizontal (Data.Char.Braille.Braille a)
instance Data.Char.Core.MirrorVertical (Data.Char.Braille.Braille a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Braille.Braille a)
instance Control.DeepSeq.NFData1 Data.Char.Braille.Braille
instance Data.Functor.Classes.Ord1 Data.Char.Braille.Braille
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Braille.Braille a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Braille.Braille
instance Data.Char.Core.UnicodeCharacter (Data.Char.Braille.Braille GHC.Types.Bool)
instance Data.Char.Core.UnicodeText (Data.Char.Braille.Braille GHC.Types.Bool)
instance Data.Functor.Classes.Eq1 Data.Char.Braille.Braille6
instance Data.Hashable.Class.Hashable1 Data.Char.Braille.Braille6
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Braille.Braille6 a)
instance Data.Char.Core.MirrorHorizontal (Data.Char.Braille.Braille6 a)
instance Data.Char.Core.MirrorVertical (Data.Char.Braille.Braille6 a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Braille.Braille6 a)
instance Control.DeepSeq.NFData1 Data.Char.Braille.Braille6
instance Data.Functor.Classes.Ord1 Data.Char.Braille.Braille6
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Braille.Braille6 a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Braille.Braille6
instance Data.Char.Core.UnicodeCharacter (Data.Char.Braille.Braille6 GHC.Types.Bool)
instance Data.Char.Core.UnicodeText (Data.Char.Braille.Braille6 GHC.Types.Bool)


-- | Unicode has 3-by-2 blocks, this module aims to make it more convenient
--   to render such blocks.
module Data.Char.Block.Sextant

-- | A data type that determines the state of the four subparts of the
--   block.
data Sextant a
Sextant :: Row a -> Row a -> Row a -> Sextant a

-- | The upper part of the sextant.
[upper] :: Sextant a -> Row a

-- | The middle part of the sextant.
[middle] :: Sextant a -> Row a

-- | The lower part of the sextant.
[lower] :: Sextant a -> Row a

-- | Check if the given <a>Char</a>acter is a <a>Char</a>acter that maps on
--   a <a>Sextant</a> value.
isSextant :: Char -> Bool

-- | Convert the given <a>Sextant</a> of <a>Bool</a>s to a <a>Char</a>
--   where raster items of the <a>Sextant</a> are written in black, and the
--   rest in white.
filled :: Sextant Bool -> Char

-- | Convert the given <a>Char</a> to the corresponding <a>Sextant</a>
--   object wrapped in a <a>Just</a> data constructor. If the given
--   <a>Char</a> is not a sextant character, <a>Nothing</a> is returned.
fromSextant :: Char -> Maybe (Sextant Bool)

-- | Convert the given <a>Char</a> to the corresponding <a>Sextant</a>
--   object wrapped If the given <a>Char</a> is not a sextant character, it
--   is unspecified what will happen.
fromSextant' :: Char -> Sextant Bool
instance Data.Traversable.Traversable Data.Char.Block.Sextant.Sextant
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Block.Sextant.Sextant a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Block.Sextant.Sextant a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Block.Sextant.Sextant a)
instance GHC.Generics.Generic1 Data.Char.Block.Sextant.Sextant
instance GHC.Generics.Generic (Data.Char.Block.Sextant.Sextant a)
instance GHC.Base.Functor Data.Char.Block.Sextant.Sextant
instance Data.Foldable.Foldable Data.Char.Block.Sextant.Sextant
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Block.Sextant.Sextant a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Block.Sextant.Sextant a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Block.Sextant.Sextant a)
instance Data.Functor.Classes.Eq1 Data.Char.Block.Sextant.Sextant
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Block.Sextant.Sextant a)
instance Data.Hashable.Class.Hashable1 Data.Char.Block.Sextant.Sextant
instance Data.Char.Core.MirrorVertical (Data.Char.Block.Sextant.Sextant a)
instance Data.Char.Core.MirrorHorizontal (Data.Char.Block.Sextant.Sextant a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Block.Sextant.Sextant a)
instance Control.DeepSeq.NFData1 Data.Char.Block.Sextant.Sextant
instance Data.Functor.Classes.Ord1 Data.Char.Block.Sextant.Sextant
instance GHC.Base.Applicative Data.Char.Block.Sextant.Sextant
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Block.Sextant.Sextant a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Block.Sextant.Sextant
instance Data.Char.Core.UnicodeCharacter (Data.Char.Block.Sextant.Sextant GHC.Types.Bool)
instance Data.Char.Core.UnicodeText (Data.Char.Block.Sextant.Sextant GHC.Types.Bool)


-- | Unicode has a <a>block</a> named <i>Miscellaneous Symbols</i> that
--   includes unicode characters for boxes that are empty, contain a check
--   or a cross, this module aims to make it more convenient to render
--   these.
module Data.Char.BallotBox

-- | A datatype that represents the different types of ballot boxes.
data BallotBox

-- | The box is <i>empty</i>, this is represented with ☐.
Empty :: BallotBox

-- | The box has a <i>check</i>, this is represented with ☑.
Check :: BallotBox

-- | The box has a <i>cross</i>, this is represented with ☒.
Cross :: BallotBox

-- | Convert the given <a>Bool</a>ean to a <a>BallotBox</a> that is
--   <a>Empty</a>, or contains a <a>Check</a>.
toCheckBox :: Bool -> BallotBox

-- | Convert the given <a>Bool</a>ean to a <a>BallotBox</a> that is
--   <a>Empty</a>, or contains a <a>Cross</a>.
toCrossBox :: Bool -> BallotBox
instance GHC.Show.Show Data.Char.BallotBox.BallotBox
instance GHC.Read.Read Data.Char.BallotBox.BallotBox
instance GHC.Classes.Ord Data.Char.BallotBox.BallotBox
instance GHC.Generics.Generic Data.Char.BallotBox.BallotBox
instance GHC.Classes.Eq Data.Char.BallotBox.BallotBox
instance GHC.Enum.Enum Data.Char.BallotBox.BallotBox
instance Data.Data.Data Data.Char.BallotBox.BallotBox
instance GHC.Enum.Bounded Data.Char.BallotBox.BallotBox
instance Data.Hashable.Class.Hashable Data.Char.BallotBox.BallotBox
instance Control.DeepSeq.NFData Data.Char.BallotBox.BallotBox
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.BallotBox.BallotBox
instance Data.Char.Core.UnicodeCharacter Data.Char.BallotBox.BallotBox
instance Data.Char.Core.UnicodeText Data.Char.BallotBox.BallotBox


-- | Unicode has multiple code blocks where it defines currencies. This
--   module aims to expose a data structure that makes it more convenient
--   to work with currency characters.
module Data.Char.Currency

-- | A datatype to present the currencies that have a unicode character.
data Currency

-- | A currency that is rendered as <tt>$</tt>.
Dollar :: Currency

-- | A currency that is rendered as <tt>¢</tt>.
Cent :: Currency

-- | A currency that is rendered as <tt>£</tt>.
Pound :: Currency

-- | A currency that is rendered as <tt>¤</tt>.
Currency :: Currency

-- | A currency that is rendered as <tt>¥</tt>.
Yen :: Currency

-- | A currency that is rendered as <tt>֏</tt>.
ArmenianDram :: Currency

-- | A currency that is rendered as <tt>؋</tt>.
Afghani :: Currency

-- | A currency that is rendered as <tt>߾</tt>.
NkoDorome :: Currency

-- | A currency that is rendered as <tt>߿</tt>.
NkoTaman :: Currency

-- | A currency that is rendered as <tt>৲</tt>.
BengaliRupeeMark :: Currency

-- | A currency that is rendered as <tt>৳</tt>.
BengaliRupee :: Currency

-- | A currency that is rendered as <tt>৻</tt>.
BengaliGandaMark :: Currency

-- | A currency that is rendered as <tt>૱</tt>.
GujaratiRupee :: Currency

-- | A currency that is rendered as <tt>௹</tt>.
TamilRupee :: Currency

-- | A currency that is rendered as <tt>฿</tt>.
ThaiSymbolBaht :: Currency

-- | A currency that is rendered as <tt>៛</tt>.
KhmerSymbolRiel :: Currency

-- | A currency that is rendered as <tt>₠</tt>.
EuroCurrency :: Currency

-- | A currency that is rendered as <tt>₡</tt>.
Colon :: Currency

-- | A currency that is rendered as <tt>₢</tt>.
Cruzeiro :: Currency

-- | A currency that is rendered as <tt>₣</tt>.
FrenchFranc :: Currency

-- | A currency that is rendered as <tt>₤</tt>.
Lira :: Currency

-- | A currency that is rendered as <tt>₥</tt>.
Mill :: Currency

-- | A currency that is rendered as <tt>₦</tt>.
Naira :: Currency

-- | A currency that is rendered as <tt>₧</tt>.
Peseta :: Currency

-- | A currency that is rendered as <tt>₨</tt>.
Rupee :: Currency

-- | A currency that is rendered as <tt>₩</tt>.
Won :: Currency

-- | A currency that is rendered as <tt>₪</tt>.
NewSheqel :: Currency

-- | A currency that is rendered as <tt>₫</tt>.
Dong :: Currency

-- | A currency that is rendered as <tt>€</tt>.
Euro :: Currency

-- | A currency that is rendered as <tt>₭</tt>.
Kip :: Currency

-- | A currency that is rendered as <tt>₮</tt>.
Tugrik :: Currency

-- | A currency that is rendered as <tt>₯</tt>.
Drachma :: Currency

-- | A currency that is rendered as <tt>₰</tt>.
GermanPenny :: Currency

-- | A currency that is rendered as <tt>₱</tt>.
Peso :: Currency

-- | A currency that is rendered as <tt>₲</tt>.
Guarani :: Currency

-- | A currency that is rendered as <tt>₳</tt>.
Austral :: Currency

-- | A currency that is rendered as <tt>₴</tt>.
Hryvnia :: Currency

-- | A currency that is rendered as <tt>₵</tt>.
Cedi :: Currency

-- | A currency that is rendered as <tt>₶</tt>.
LivreTournois :: Currency

-- | A currency that is rendered as <tt>₷</tt>.
Spesmilo :: Currency

-- | A currency that is rendered as <tt>₸</tt>.
Tenge :: Currency

-- | A currency that is rendered as <tt>₹</tt>.
IndianRupee :: Currency

-- | A currency that is rendered as <tt>₺</tt>.
TurkishLira :: Currency

-- | A currency that is rendered as <tt>₻</tt>.
NordicMark :: Currency

-- | A currency that is rendered as <tt>₼</tt>.
Manat :: Currency

-- | A currency that is rendered as <tt>₽</tt>.
Ruble :: Currency

-- | A currency that is rendered as <tt>₾</tt>.
Lari :: Currency

-- | A currency that is rendered as <tt>₿</tt>.
Bitcoin :: Currency

-- | A currency that is rendered as <tt>꠸</tt>.
NorthIndicRupeeMark :: Currency

-- | A currency that is rendered as <tt>﷼</tt>.
Rial :: Currency

-- | A currency that is rendered as <tt>﹩</tt>.
SmallDollar :: Currency

-- | A currency that is rendered as <tt>＄</tt>.
FullwidthDollar :: Currency

-- | A currency that is rendered as <tt>￠</tt>.
FullwidthCent :: Currency

-- | A currency that is rendered as <tt>￡</tt>.
FullwidthPound :: Currency

-- | A currency that is rendered as <tt>￥</tt>.
FullwidthYen :: Currency

-- | A currency that is rendered as <tt>￦</tt>.
FullwidthWon :: Currency

-- | A currency that is rendered as <tt>𑿝</tt>.
TamilKaacu :: Currency

-- | A currency that is rendered as <tt>𑿞</tt>.
TamilPanam :: Currency

-- | A currency that is rendered as <tt>𑿟</tt>.
TamilPon :: Currency

-- | A currency that is rendered as <tt>𑿠</tt>.
TamilVaraakan :: Currency

-- | A currency that is rendered as <tt>𞋿</tt>.
WanchoNgun :: Currency

-- | A currency that is rendered as <tt>𞲰</tt>.
IndicSiyaqRupeeMark :: Currency

-- | The character used to render a <i>dollar sign</i> presented as
--   <tt>$</tt>.
dollar :: Char

-- | The character used to render a <i>cent sign</i> presented as
--   <tt>¢</tt>.
cent :: Char

-- | The character used to render a <i>pound sign</i> presented as
--   <tt>£</tt>.
pound :: Char

-- | The character used to render a <i>currency sign</i> presented as
--   <tt>¤</tt>.
currency :: Char

-- | The character used to render a <i>yen sign</i> presented as
--   <tt>¥</tt>.
yen :: Char

-- | The character used to render a <i>armenian dram sign</i> presented as
--   <tt>֏</tt>.
armenianDram :: Char

-- | The character used to render a <i>afghani sign</i> presented as
--   <tt>؋</tt>.
afghani :: Char

-- | The character used to render a <i>nko dorome sign</i> presented as
--   <tt>߾</tt>.
nkoDorome :: Char

-- | The character used to render a <i>nko taman sign</i> presented as
--   <tt>߿</tt>.
nkoTaman :: Char

-- | The character used to render a <i>bengali rupee mark</i> presented as
--   <tt>৲</tt>.
bengaliRupeeMark :: Char

-- | The character used to render a <i>bengali rupee sign</i> presented as
--   <tt>৳</tt>.
bengaliRupee :: Char

-- | The character used to render a <i>bengali ganda mark</i> presented as
--   <tt>৻</tt>.
bengaliGandaMark :: Char

-- | The character used to render a <i>gujarati rupee sign</i> presented as
--   <tt>૱</tt>.
gujaratiRupee :: Char

-- | The character used to render a <i>tamil rupee sign</i> presented as
--   <tt>௹</tt>.
tamilRupee :: Char

-- | The character used to render a <i>thai currency symbol baht</i>
--   presented as <tt>฿</tt>.
thaiSymbolBaht :: Char

-- | The character used to render a <i>khmer currency symbol riel</i>
--   presented as <tt>៛</tt>.
khmerSymbolRiel :: Char

-- | The character used to render a <i>euro-currency sign</i> presented as
--   <tt>₠</tt>.
euroCurrency :: Char

-- | The character used to render a <i>colon sign</i> presented as
--   <tt>₡</tt>.
colon :: Char

-- | The character used to render a <i>cruzeiro sign</i> presented as
--   <tt>₢</tt>.
cruzeiro :: Char

-- | The character used to render a <i>french franc sign</i> presented as
--   <tt>₣</tt>.
frenchFranc :: Char

-- | The character used to render a <i>lira sign</i> presented as
--   <tt>₤</tt>.
lira :: Char

-- | The character used to render a <i>mill sign</i> presented as
--   <tt>₥</tt>.
mill :: Char

-- | The character used to render a <i>naira sign</i> presented as
--   <tt>₦</tt>.
naira :: Char

-- | The character used to render a <i>peseta sign</i> presented as
--   <tt>₧</tt>.
peseta :: Char

-- | The character used to render a <i>rupee sign</i> presented as
--   <tt>₨</tt>.
rupee :: Char

-- | The character used to render a <i>won sign</i> presented as
--   <tt>₩</tt>.
won :: Char

-- | The character used to render a <i>new sheqel sign</i> presented as
--   <tt>₪</tt>.
newSheqel :: Char

-- | The character used to render a <i>dong sign</i> presented as
--   <tt>₫</tt>.
dong :: Char

-- | The character used to render a <i>euro sign</i> presented as
--   <tt>€</tt>.
euro :: Char

-- | The character used to render a <i>kip sign</i> presented as
--   <tt>₭</tt>.
kip :: Char

-- | The character used to render a <i>tugrik sign</i> presented as
--   <tt>₮</tt>.
tugrik :: Char

-- | The character used to render a <i>drachma sign</i> presented as
--   <tt>₯</tt>.
drachma :: Char

-- | The character used to render a <i>german penny sign</i> presented as
--   <tt>₰</tt>.
germanPenny :: Char

-- | The character used to render a <i>peso sign</i> presented as
--   <tt>₱</tt>.
peso :: Char

-- | The character used to render a <i>guarani sign</i> presented as
--   <tt>₲</tt>.
guarani :: Char

-- | The character used to render a <i>austral sign</i> presented as
--   <tt>₳</tt>.
austral :: Char

-- | The character used to render a <i>hryvnia sign</i> presented as
--   <tt>₴</tt>.
hryvnia :: Char

-- | The character used to render a <i>cedi sign</i> presented as
--   <tt>₵</tt>.
cedi :: Char

-- | The character used to render a <i>livre tournois sign</i> presented as
--   <tt>₶</tt>.
livreTournois :: Char

-- | The character used to render a <i>spesmilo sign</i> presented as
--   <tt>₷</tt>.
spesmilo :: Char

-- | The character used to render a <i>tenge sign</i> presented as
--   <tt>₸</tt>.
tenge :: Char

-- | The character used to render a <i>indian rupee sign</i> presented as
--   <tt>₹</tt>.
indianRupee :: Char

-- | The character used to render a <i>turkish lira sign</i> presented as
--   <tt>₺</tt>.
turkishLira :: Char

-- | The character used to render a <i>nordic mark sign</i> presented as
--   <tt>₻</tt>.
nordicMark :: Char

-- | The character used to render a <i>manat sign</i> presented as
--   <tt>₼</tt>.
manat :: Char

-- | The character used to render a <i>ruble sign</i> presented as
--   <tt>₽</tt>.
ruble :: Char

-- | The character used to render a <i>lari sign</i> presented as
--   <tt>₾</tt>.
lari :: Char

-- | The character used to render a <i>bitcoin sign</i> presented as
--   <tt>₿</tt>.
bitcoin :: Char

-- | The character used to render a <i>north indic rupee mark</i> presented
--   as <tt>꠸</tt>.
northIndicRupeeMark :: Char

-- | The character used to render a <i>rial sign</i> presented as
--   <tt>﷼</tt>.
rial :: Char

-- | The character used to render a <i>small dollar sign</i> presented as
--   <tt>﹩</tt>.
smallDollar :: Char

-- | The character used to render a <i>fullwidth dollar sign</i> presented
--   as <tt>＄</tt>.
fullwidthDollar :: Char

-- | The character used to render a <i>fullwidth cent sign</i> presented as
--   <tt>￠</tt>.
fullwidthCent :: Char

-- | The character used to render a <i>fullwidth pound sign</i> presented
--   as <tt>￡</tt>.
fullwidthPound :: Char

-- | The character used to render a <i>fullwidth yen sign</i> presented as
--   <tt>￥</tt>.
fullwidthYen :: Char

-- | The character used to render a <i>fullwidth won sign</i> presented as
--   <tt>￦</tt>.
fullwidthWon :: Char

-- | The character used to render a <i>tamil sign kaacu</i> presented as
--   <tt>𑿝</tt>.
tamilKaacu :: Char

-- | The character used to render a <i>tamil sign panam</i> presented as
--   <tt>𑿞</tt>.
tamilPanam :: Char

-- | The character used to render a <i>tamil sign pon</i> presented as
--   <tt>𑿟</tt>.
tamilPon :: Char

-- | The character used to render a <i>tamil sign varaakan</i> presented as
--   <tt>𑿠</tt>.
tamilVaraakan :: Char

-- | The character used to render a <i>wancho ngun sign</i> presented as
--   <tt>𞋿</tt>.
wanchoNgun :: Char

-- | The character used to render a <i>indic siyaq rupee mark</i> presented
--   as <tt>𞲰</tt>.
indicSiyaqRupeeMark :: Char

-- | Check if the given <a>Char</a>acter is a currency character.
isCurrency :: Char -> Bool
instance GHC.Show.Show Data.Char.Currency.Currency
instance GHC.Read.Read Data.Char.Currency.Currency
instance GHC.Classes.Ord Data.Char.Currency.Currency
instance GHC.Generics.Generic Data.Char.Currency.Currency
instance GHC.Classes.Eq Data.Char.Currency.Currency
instance GHC.Enum.Enum Data.Char.Currency.Currency
instance Data.Data.Data Data.Char.Currency.Currency
instance GHC.Enum.Bounded Data.Char.Currency.Currency
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Currency.Currency
instance Data.Hashable.Class.Hashable Data.Char.Currency.Currency
instance Control.DeepSeq.NFData Data.Char.Currency.Currency
instance Data.Char.Core.UnicodeCharacter Data.Char.Currency.Currency
instance Data.Char.Core.UnicodeText Data.Char.Currency.Currency


-- | Unicode has a <a>block</a> named <i>Miscellaneous Symbols</i> that
--   includes unicode characters for dice, this module aims to make it more
--   convenient to render die characters.
module Data.Char.Dice

-- | A data type to store the values of a die.
data DieValue

-- | A die with value <i>one</i>, represented with ⚀.
I :: DieValue

-- | A die with value <i>two</i>, represented with ⚁.
II :: DieValue

-- | A die with value <i>three</i>, represented with ⚂.
III :: DieValue

-- | A die with value <i>four</i>, represented with ⚃.
IV :: DieValue

-- | A die with value <i>five</i>, represented with ⚄.
V :: DieValue

-- | A die with value <i>six</i>, represented with ⚅.
VI :: DieValue

-- | Convert the given integral value to a <a>DieValue</a> that represents
--   the given number. If the number is less than one, or greater than six,
--   <a>Nothing</a> is returned.
toDieValue :: Integral i => i -> Maybe DieValue

-- | Convert the given <a>DieValue</a> to a unicode character that
--   represents a <i>die</i> with that value.
die :: DieValue -> Char
instance GHC.Show.Show Data.Char.Dice.DieValue
instance GHC.Read.Read Data.Char.Dice.DieValue
instance GHC.Classes.Ord Data.Char.Dice.DieValue
instance GHC.Generics.Generic Data.Char.Dice.DieValue
instance GHC.Classes.Eq Data.Char.Dice.DieValue
instance GHC.Enum.Enum Data.Char.Dice.DieValue
instance Data.Data.Data Data.Char.Dice.DieValue
instance GHC.Enum.Bounded Data.Char.Dice.DieValue
instance Data.Hashable.Class.Hashable Data.Char.Dice.DieValue
instance Control.DeepSeq.NFData Data.Char.Dice.DieValue
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Dice.DieValue
instance Data.Char.Core.UnicodeCharacter Data.Char.Dice.DieValue
instance Data.Char.Core.UnicodeText Data.Char.Dice.DieValue


-- | A module that defines values for domino pieces, and converts these to
--   unicode characters of the <a>1F030 unicode block</a>.
module Data.Char.Domino

-- | A domino piece, which has two items. Depending on the orientation, the
--   items are located at the <i>top</i> and <i>bottom</i>; or <i>left</i>
--   and <i>right</i>.
data Domino a

-- | The front side of the domino piece.
Domino :: a -> a -> Domino a

-- | The part that is located at the <i>left</i> side in case the piece is
--   located <i>horizontally</i>, or at the <i>top</i> in case the piece is
--   located <i>vertically</i>.
[leftTop] :: Domino a -> a

-- | The part that is located at the <i>right</i> side in case the piece is
--   located <i>horizontally</i>, or at the <i>bottom</i> in case the piece
--   is located <i>vertically</i>.
[rightBottom] :: Domino a -> a

-- | The back side of the domino piece.
Back :: Domino a

-- | A pattern synonym that makes it more convenient to write expressions
--   that look like domino's like for example <tt>II :| IV</tt>.
pattern (:|) :: a -> a -> Domino a

-- | A type alias that specifies that <a>OrientedDomino</a> is an
--   <a>Oriented</a> type that wraps a <a>Domino</a> item.
type OrientedDomino a = Oriented (Domino a)

-- | A <a>SimpleDomino</a> is a <a>Domino</a> that contains <a>DieValue</a>
--   objects, it thus can not have an "empty" value.
type SimpleDomino = Domino DieValue

-- | A <a>ComplexDomino</a> is a <a>Domino</a> that contains <a>Maybe</a>
--   values wrapping a <a>DieValue</a>. In case of a <a>Nothing</a>, that
--   side is considered <i>empty</i>.
type ComplexDomino = Domino (Maybe DieValue)

-- | Convert a <a>ComplexDomino</a> value to a unicode character rendering
--   the domino value <i>horizontally</i>.
dominoH :: ComplexDomino -> Char

-- | Convert a <a>SimpleDomino</a> value to a unicode character rendering
--   the domino value <i>horizontally</i>.
dominoH' :: SimpleDomino -> Char

-- | Convert a <a>ComplexDomino</a> value to a unicode character rendering
--   the domino value <i>vertically</i>.
dominoV :: ComplexDomino -> Char

-- | Convert a <a>SimpleDomino</a> value to a unicode character rendering
--   the domino value <i>vertically</i>.
dominoV' :: SimpleDomino -> Char

-- | Convert an <a>OrientedDomino</a> to its unicode equivalent, where the
--   sides of the domino can be empty.
domino :: OrientedDomino (Maybe DieValue) -> Char

-- | Convert an <a>OrientedDomino</a> to its unicode equivalent, where the
--   sides of the domino can <i>not</i> be empty.
domino' :: OrientedDomino DieValue -> Char

-- | Convert the given <a>Char</a>acter to an <a>Oriented</a>
--   <a>ComplexDomino</a> object. If the given <a>Char</a>acter wrapped in
--   a <a>Just</a> data constructor if the <a>Char</a>acter is a valid
--   domino character; otherwise <a>Nothing</a>.
fromDomino :: Char -> Maybe (Oriented ComplexDomino)

-- | Convert the given <a>Char</a>acter to an <a>Oriented</a>
--   <a>ComplexDomino</a> object. If the given <a>Char</a>acter is not a
--   valid domino character, the result is unspecified.
fromDomino' :: Char -> Oriented ComplexDomino
instance Data.Traversable.Traversable Data.Char.Domino.Domino
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Domino.Domino a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Domino.Domino a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Domino.Domino a)
instance GHC.Generics.Generic1 Data.Char.Domino.Domino
instance GHC.Generics.Generic (Data.Char.Domino.Domino a)
instance GHC.Base.Functor Data.Char.Domino.Domino
instance Data.Foldable.Foldable Data.Char.Domino.Domino
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Domino.Domino a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Domino.Domino a)
instance Data.Functor.Classes.Eq1 Data.Char.Domino.Domino
instance Data.Hashable.Class.Hashable1 Data.Char.Domino.Domino
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Domino.Domino a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Domino.Domino a)
instance Control.DeepSeq.NFData1 Data.Char.Domino.Domino
instance Data.Functor.Classes.Ord1 Data.Char.Domino.Domino
instance GHC.Base.Applicative Data.Char.Domino.Domino
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Domino.Domino a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Domino.Domino
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Domino.Domino a)
instance Data.Char.Core.UnicodeCharacter (Data.Char.Core.Oriented (Data.Char.Domino.Domino (GHC.Maybe.Maybe Data.Char.Dice.DieValue)))
instance Data.Char.Core.MirrorHorizontal (Data.Char.Core.Oriented (Data.Char.Domino.Domino a))
instance Data.Char.Core.MirrorVertical (Data.Char.Core.Oriented (Data.Char.Domino.Domino a))
instance Data.Char.Core.UnicodeCharacter (Data.Char.Core.Oriented (Data.Char.Domino.Domino Data.Char.Dice.DieValue))
instance Data.Char.Core.UnicodeText (Data.Char.Core.Oriented (Data.Char.Domino.Domino (GHC.Maybe.Maybe Data.Char.Dice.DieValue)))
instance Data.Char.Core.UnicodeText (Data.Char.Core.Oriented (Data.Char.Domino.Domino Data.Char.Dice.DieValue))


-- | Unicode defines the <a>13000 block</a> that contains 1099 hieroglyphs.
--   This module defines pattern synonyms to make working with the
--   hieroglyphs more convenient.
module Data.Char.Egyptian

-- | The Egyptian hieroglyph <i>A001</i> that renders as 𓀀.
pattern A001 :: Char

-- | The Egyptian hieroglyph <i>A002</i> that renders as 𓀁.
pattern A002 :: Char

-- | The Egyptian hieroglyph <i>A003</i> that renders as 𓀂.
pattern A003 :: Char

-- | The Egyptian hieroglyph <i>A004</i> that renders as 𓀃.
pattern A004 :: Char

-- | The Egyptian hieroglyph <i>A005</i> that renders as 𓀄.
pattern A005 :: Char

-- | The Egyptian hieroglyph <i>A005A</i> that renders as 𓀅.
pattern A005A :: Char

-- | The Egyptian hieroglyph <i>A006</i> that renders as 𓀆.
pattern A006 :: Char

-- | The Egyptian hieroglyph <i>A006A</i> that renders as 𓀇.
pattern A006A :: Char

-- | The Egyptian hieroglyph <i>A006B</i> that renders as 𓀈.
pattern A006B :: Char

-- | The Egyptian hieroglyph <i>A007</i> that renders as 𓀉.
pattern A007 :: Char

-- | The Egyptian hieroglyph <i>A008</i> that renders as 𓀊.
pattern A008 :: Char

-- | The Egyptian hieroglyph <i>A009</i> that renders as 𓀋.
pattern A009 :: Char

-- | The Egyptian hieroglyph <i>A010</i> that renders as 𓀌.
pattern A010 :: Char

-- | The Egyptian hieroglyph <i>A011</i> that renders as 𓀍.
pattern A011 :: Char

-- | The Egyptian hieroglyph <i>A012</i> that renders as 𓀎.
pattern A012 :: Char

-- | The Egyptian hieroglyph <i>A013</i> that renders as 𓀏.
pattern A013 :: Char

-- | The Egyptian hieroglyph <i>A014</i> that renders as 𓀐.
pattern A014 :: Char

-- | The Egyptian hieroglyph <i>A014A</i> that renders as 𓀑.
pattern A014A :: Char

-- | The Egyptian hieroglyph <i>A015</i> that renders as 𓀒.
pattern A015 :: Char

-- | The Egyptian hieroglyph <i>A016</i> that renders as 𓀓.
pattern A016 :: Char

-- | The Egyptian hieroglyph <i>A017</i> that renders as 𓀔.
pattern A017 :: Char

-- | The Egyptian hieroglyph <i>A017A</i> that renders as 𓀕.
pattern A017A :: Char

-- | The Egyptian hieroglyph <i>A018</i> that renders as 𓀖.
pattern A018 :: Char

-- | The Egyptian hieroglyph <i>A019</i> that renders as 𓀗.
pattern A019 :: Char

-- | The Egyptian hieroglyph <i>A020</i> that renders as 𓀘.
pattern A020 :: Char

-- | The Egyptian hieroglyph <i>A021</i> that renders as 𓀙.
pattern A021 :: Char

-- | The Egyptian hieroglyph <i>A022</i> that renders as 𓀚.
pattern A022 :: Char

-- | The Egyptian hieroglyph <i>A023</i> that renders as 𓀛.
pattern A023 :: Char

-- | The Egyptian hieroglyph <i>A024</i> that renders as 𓀜.
pattern A024 :: Char

-- | The Egyptian hieroglyph <i>A025</i> that renders as 𓀝.
pattern A025 :: Char

-- | The Egyptian hieroglyph <i>A026</i> that renders as 𓀞.
pattern A026 :: Char

-- | The Egyptian hieroglyph <i>A027</i> that renders as 𓀟.
pattern A027 :: Char

-- | The Egyptian hieroglyph <i>A028</i> that renders as 𓀠.
pattern A028 :: Char

-- | The Egyptian hieroglyph <i>A029</i> that renders as 𓀡.
pattern A029 :: Char

-- | The Egyptian hieroglyph <i>A030</i> that renders as 𓀢.
pattern A030 :: Char

-- | The Egyptian hieroglyph <i>A031</i> that renders as 𓀣.
pattern A031 :: Char

-- | The Egyptian hieroglyph <i>A032</i> that renders as 𓀤.
pattern A032 :: Char

-- | The Egyptian hieroglyph <i>A032A</i> that renders as 𓀥.
pattern A032A :: Char

-- | The Egyptian hieroglyph <i>A033</i> that renders as 𓀦.
pattern A033 :: Char

-- | The Egyptian hieroglyph <i>A034</i> that renders as 𓀧.
pattern A034 :: Char

-- | The Egyptian hieroglyph <i>A035</i> that renders as 𓀨.
pattern A035 :: Char

-- | The Egyptian hieroglyph <i>A036</i> that renders as 𓀩.
pattern A036 :: Char

-- | The Egyptian hieroglyph <i>A037</i> that renders as 𓀪.
pattern A037 :: Char

-- | The Egyptian hieroglyph <i>A038</i> that renders as 𓀫.
pattern A038 :: Char

-- | The Egyptian hieroglyph <i>A039</i> that renders as 𓀬.
pattern A039 :: Char

-- | The Egyptian hieroglyph <i>A040</i> that renders as 𓀭.
pattern A040 :: Char

-- | The Egyptian hieroglyph <i>A040A</i> that renders as 𓀮.
pattern A040A :: Char

-- | The Egyptian hieroglyph <i>A041</i> that renders as 𓀯.
pattern A041 :: Char

-- | The Egyptian hieroglyph <i>A042</i> that renders as 𓀰.
pattern A042 :: Char

-- | The Egyptian hieroglyph <i>A042A</i> that renders as 𓀱.
pattern A042A :: Char

-- | The Egyptian hieroglyph <i>A043</i> that renders as 𓀲.
pattern A043 :: Char

-- | The Egyptian hieroglyph <i>A043A</i> that renders as 𓀳.
pattern A043A :: Char

-- | The Egyptian hieroglyph <i>A044</i> that renders as 𓀴.
pattern A044 :: Char

-- | The Egyptian hieroglyph <i>A045</i> that renders as 𓀵.
pattern A045 :: Char

-- | The Egyptian hieroglyph <i>A045A</i> that renders as 𓀶.
pattern A045A :: Char

-- | The Egyptian hieroglyph <i>A046</i> that renders as 𓀷.
pattern A046 :: Char

-- | The Egyptian hieroglyph <i>A047</i> that renders as 𓀸.
pattern A047 :: Char

-- | The Egyptian hieroglyph <i>A048</i> that renders as 𓀹.
pattern A048 :: Char

-- | The Egyptian hieroglyph <i>A049</i> that renders as 𓀺.
pattern A049 :: Char

-- | The Egyptian hieroglyph <i>A050</i> that renders as 𓀻.
pattern A050 :: Char

-- | The Egyptian hieroglyph <i>A051</i> that renders as 𓀼.
pattern A051 :: Char

-- | The Egyptian hieroglyph <i>A052</i> that renders as 𓀽.
pattern A052 :: Char

-- | The Egyptian hieroglyph <i>A053</i> that renders as 𓀾.
pattern A053 :: Char

-- | The Egyptian hieroglyph <i>A054</i> that renders as 𓀿.
pattern A054 :: Char

-- | The Egyptian hieroglyph <i>A055</i> that renders as 𓁀.
pattern A055 :: Char

-- | The Egyptian hieroglyph <i>A056</i> that renders as 𓁁.
pattern A056 :: Char

-- | The Egyptian hieroglyph <i>A057</i> that renders as 𓁂.
pattern A057 :: Char

-- | The Egyptian hieroglyph <i>A058</i> that renders as 𓁃.
pattern A058 :: Char

-- | The Egyptian hieroglyph <i>A059</i> that renders as 𓁄.
pattern A059 :: Char

-- | The Egyptian hieroglyph <i>A060</i> that renders as 𓁅.
pattern A060 :: Char

-- | The Egyptian hieroglyph <i>A061</i> that renders as 𓁆.
pattern A061 :: Char

-- | The Egyptian hieroglyph <i>A062</i> that renders as 𓁇.
pattern A062 :: Char

-- | The Egyptian hieroglyph <i>A063</i> that renders as 𓁈.
pattern A063 :: Char

-- | The Egyptian hieroglyph <i>A064</i> that renders as 𓁉.
pattern A064 :: Char

-- | The Egyptian hieroglyph <i>A065</i> that renders as 𓁊.
pattern A065 :: Char

-- | The Egyptian hieroglyph <i>A066</i> that renders as 𓁋.
pattern A066 :: Char

-- | The Egyptian hieroglyph <i>A067</i> that renders as 𓁌.
pattern A067 :: Char

-- | The Egyptian hieroglyph <i>A068</i> that renders as 𓁍.
pattern A068 :: Char

-- | The Egyptian hieroglyph <i>A069</i> that renders as 𓁎.
pattern A069 :: Char

-- | The Egyptian hieroglyph <i>A070</i> that renders as 𓁏.
pattern A070 :: Char

-- | The Egyptian hieroglyph <i>B001</i> that renders as 𓁐.
pattern B001 :: Char

-- | The Egyptian hieroglyph <i>B002</i> that renders as 𓁑.
pattern B002 :: Char

-- | The Egyptian hieroglyph <i>B003</i> that renders as 𓁒.
pattern B003 :: Char

-- | The Egyptian hieroglyph <i>B004</i> that renders as 𓁓.
pattern B004 :: Char

-- | The Egyptian hieroglyph <i>B005</i> that renders as 𓁔.
pattern B005 :: Char

-- | The Egyptian hieroglyph <i>B005A</i> that renders as 𓁕.
pattern B005A :: Char

-- | The Egyptian hieroglyph <i>B006</i> that renders as 𓁖.
pattern B006 :: Char

-- | The Egyptian hieroglyph <i>B007</i> that renders as 𓁗.
pattern B007 :: Char

-- | The Egyptian hieroglyph <i>B008</i> that renders as 𓁘.
pattern B008 :: Char

-- | The Egyptian hieroglyph <i>B009</i> that renders as 𓁙.
pattern B009 :: Char

-- | The Egyptian hieroglyph <i>C001</i> that renders as 𓁚.
pattern C001 :: Char

-- | The Egyptian hieroglyph <i>C002</i> that renders as 𓁛.
pattern C002 :: Char

-- | The Egyptian hieroglyph <i>C002A</i> that renders as 𓁜.
pattern C002A :: Char

-- | The Egyptian hieroglyph <i>C002B</i> that renders as 𓁝.
pattern C002B :: Char

-- | The Egyptian hieroglyph <i>C002C</i> that renders as 𓁞.
pattern C002C :: Char

-- | The Egyptian hieroglyph <i>C003</i> that renders as 𓁟.
pattern C003 :: Char

-- | The Egyptian hieroglyph <i>C004</i> that renders as 𓁠.
pattern C004 :: Char

-- | The Egyptian hieroglyph <i>C005</i> that renders as 𓁡.
pattern C005 :: Char

-- | The Egyptian hieroglyph <i>C006</i> that renders as 𓁢.
pattern C006 :: Char

-- | The Egyptian hieroglyph <i>C007</i> that renders as 𓁣.
pattern C007 :: Char

-- | The Egyptian hieroglyph <i>C008</i> that renders as 𓁤.
pattern C008 :: Char

-- | The Egyptian hieroglyph <i>C009</i> that renders as 𓁥.
pattern C009 :: Char

-- | The Egyptian hieroglyph <i>C010</i> that renders as 𓁦.
pattern C010 :: Char

-- | The Egyptian hieroglyph <i>C010A</i> that renders as 𓁧.
pattern C010A :: Char

-- | The Egyptian hieroglyph <i>C011</i> that renders as 𓁨.
pattern C011 :: Char

-- | The Egyptian hieroglyph <i>C012</i> that renders as 𓁩.
pattern C012 :: Char

-- | The Egyptian hieroglyph <i>C013</i> that renders as 𓁪.
pattern C013 :: Char

-- | The Egyptian hieroglyph <i>C014</i> that renders as 𓁫.
pattern C014 :: Char

-- | The Egyptian hieroglyph <i>C015</i> that renders as 𓁬.
pattern C015 :: Char

-- | The Egyptian hieroglyph <i>C016</i> that renders as 𓁭.
pattern C016 :: Char

-- | The Egyptian hieroglyph <i>C017</i> that renders as 𓁮.
pattern C017 :: Char

-- | The Egyptian hieroglyph <i>C018</i> that renders as 𓁯.
pattern C018 :: Char

-- | The Egyptian hieroglyph <i>C019</i> that renders as 𓁰.
pattern C019 :: Char

-- | The Egyptian hieroglyph <i>C020</i> that renders as 𓁱.
pattern C020 :: Char

-- | The Egyptian hieroglyph <i>C021</i> that renders as 𓁲.
pattern C021 :: Char

-- | The Egyptian hieroglyph <i>C022</i> that renders as 𓁳.
pattern C022 :: Char

-- | The Egyptian hieroglyph <i>C023</i> that renders as 𓁴.
pattern C023 :: Char

-- | The Egyptian hieroglyph <i>C024</i> that renders as 𓁵.
pattern C024 :: Char

-- | The Egyptian hieroglyph <i>D001</i> that renders as 𓁶.
pattern D001 :: Char

-- | The Egyptian hieroglyph <i>D002</i> that renders as 𓁷.
pattern D002 :: Char

-- | The Egyptian hieroglyph <i>D003</i> that renders as 𓁸.
pattern D003 :: Char

-- | The Egyptian hieroglyph <i>D004</i> that renders as 𓁹.
pattern D004 :: Char

-- | The Egyptian hieroglyph <i>D005</i> that renders as 𓁺.
pattern D005 :: Char

-- | The Egyptian hieroglyph <i>D006</i> that renders as 𓁻.
pattern D006 :: Char

-- | The Egyptian hieroglyph <i>D007</i> that renders as 𓁼.
pattern D007 :: Char

-- | The Egyptian hieroglyph <i>D008</i> that renders as 𓁽.
pattern D008 :: Char

-- | The Egyptian hieroglyph <i>D008A</i> that renders as 𓁾.
pattern D008A :: Char

-- | The Egyptian hieroglyph <i>D009</i> that renders as 𓁿.
pattern D009 :: Char

-- | The Egyptian hieroglyph <i>D010</i> that renders as 𓂀.
pattern D010 :: Char

-- | The Egyptian hieroglyph <i>D011</i> that renders as 𓂁.
pattern D011 :: Char

-- | The Egyptian hieroglyph <i>D012</i> that renders as 𓂂.
pattern D012 :: Char

-- | The Egyptian hieroglyph <i>D013</i> that renders as 𓂃.
pattern D013 :: Char

-- | The Egyptian hieroglyph <i>D014</i> that renders as 𓂄.
pattern D014 :: Char

-- | The Egyptian hieroglyph <i>D015</i> that renders as 𓂅.
pattern D015 :: Char

-- | The Egyptian hieroglyph <i>D016</i> that renders as 𓂆.
pattern D016 :: Char

-- | The Egyptian hieroglyph <i>D017</i> that renders as 𓂇.
pattern D017 :: Char

-- | The Egyptian hieroglyph <i>D018</i> that renders as 𓂈.
pattern D018 :: Char

-- | The Egyptian hieroglyph <i>D019</i> that renders as 𓂉.
pattern D019 :: Char

-- | The Egyptian hieroglyph <i>D020</i> that renders as 𓂊.
pattern D020 :: Char

-- | The Egyptian hieroglyph <i>D021</i> that renders as 𓂋.
pattern D021 :: Char

-- | The Egyptian hieroglyph <i>D022</i> that renders as 𓂌.
pattern D022 :: Char

-- | The Egyptian hieroglyph <i>D023</i> that renders as 𓂍.
pattern D023 :: Char

-- | The Egyptian hieroglyph <i>D024</i> that renders as 𓂎.
pattern D024 :: Char

-- | The Egyptian hieroglyph <i>D025</i> that renders as 𓂏.
pattern D025 :: Char

-- | The Egyptian hieroglyph <i>D026</i> that renders as 𓂐.
pattern D026 :: Char

-- | The Egyptian hieroglyph <i>D027</i> that renders as 𓂑.
pattern D027 :: Char

-- | The Egyptian hieroglyph <i>D027A</i> that renders as 𓂒.
pattern D027A :: Char

-- | The Egyptian hieroglyph <i>D028</i> that renders as 𓂓.
pattern D028 :: Char

-- | The Egyptian hieroglyph <i>D029</i> that renders as 𓂔.
pattern D029 :: Char

-- | The Egyptian hieroglyph <i>D030</i> that renders as 𓂕.
pattern D030 :: Char

-- | The Egyptian hieroglyph <i>D031</i> that renders as 𓂖.
pattern D031 :: Char

-- | The Egyptian hieroglyph <i>D031A</i> that renders as 𓂗.
pattern D031A :: Char

-- | The Egyptian hieroglyph <i>D032</i> that renders as 𓂘.
pattern D032 :: Char

-- | The Egyptian hieroglyph <i>D033</i> that renders as 𓂙.
pattern D033 :: Char

-- | The Egyptian hieroglyph <i>D034</i> that renders as 𓂚.
pattern D034 :: Char

-- | The Egyptian hieroglyph <i>D034A</i> that renders as 𓂛.
pattern D034A :: Char

-- | The Egyptian hieroglyph <i>D035</i> that renders as 𓂜.
pattern D035 :: Char

-- | The Egyptian hieroglyph <i>D036</i> that renders as 𓂝.
pattern D036 :: Char

-- | The Egyptian hieroglyph <i>D037</i> that renders as 𓂞.
pattern D037 :: Char

-- | The Egyptian hieroglyph <i>D038</i> that renders as 𓂟.
pattern D038 :: Char

-- | The Egyptian hieroglyph <i>D039</i> that renders as 𓂠.
pattern D039 :: Char

-- | The Egyptian hieroglyph <i>D040</i> that renders as 𓂡.
pattern D040 :: Char

-- | The Egyptian hieroglyph <i>D041</i> that renders as 𓂢.
pattern D041 :: Char

-- | The Egyptian hieroglyph <i>D042</i> that renders as 𓂣.
pattern D042 :: Char

-- | The Egyptian hieroglyph <i>D043</i> that renders as 𓂤.
pattern D043 :: Char

-- | The Egyptian hieroglyph <i>D044</i> that renders as 𓂥.
pattern D044 :: Char

-- | The Egyptian hieroglyph <i>D045</i> that renders as 𓂦.
pattern D045 :: Char

-- | The Egyptian hieroglyph <i>D046</i> that renders as 𓂧.
pattern D046 :: Char

-- | The Egyptian hieroglyph <i>D046A</i> that renders as 𓂨.
pattern D046A :: Char

-- | The Egyptian hieroglyph <i>D047</i> that renders as 𓂩.
pattern D047 :: Char

-- | The Egyptian hieroglyph <i>D048</i> that renders as 𓂪.
pattern D048 :: Char

-- | The Egyptian hieroglyph <i>D048A</i> that renders as 𓂫.
pattern D048A :: Char

-- | The Egyptian hieroglyph <i>D049</i> that renders as 𓂬.
pattern D049 :: Char

-- | The Egyptian hieroglyph <i>D050</i> that renders as 𓂭.
pattern D050 :: Char

-- | The Egyptian hieroglyph <i>D050A</i> that renders as 𓂮.
pattern D050A :: Char

-- | The Egyptian hieroglyph <i>D050B</i> that renders as 𓂯.
pattern D050B :: Char

-- | The Egyptian hieroglyph <i>D050C</i> that renders as 𓂰.
pattern D050C :: Char

-- | The Egyptian hieroglyph <i>D050D</i> that renders as 𓂱.
pattern D050D :: Char

-- | The Egyptian hieroglyph <i>D050E</i> that renders as 𓂲.
pattern D050E :: Char

-- | The Egyptian hieroglyph <i>D050F</i> that renders as 𓂳.
pattern D050F :: Char

-- | The Egyptian hieroglyph <i>D050G</i> that renders as 𓂴.
pattern D050G :: Char

-- | The Egyptian hieroglyph <i>D050H</i> that renders as 𓂵.
pattern D050H :: Char

-- | The Egyptian hieroglyph <i>D050I</i> that renders as 𓂶.
pattern D050I :: Char

-- | The Egyptian hieroglyph <i>D051</i> that renders as 𓂷.
pattern D051 :: Char

-- | The Egyptian hieroglyph <i>D052</i> that renders as 𓂸.
pattern D052 :: Char

-- | The Egyptian hieroglyph <i>D052A</i> that renders as 𓂹.
pattern D052A :: Char

-- | The Egyptian hieroglyph <i>D053</i> that renders as 𓂺.
pattern D053 :: Char

-- | The Egyptian hieroglyph <i>D054</i> that renders as 𓂻.
pattern D054 :: Char

-- | The Egyptian hieroglyph <i>D054A</i> that renders as 𓂼.
pattern D054A :: Char

-- | The Egyptian hieroglyph <i>D055</i> that renders as 𓂽.
pattern D055 :: Char

-- | The Egyptian hieroglyph <i>D056</i> that renders as 𓂾.
pattern D056 :: Char

-- | The Egyptian hieroglyph <i>D057</i> that renders as 𓂿.
pattern D057 :: Char

-- | The Egyptian hieroglyph <i>D058</i> that renders as 𓃀.
pattern D058 :: Char

-- | The Egyptian hieroglyph <i>D059</i> that renders as 𓃁.
pattern D059 :: Char

-- | The Egyptian hieroglyph <i>D060</i> that renders as 𓃂.
pattern D060 :: Char

-- | The Egyptian hieroglyph <i>D061</i> that renders as 𓃃.
pattern D061 :: Char

-- | The Egyptian hieroglyph <i>D062</i> that renders as 𓃄.
pattern D062 :: Char

-- | The Egyptian hieroglyph <i>D063</i> that renders as 𓃅.
pattern D063 :: Char

-- | The Egyptian hieroglyph <i>D064</i> that renders as 𓃆.
pattern D064 :: Char

-- | The Egyptian hieroglyph <i>D065</i> that renders as 𓃇.
pattern D065 :: Char

-- | The Egyptian hieroglyph <i>D066</i> that renders as 𓃈.
pattern D066 :: Char

-- | The Egyptian hieroglyph <i>D067</i> that renders as 𓃉.
pattern D067 :: Char

-- | The Egyptian hieroglyph <i>D067A</i> that renders as 𓃊.
pattern D067A :: Char

-- | The Egyptian hieroglyph <i>D067B</i> that renders as 𓃋.
pattern D067B :: Char

-- | The Egyptian hieroglyph <i>D067C</i> that renders as 𓃌.
pattern D067C :: Char

-- | The Egyptian hieroglyph <i>D067D</i> that renders as 𓃍.
pattern D067D :: Char

-- | The Egyptian hieroglyph <i>D067E</i> that renders as 𓃎.
pattern D067E :: Char

-- | The Egyptian hieroglyph <i>D067F</i> that renders as 𓃏.
pattern D067F :: Char

-- | The Egyptian hieroglyph <i>D067G</i> that renders as 𓃐.
pattern D067G :: Char

-- | The Egyptian hieroglyph <i>D067H</i> that renders as 𓃑.
pattern D067H :: Char

-- | The Egyptian hieroglyph <i>E001</i> that renders as 𓃒.
pattern E001 :: Char

-- | The Egyptian hieroglyph <i>E002</i> that renders as 𓃓.
pattern E002 :: Char

-- | The Egyptian hieroglyph <i>E003</i> that renders as 𓃔.
pattern E003 :: Char

-- | The Egyptian hieroglyph <i>E004</i> that renders as 𓃕.
pattern E004 :: Char

-- | The Egyptian hieroglyph <i>E005</i> that renders as 𓃖.
pattern E005 :: Char

-- | The Egyptian hieroglyph <i>E006</i> that renders as 𓃗.
pattern E006 :: Char

-- | The Egyptian hieroglyph <i>E007</i> that renders as 𓃘.
pattern E007 :: Char

-- | The Egyptian hieroglyph <i>E008</i> that renders as 𓃙.
pattern E008 :: Char

-- | The Egyptian hieroglyph <i>E008A</i> that renders as 𓃚.
pattern E008A :: Char

-- | The Egyptian hieroglyph <i>E009</i> that renders as 𓃛.
pattern E009 :: Char

-- | The Egyptian hieroglyph <i>E009A</i> that renders as 𓃜.
pattern E009A :: Char

-- | The Egyptian hieroglyph <i>E010</i> that renders as 𓃝.
pattern E010 :: Char

-- | The Egyptian hieroglyph <i>E011</i> that renders as 𓃞.
pattern E011 :: Char

-- | The Egyptian hieroglyph <i>E012</i> that renders as 𓃟.
pattern E012 :: Char

-- | The Egyptian hieroglyph <i>E013</i> that renders as 𓃠.
pattern E013 :: Char

-- | The Egyptian hieroglyph <i>E014</i> that renders as 𓃡.
pattern E014 :: Char

-- | The Egyptian hieroglyph <i>E015</i> that renders as 𓃢.
pattern E015 :: Char

-- | The Egyptian hieroglyph <i>E016</i> that renders as 𓃣.
pattern E016 :: Char

-- | The Egyptian hieroglyph <i>E016A</i> that renders as 𓃤.
pattern E016A :: Char

-- | The Egyptian hieroglyph <i>E017</i> that renders as 𓃥.
pattern E017 :: Char

-- | The Egyptian hieroglyph <i>E017A</i> that renders as 𓃦.
pattern E017A :: Char

-- | The Egyptian hieroglyph <i>E018</i> that renders as 𓃧.
pattern E018 :: Char

-- | The Egyptian hieroglyph <i>E019</i> that renders as 𓃨.
pattern E019 :: Char

-- | The Egyptian hieroglyph <i>E020</i> that renders as 𓃩.
pattern E020 :: Char

-- | The Egyptian hieroglyph <i>E020A</i> that renders as 𓃪.
pattern E020A :: Char

-- | The Egyptian hieroglyph <i>E021</i> that renders as 𓃫.
pattern E021 :: Char

-- | The Egyptian hieroglyph <i>E022</i> that renders as 𓃬.
pattern E022 :: Char

-- | The Egyptian hieroglyph <i>E023</i> that renders as 𓃭.
pattern E023 :: Char

-- | The Egyptian hieroglyph <i>E024</i> that renders as 𓃮.
pattern E024 :: Char

-- | The Egyptian hieroglyph <i>E025</i> that renders as 𓃯.
pattern E025 :: Char

-- | The Egyptian hieroglyph <i>E026</i> that renders as 𓃰.
pattern E026 :: Char

-- | The Egyptian hieroglyph <i>E027</i> that renders as 𓃱.
pattern E027 :: Char

-- | The Egyptian hieroglyph <i>E028</i> that renders as 𓃲.
pattern E028 :: Char

-- | The Egyptian hieroglyph <i>E028A</i> that renders as 𓃳.
pattern E028A :: Char

-- | The Egyptian hieroglyph <i>E029</i> that renders as 𓃴.
pattern E029 :: Char

-- | The Egyptian hieroglyph <i>E030</i> that renders as 𓃵.
pattern E030 :: Char

-- | The Egyptian hieroglyph <i>E031</i> that renders as 𓃶.
pattern E031 :: Char

-- | The Egyptian hieroglyph <i>E032</i> that renders as 𓃷.
pattern E032 :: Char

-- | The Egyptian hieroglyph <i>E033</i> that renders as 𓃸.
pattern E033 :: Char

-- | The Egyptian hieroglyph <i>E034</i> that renders as 𓃹.
pattern E034 :: Char

-- | The Egyptian hieroglyph <i>E034A</i> that renders as 𓃺.
pattern E034A :: Char

-- | The Egyptian hieroglyph <i>E036</i> that renders as 𓃻.
pattern E036 :: Char

-- | The Egyptian hieroglyph <i>E037</i> that renders as 𓃼.
pattern E037 :: Char

-- | The Egyptian hieroglyph <i>E038</i> that renders as 𓃽.
pattern E038 :: Char

-- | The Egyptian hieroglyph <i>F001</i> that renders as 𓃾.
pattern F001 :: Char

-- | The Egyptian hieroglyph <i>F001A</i> that renders as 𓃿.
pattern F001A :: Char

-- | The Egyptian hieroglyph <i>F002</i> that renders as 𓄀.
pattern F002 :: Char

-- | The Egyptian hieroglyph <i>F003</i> that renders as 𓄁.
pattern F003 :: Char

-- | The Egyptian hieroglyph <i>F004</i> that renders as 𓄂.
pattern F004 :: Char

-- | The Egyptian hieroglyph <i>F005</i> that renders as 𓄃.
pattern F005 :: Char

-- | The Egyptian hieroglyph <i>F006</i> that renders as 𓄄.
pattern F006 :: Char

-- | The Egyptian hieroglyph <i>F007</i> that renders as 𓄅.
pattern F007 :: Char

-- | The Egyptian hieroglyph <i>F008</i> that renders as 𓄆.
pattern F008 :: Char

-- | The Egyptian hieroglyph <i>F009</i> that renders as 𓄇.
pattern F009 :: Char

-- | The Egyptian hieroglyph <i>F010</i> that renders as 𓄈.
pattern F010 :: Char

-- | The Egyptian hieroglyph <i>F011</i> that renders as 𓄉.
pattern F011 :: Char

-- | The Egyptian hieroglyph <i>F012</i> that renders as 𓄊.
pattern F012 :: Char

-- | The Egyptian hieroglyph <i>F013</i> that renders as 𓄋.
pattern F013 :: Char

-- | The Egyptian hieroglyph <i>F013A</i> that renders as 𓄌.
pattern F013A :: Char

-- | The Egyptian hieroglyph <i>F014</i> that renders as 𓄍.
pattern F014 :: Char

-- | The Egyptian hieroglyph <i>F015</i> that renders as 𓄎.
pattern F015 :: Char

-- | The Egyptian hieroglyph <i>F016</i> that renders as 𓄏.
pattern F016 :: Char

-- | The Egyptian hieroglyph <i>F017</i> that renders as 𓄐.
pattern F017 :: Char

-- | The Egyptian hieroglyph <i>F018</i> that renders as 𓄑.
pattern F018 :: Char

-- | The Egyptian hieroglyph <i>F019</i> that renders as 𓄒.
pattern F019 :: Char

-- | The Egyptian hieroglyph <i>F020</i> that renders as 𓄓.
pattern F020 :: Char

-- | The Egyptian hieroglyph <i>F021</i> that renders as 𓄔.
pattern F021 :: Char

-- | The Egyptian hieroglyph <i>F021A</i> that renders as 𓄕.
pattern F021A :: Char

-- | The Egyptian hieroglyph <i>F022</i> that renders as 𓄖.
pattern F022 :: Char

-- | The Egyptian hieroglyph <i>F023</i> that renders as 𓄗.
pattern F023 :: Char

-- | The Egyptian hieroglyph <i>F024</i> that renders as 𓄘.
pattern F024 :: Char

-- | The Egyptian hieroglyph <i>F025</i> that renders as 𓄙.
pattern F025 :: Char

-- | The Egyptian hieroglyph <i>F026</i> that renders as 𓄚.
pattern F026 :: Char

-- | The Egyptian hieroglyph <i>F027</i> that renders as 𓄛.
pattern F027 :: Char

-- | The Egyptian hieroglyph <i>F028</i> that renders as 𓄜.
pattern F028 :: Char

-- | The Egyptian hieroglyph <i>F029</i> that renders as 𓄝.
pattern F029 :: Char

-- | The Egyptian hieroglyph <i>F030</i> that renders as 𓄞.
pattern F030 :: Char

-- | The Egyptian hieroglyph <i>F031</i> that renders as 𓄟.
pattern F031 :: Char

-- | The Egyptian hieroglyph <i>F031A</i> that renders as 𓄠.
pattern F031A :: Char

-- | The Egyptian hieroglyph <i>F032</i> that renders as 𓄡.
pattern F032 :: Char

-- | The Egyptian hieroglyph <i>F033</i> that renders as 𓄢.
pattern F033 :: Char

-- | The Egyptian hieroglyph <i>F034</i> that renders as 𓄣.
pattern F034 :: Char

-- | The Egyptian hieroglyph <i>F035</i> that renders as 𓄤.
pattern F035 :: Char

-- | The Egyptian hieroglyph <i>F036</i> that renders as 𓄥.
pattern F036 :: Char

-- | The Egyptian hieroglyph <i>F037</i> that renders as 𓄦.
pattern F037 :: Char

-- | The Egyptian hieroglyph <i>F037A</i> that renders as 𓄧.
pattern F037A :: Char

-- | The Egyptian hieroglyph <i>F038</i> that renders as 𓄨.
pattern F038 :: Char

-- | The Egyptian hieroglyph <i>F038A</i> that renders as 𓄩.
pattern F038A :: Char

-- | The Egyptian hieroglyph <i>F039</i> that renders as 𓄪.
pattern F039 :: Char

-- | The Egyptian hieroglyph <i>F040</i> that renders as 𓄫.
pattern F040 :: Char

-- | The Egyptian hieroglyph <i>F041</i> that renders as 𓄬.
pattern F041 :: Char

-- | The Egyptian hieroglyph <i>F042</i> that renders as 𓄭.
pattern F042 :: Char

-- | The Egyptian hieroglyph <i>F043</i> that renders as 𓄮.
pattern F043 :: Char

-- | The Egyptian hieroglyph <i>F044</i> that renders as 𓄯.
pattern F044 :: Char

-- | The Egyptian hieroglyph <i>F045</i> that renders as 𓄰.
pattern F045 :: Char

-- | The Egyptian hieroglyph <i>F045A</i> that renders as 𓄱.
pattern F045A :: Char

-- | The Egyptian hieroglyph <i>F046</i> that renders as 𓄲.
pattern F046 :: Char

-- | The Egyptian hieroglyph <i>F046A</i> that renders as 𓄳.
pattern F046A :: Char

-- | The Egyptian hieroglyph <i>F047</i> that renders as 𓄴.
pattern F047 :: Char

-- | The Egyptian hieroglyph <i>F047A</i> that renders as 𓄵.
pattern F047A :: Char

-- | The Egyptian hieroglyph <i>F048</i> that renders as 𓄶.
pattern F048 :: Char

-- | The Egyptian hieroglyph <i>F049</i> that renders as 𓄷.
pattern F049 :: Char

-- | The Egyptian hieroglyph <i>F050</i> that renders as 𓄸.
pattern F050 :: Char

-- | The Egyptian hieroglyph <i>F051</i> that renders as 𓄹.
pattern F051 :: Char

-- | The Egyptian hieroglyph <i>F051A</i> that renders as 𓄺.
pattern F051A :: Char

-- | The Egyptian hieroglyph <i>F051B</i> that renders as 𓄻.
pattern F051B :: Char

-- | The Egyptian hieroglyph <i>F051C</i> that renders as 𓄼.
pattern F051C :: Char

-- | The Egyptian hieroglyph <i>F052</i> that renders as 𓄽.
pattern F052 :: Char

-- | The Egyptian hieroglyph <i>F053</i> that renders as 𓄾.
pattern F053 :: Char

-- | The Egyptian hieroglyph <i>G001</i> that renders as 𓄿.
pattern G001 :: Char

-- | The Egyptian hieroglyph <i>G002</i> that renders as 𓅀.
pattern G002 :: Char

-- | The Egyptian hieroglyph <i>G003</i> that renders as 𓅁.
pattern G003 :: Char

-- | The Egyptian hieroglyph <i>G004</i> that renders as 𓅂.
pattern G004 :: Char

-- | The Egyptian hieroglyph <i>G005</i> that renders as 𓅃.
pattern G005 :: Char

-- | The Egyptian hieroglyph <i>G006</i> that renders as 𓅄.
pattern G006 :: Char

-- | The Egyptian hieroglyph <i>G006A</i> that renders as 𓅅.
pattern G006A :: Char

-- | The Egyptian hieroglyph <i>G007</i> that renders as 𓅆.
pattern G007 :: Char

-- | The Egyptian hieroglyph <i>G007A</i> that renders as 𓅇.
pattern G007A :: Char

-- | The Egyptian hieroglyph <i>G007B</i> that renders as 𓅈.
pattern G007B :: Char

-- | The Egyptian hieroglyph <i>G008</i> that renders as 𓅉.
pattern G008 :: Char

-- | The Egyptian hieroglyph <i>G009</i> that renders as 𓅊.
pattern G009 :: Char

-- | The Egyptian hieroglyph <i>G010</i> that renders as 𓅋.
pattern G010 :: Char

-- | The Egyptian hieroglyph <i>G011</i> that renders as 𓅌.
pattern G011 :: Char

-- | The Egyptian hieroglyph <i>G011A</i> that renders as 𓅍.
pattern G011A :: Char

-- | The Egyptian hieroglyph <i>G012</i> that renders as 𓅎.
pattern G012 :: Char

-- | The Egyptian hieroglyph <i>G013</i> that renders as 𓅏.
pattern G013 :: Char

-- | The Egyptian hieroglyph <i>G014</i> that renders as 𓅐.
pattern G014 :: Char

-- | The Egyptian hieroglyph <i>G015</i> that renders as 𓅑.
pattern G015 :: Char

-- | The Egyptian hieroglyph <i>G016</i> that renders as 𓅒.
pattern G016 :: Char

-- | The Egyptian hieroglyph <i>G017</i> that renders as 𓅓.
pattern G017 :: Char

-- | The Egyptian hieroglyph <i>G018</i> that renders as 𓅔.
pattern G018 :: Char

-- | The Egyptian hieroglyph <i>G019</i> that renders as 𓅕.
pattern G019 :: Char

-- | The Egyptian hieroglyph <i>G020</i> that renders as 𓅖.
pattern G020 :: Char

-- | The Egyptian hieroglyph <i>G020A</i> that renders as 𓅗.
pattern G020A :: Char

-- | The Egyptian hieroglyph <i>G021</i> that renders as 𓅘.
pattern G021 :: Char

-- | The Egyptian hieroglyph <i>G022</i> that renders as 𓅙.
pattern G022 :: Char

-- | The Egyptian hieroglyph <i>G023</i> that renders as 𓅚.
pattern G023 :: Char

-- | The Egyptian hieroglyph <i>G024</i> that renders as 𓅛.
pattern G024 :: Char

-- | The Egyptian hieroglyph <i>G025</i> that renders as 𓅜.
pattern G025 :: Char

-- | The Egyptian hieroglyph <i>G026</i> that renders as 𓅝.
pattern G026 :: Char

-- | The Egyptian hieroglyph <i>G026A</i> that renders as 𓅞.
pattern G026A :: Char

-- | The Egyptian hieroglyph <i>G027</i> that renders as 𓅟.
pattern G027 :: Char

-- | The Egyptian hieroglyph <i>G028</i> that renders as 𓅠.
pattern G028 :: Char

-- | The Egyptian hieroglyph <i>G029</i> that renders as 𓅡.
pattern G029 :: Char

-- | The Egyptian hieroglyph <i>G030</i> that renders as 𓅢.
pattern G030 :: Char

-- | The Egyptian hieroglyph <i>G031</i> that renders as 𓅣.
pattern G031 :: Char

-- | The Egyptian hieroglyph <i>G032</i> that renders as 𓅤.
pattern G032 :: Char

-- | The Egyptian hieroglyph <i>G033</i> that renders as 𓅥.
pattern G033 :: Char

-- | The Egyptian hieroglyph <i>G034</i> that renders as 𓅦.
pattern G034 :: Char

-- | The Egyptian hieroglyph <i>G035</i> that renders as 𓅧.
pattern G035 :: Char

-- | The Egyptian hieroglyph <i>G036</i> that renders as 𓅨.
pattern G036 :: Char

-- | The Egyptian hieroglyph <i>G036A</i> that renders as 𓅩.
pattern G036A :: Char

-- | The Egyptian hieroglyph <i>G037</i> that renders as 𓅪.
pattern G037 :: Char

-- | The Egyptian hieroglyph <i>G037A</i> that renders as 𓅫.
pattern G037A :: Char

-- | The Egyptian hieroglyph <i>G038</i> that renders as 𓅬.
pattern G038 :: Char

-- | The Egyptian hieroglyph <i>G039</i> that renders as 𓅭.
pattern G039 :: Char

-- | The Egyptian hieroglyph <i>G040</i> that renders as 𓅮.
pattern G040 :: Char

-- | The Egyptian hieroglyph <i>G041</i> that renders as 𓅯.
pattern G041 :: Char

-- | The Egyptian hieroglyph <i>G042</i> that renders as 𓅰.
pattern G042 :: Char

-- | The Egyptian hieroglyph <i>G043</i> that renders as 𓅱.
pattern G043 :: Char

-- | The Egyptian hieroglyph <i>G043A</i> that renders as 𓅲.
pattern G043A :: Char

-- | The Egyptian hieroglyph <i>G044</i> that renders as 𓅳.
pattern G044 :: Char

-- | The Egyptian hieroglyph <i>G045</i> that renders as 𓅴.
pattern G045 :: Char

-- | The Egyptian hieroglyph <i>G045A</i> that renders as 𓅵.
pattern G045A :: Char

-- | The Egyptian hieroglyph <i>G046</i> that renders as 𓅶.
pattern G046 :: Char

-- | The Egyptian hieroglyph <i>G047</i> that renders as 𓅷.
pattern G047 :: Char

-- | The Egyptian hieroglyph <i>G048</i> that renders as 𓅸.
pattern G048 :: Char

-- | The Egyptian hieroglyph <i>G049</i> that renders as 𓅹.
pattern G049 :: Char

-- | The Egyptian hieroglyph <i>G050</i> that renders as 𓅺.
pattern G050 :: Char

-- | The Egyptian hieroglyph <i>G051</i> that renders as 𓅻.
pattern G051 :: Char

-- | The Egyptian hieroglyph <i>G052</i> that renders as 𓅼.
pattern G052 :: Char

-- | The Egyptian hieroglyph <i>G053</i> that renders as 𓅽.
pattern G053 :: Char

-- | The Egyptian hieroglyph <i>G054</i> that renders as 𓅾.
pattern G054 :: Char

-- | The Egyptian hieroglyph <i>H001</i> that renders as 𓅿.
pattern H001 :: Char

-- | The Egyptian hieroglyph <i>H002</i> that renders as 𓆀.
pattern H002 :: Char

-- | The Egyptian hieroglyph <i>H003</i> that renders as 𓆁.
pattern H003 :: Char

-- | The Egyptian hieroglyph <i>H004</i> that renders as 𓆂.
pattern H004 :: Char

-- | The Egyptian hieroglyph <i>H005</i> that renders as 𓆃.
pattern H005 :: Char

-- | The Egyptian hieroglyph <i>H006</i> that renders as 𓆄.
pattern H006 :: Char

-- | The Egyptian hieroglyph <i>H006A</i> that renders as 𓆅.
pattern H006A :: Char

-- | The Egyptian hieroglyph <i>H007</i> that renders as 𓆆.
pattern H007 :: Char

-- | The Egyptian hieroglyph <i>H008</i> that renders as 𓆇.
pattern H008 :: Char

-- | The Egyptian hieroglyph <i>I001</i> that renders as 𓆈.
pattern I001 :: Char

-- | The Egyptian hieroglyph <i>I002</i> that renders as 𓆉.
pattern I002 :: Char

-- | The Egyptian hieroglyph <i>I003</i> that renders as 𓆊.
pattern I003 :: Char

-- | The Egyptian hieroglyph <i>I004</i> that renders as 𓆋.
pattern I004 :: Char

-- | The Egyptian hieroglyph <i>I005</i> that renders as 𓆌.
pattern I005 :: Char

-- | The Egyptian hieroglyph <i>I005A</i> that renders as 𓆍.
pattern I005A :: Char

-- | The Egyptian hieroglyph <i>I006</i> that renders as 𓆎.
pattern I006 :: Char

-- | The Egyptian hieroglyph <i>I007</i> that renders as 𓆏.
pattern I007 :: Char

-- | The Egyptian hieroglyph <i>I008</i> that renders as 𓆐.
pattern I008 :: Char

-- | The Egyptian hieroglyph <i>I009</i> that renders as 𓆑.
pattern I009 :: Char

-- | The Egyptian hieroglyph <i>I009A</i> that renders as 𓆒.
pattern I009A :: Char

-- | The Egyptian hieroglyph <i>I010</i> that renders as 𓆓.
pattern I010 :: Char

-- | The Egyptian hieroglyph <i>I010A</i> that renders as 𓆔.
pattern I010A :: Char

-- | The Egyptian hieroglyph <i>I011</i> that renders as 𓆕.
pattern I011 :: Char

-- | The Egyptian hieroglyph <i>I011A</i> that renders as 𓆖.
pattern I011A :: Char

-- | The Egyptian hieroglyph <i>I012</i> that renders as 𓆗.
pattern I012 :: Char

-- | The Egyptian hieroglyph <i>I013</i> that renders as 𓆘.
pattern I013 :: Char

-- | The Egyptian hieroglyph <i>I014</i> that renders as 𓆙.
pattern I014 :: Char

-- | The Egyptian hieroglyph <i>I015</i> that renders as 𓆚.
pattern I015 :: Char

-- | The Egyptian hieroglyph <i>K001</i> that renders as 𓆛.
pattern K001 :: Char

-- | The Egyptian hieroglyph <i>K002</i> that renders as 𓆜.
pattern K002 :: Char

-- | The Egyptian hieroglyph <i>K003</i> that renders as 𓆝.
pattern K003 :: Char

-- | The Egyptian hieroglyph <i>K004</i> that renders as 𓆞.
pattern K004 :: Char

-- | The Egyptian hieroglyph <i>K005</i> that renders as 𓆟.
pattern K005 :: Char

-- | The Egyptian hieroglyph <i>K006</i> that renders as 𓆠.
pattern K006 :: Char

-- | The Egyptian hieroglyph <i>K007</i> that renders as 𓆡.
pattern K007 :: Char

-- | The Egyptian hieroglyph <i>K008</i> that renders as 𓆢.
pattern K008 :: Char

-- | The Egyptian hieroglyph <i>L001</i> that renders as 𓆣.
pattern L001 :: Char

-- | The Egyptian hieroglyph <i>L002</i> that renders as 𓆤.
pattern L002 :: Char

-- | The Egyptian hieroglyph <i>L002A</i> that renders as 𓆥.
pattern L002A :: Char

-- | The Egyptian hieroglyph <i>L003</i> that renders as 𓆦.
pattern L003 :: Char

-- | The Egyptian hieroglyph <i>L004</i> that renders as 𓆧.
pattern L004 :: Char

-- | The Egyptian hieroglyph <i>L005</i> that renders as 𓆨.
pattern L005 :: Char

-- | The Egyptian hieroglyph <i>L006</i> that renders as 𓆩.
pattern L006 :: Char

-- | The Egyptian hieroglyph <i>L006A</i> that renders as 𓆪.
pattern L006A :: Char

-- | The Egyptian hieroglyph <i>L007</i> that renders as 𓆫.
pattern L007 :: Char

-- | The Egyptian hieroglyph <i>L008</i> that renders as 𓆬.
pattern L008 :: Char

-- | The Egyptian hieroglyph <i>M001</i> that renders as 𓆭.
pattern M001 :: Char

-- | The Egyptian hieroglyph <i>M001A</i> that renders as 𓆮.
pattern M001A :: Char

-- | The Egyptian hieroglyph <i>M001B</i> that renders as 𓆯.
pattern M001B :: Char

-- | The Egyptian hieroglyph <i>M002</i> that renders as 𓆰.
pattern M002 :: Char

-- | The Egyptian hieroglyph <i>M003</i> that renders as 𓆱.
pattern M003 :: Char

-- | The Egyptian hieroglyph <i>M003A</i> that renders as 𓆲.
pattern M003A :: Char

-- | The Egyptian hieroglyph <i>M004</i> that renders as 𓆳.
pattern M004 :: Char

-- | The Egyptian hieroglyph <i>M005</i> that renders as 𓆴.
pattern M005 :: Char

-- | The Egyptian hieroglyph <i>M006</i> that renders as 𓆵.
pattern M006 :: Char

-- | The Egyptian hieroglyph <i>M007</i> that renders as 𓆶.
pattern M007 :: Char

-- | The Egyptian hieroglyph <i>M008</i> that renders as 𓆷.
pattern M008 :: Char

-- | The Egyptian hieroglyph <i>M009</i> that renders as 𓆸.
pattern M009 :: Char

-- | The Egyptian hieroglyph <i>M010</i> that renders as 𓆹.
pattern M010 :: Char

-- | The Egyptian hieroglyph <i>M010A</i> that renders as 𓆺.
pattern M010A :: Char

-- | The Egyptian hieroglyph <i>M011</i> that renders as 𓆻.
pattern M011 :: Char

-- | The Egyptian hieroglyph <i>M012</i> that renders as 𓆼.
pattern M012 :: Char

-- | The Egyptian hieroglyph <i>M012A</i> that renders as 𓆽.
pattern M012A :: Char

-- | The Egyptian hieroglyph <i>M012B</i> that renders as 𓆾.
pattern M012B :: Char

-- | The Egyptian hieroglyph <i>M012C</i> that renders as 𓆿.
pattern M012C :: Char

-- | The Egyptian hieroglyph <i>M012D</i> that renders as 𓇀.
pattern M012D :: Char

-- | The Egyptian hieroglyph <i>M012E</i> that renders as 𓇁.
pattern M012E :: Char

-- | The Egyptian hieroglyph <i>M012F</i> that renders as 𓇂.
pattern M012F :: Char

-- | The Egyptian hieroglyph <i>M012G</i> that renders as 𓇃.
pattern M012G :: Char

-- | The Egyptian hieroglyph <i>M012H</i> that renders as 𓇄.
pattern M012H :: Char

-- | The Egyptian hieroglyph <i>M013</i> that renders as 𓇅.
pattern M013 :: Char

-- | The Egyptian hieroglyph <i>M014</i> that renders as 𓇆.
pattern M014 :: Char

-- | The Egyptian hieroglyph <i>M015</i> that renders as 𓇇.
pattern M015 :: Char

-- | The Egyptian hieroglyph <i>M015A</i> that renders as 𓇈.
pattern M015A :: Char

-- | The Egyptian hieroglyph <i>M016</i> that renders as 𓇉.
pattern M016 :: Char

-- | The Egyptian hieroglyph <i>M016A</i> that renders as 𓇊.
pattern M016A :: Char

-- | The Egyptian hieroglyph <i>M017</i> that renders as 𓇋.
pattern M017 :: Char

-- | The Egyptian hieroglyph <i>M017A</i> that renders as 𓇌.
pattern M017A :: Char

-- | The Egyptian hieroglyph <i>M018</i> that renders as 𓇍.
pattern M018 :: Char

-- | The Egyptian hieroglyph <i>M019</i> that renders as 𓇎.
pattern M019 :: Char

-- | The Egyptian hieroglyph <i>M020</i> that renders as 𓇏.
pattern M020 :: Char

-- | The Egyptian hieroglyph <i>M021</i> that renders as 𓇐.
pattern M021 :: Char

-- | The Egyptian hieroglyph <i>M022</i> that renders as 𓇑.
pattern M022 :: Char

-- | The Egyptian hieroglyph <i>M022A</i> that renders as 𓇒.
pattern M022A :: Char

-- | The Egyptian hieroglyph <i>M023</i> that renders as 𓇓.
pattern M023 :: Char

-- | The Egyptian hieroglyph <i>M024</i> that renders as 𓇔.
pattern M024 :: Char

-- | The Egyptian hieroglyph <i>M024A</i> that renders as 𓇕.
pattern M024A :: Char

-- | The Egyptian hieroglyph <i>M025</i> that renders as 𓇖.
pattern M025 :: Char

-- | The Egyptian hieroglyph <i>M026</i> that renders as 𓇗.
pattern M026 :: Char

-- | The Egyptian hieroglyph <i>M027</i> that renders as 𓇘.
pattern M027 :: Char

-- | The Egyptian hieroglyph <i>M028</i> that renders as 𓇙.
pattern M028 :: Char

-- | The Egyptian hieroglyph <i>M028A</i> that renders as 𓇚.
pattern M028A :: Char

-- | The Egyptian hieroglyph <i>M029</i> that renders as 𓇛.
pattern M029 :: Char

-- | The Egyptian hieroglyph <i>M030</i> that renders as 𓇜.
pattern M030 :: Char

-- | The Egyptian hieroglyph <i>M031</i> that renders as 𓇝.
pattern M031 :: Char

-- | The Egyptian hieroglyph <i>M031A</i> that renders as 𓇞.
pattern M031A :: Char

-- | The Egyptian hieroglyph <i>M032</i> that renders as 𓇟.
pattern M032 :: Char

-- | The Egyptian hieroglyph <i>M033</i> that renders as 𓇠.
pattern M033 :: Char

-- | The Egyptian hieroglyph <i>M033A</i> that renders as 𓇡.
pattern M033A :: Char

-- | The Egyptian hieroglyph <i>M033B</i> that renders as 𓇢.
pattern M033B :: Char

-- | The Egyptian hieroglyph <i>M034</i> that renders as 𓇣.
pattern M034 :: Char

-- | The Egyptian hieroglyph <i>M035</i> that renders as 𓇤.
pattern M035 :: Char

-- | The Egyptian hieroglyph <i>M036</i> that renders as 𓇥.
pattern M036 :: Char

-- | The Egyptian hieroglyph <i>M037</i> that renders as 𓇦.
pattern M037 :: Char

-- | The Egyptian hieroglyph <i>M038</i> that renders as 𓇧.
pattern M038 :: Char

-- | The Egyptian hieroglyph <i>M039</i> that renders as 𓇨.
pattern M039 :: Char

-- | The Egyptian hieroglyph <i>M040</i> that renders as 𓇩.
pattern M040 :: Char

-- | The Egyptian hieroglyph <i>M040A</i> that renders as 𓇪.
pattern M040A :: Char

-- | The Egyptian hieroglyph <i>M041</i> that renders as 𓇫.
pattern M041 :: Char

-- | The Egyptian hieroglyph <i>M042</i> that renders as 𓇬.
pattern M042 :: Char

-- | The Egyptian hieroglyph <i>M043</i> that renders as 𓇭.
pattern M043 :: Char

-- | The Egyptian hieroglyph <i>M044</i> that renders as 𓇮.
pattern M044 :: Char

-- | The Egyptian hieroglyph <i>N001</i> that renders as 𓇯.
pattern N001 :: Char

-- | The Egyptian hieroglyph <i>N002</i> that renders as 𓇰.
pattern N002 :: Char

-- | The Egyptian hieroglyph <i>N003</i> that renders as 𓇱.
pattern N003 :: Char

-- | The Egyptian hieroglyph <i>N004</i> that renders as 𓇲.
pattern N004 :: Char

-- | The Egyptian hieroglyph <i>N005</i> that renders as 𓇳.
pattern N005 :: Char

-- | The Egyptian hieroglyph <i>N006</i> that renders as 𓇴.
pattern N006 :: Char

-- | The Egyptian hieroglyph <i>N007</i> that renders as 𓇵.
pattern N007 :: Char

-- | The Egyptian hieroglyph <i>N008</i> that renders as 𓇶.
pattern N008 :: Char

-- | The Egyptian hieroglyph <i>N009</i> that renders as 𓇷.
pattern N009 :: Char

-- | The Egyptian hieroglyph <i>N010</i> that renders as 𓇸.
pattern N010 :: Char

-- | The Egyptian hieroglyph <i>N011</i> that renders as 𓇹.
pattern N011 :: Char

-- | The Egyptian hieroglyph <i>N012</i> that renders as 𓇺.
pattern N012 :: Char

-- | The Egyptian hieroglyph <i>N013</i> that renders as 𓇻.
pattern N013 :: Char

-- | The Egyptian hieroglyph <i>N014</i> that renders as 𓇼.
pattern N014 :: Char

-- | The Egyptian hieroglyph <i>N015</i> that renders as 𓇽.
pattern N015 :: Char

-- | The Egyptian hieroglyph <i>N016</i> that renders as 𓇾.
pattern N016 :: Char

-- | The Egyptian hieroglyph <i>N017</i> that renders as 𓇿.
pattern N017 :: Char

-- | The Egyptian hieroglyph <i>N018</i> that renders as 𓈀.
pattern N018 :: Char

-- | The Egyptian hieroglyph <i>N018A</i> that renders as 𓈁.
pattern N018A :: Char

-- | The Egyptian hieroglyph <i>N018B</i> that renders as 𓈂.
pattern N018B :: Char

-- | The Egyptian hieroglyph <i>N019</i> that renders as 𓈃.
pattern N019 :: Char

-- | The Egyptian hieroglyph <i>N020</i> that renders as 𓈄.
pattern N020 :: Char

-- | The Egyptian hieroglyph <i>N021</i> that renders as 𓈅.
pattern N021 :: Char

-- | The Egyptian hieroglyph <i>N022</i> that renders as 𓈆.
pattern N022 :: Char

-- | The Egyptian hieroglyph <i>N023</i> that renders as 𓈇.
pattern N023 :: Char

-- | The Egyptian hieroglyph <i>N024</i> that renders as 𓈈.
pattern N024 :: Char

-- | The Egyptian hieroglyph <i>N025</i> that renders as 𓈉.
pattern N025 :: Char

-- | The Egyptian hieroglyph <i>N025A</i> that renders as 𓈊.
pattern N025A :: Char

-- | The Egyptian hieroglyph <i>N026</i> that renders as 𓈋.
pattern N026 :: Char

-- | The Egyptian hieroglyph <i>N027</i> that renders as 𓈌.
pattern N027 :: Char

-- | The Egyptian hieroglyph <i>N028</i> that renders as 𓈍.
pattern N028 :: Char

-- | The Egyptian hieroglyph <i>N029</i> that renders as 𓈎.
pattern N029 :: Char

-- | The Egyptian hieroglyph <i>N030</i> that renders as 𓈏.
pattern N030 :: Char

-- | The Egyptian hieroglyph <i>N031</i> that renders as 𓈐.
pattern N031 :: Char

-- | The Egyptian hieroglyph <i>N032</i> that renders as 𓈑.
pattern N032 :: Char

-- | The Egyptian hieroglyph <i>N033</i> that renders as 𓈒.
pattern N033 :: Char

-- | The Egyptian hieroglyph <i>N033A</i> that renders as 𓈓.
pattern N033A :: Char

-- | The Egyptian hieroglyph <i>N034</i> that renders as 𓈔.
pattern N034 :: Char

-- | The Egyptian hieroglyph <i>N034A</i> that renders as 𓈕.
pattern N034A :: Char

-- | The Egyptian hieroglyph <i>N035</i> that renders as 𓈖.
pattern N035 :: Char

-- | The Egyptian hieroglyph <i>N035A</i> that renders as 𓈗.
pattern N035A :: Char

-- | The Egyptian hieroglyph <i>N036</i> that renders as 𓈘.
pattern N036 :: Char

-- | The Egyptian hieroglyph <i>N037</i> that renders as 𓈙.
pattern N037 :: Char

-- | The Egyptian hieroglyph <i>N037A</i> that renders as 𓈚.
pattern N037A :: Char

-- | The Egyptian hieroglyph <i>N038</i> that renders as 𓈛.
pattern N038 :: Char

-- | The Egyptian hieroglyph <i>N039</i> that renders as 𓈜.
pattern N039 :: Char

-- | The Egyptian hieroglyph <i>N040</i> that renders as 𓈝.
pattern N040 :: Char

-- | The Egyptian hieroglyph <i>N041</i> that renders as 𓈞.
pattern N041 :: Char

-- | The Egyptian hieroglyph <i>N042</i> that renders as 𓈟.
pattern N042 :: Char

-- | The Egyptian hieroglyph <i>NL001</i> that renders as 𓈠.
pattern NL001 :: Char

-- | The Egyptian hieroglyph <i>NL002</i> that renders as 𓈡.
pattern NL002 :: Char

-- | The Egyptian hieroglyph <i>NL003</i> that renders as 𓈢.
pattern NL003 :: Char

-- | The Egyptian hieroglyph <i>NL004</i> that renders as 𓈣.
pattern NL004 :: Char

-- | The Egyptian hieroglyph <i>NL005</i> that renders as 𓈤.
pattern NL005 :: Char

-- | The Egyptian hieroglyph <i>NL005A</i> that renders as 𓈥.
pattern NL005A :: Char

-- | The Egyptian hieroglyph <i>NL006</i> that renders as 𓈦.
pattern NL006 :: Char

-- | The Egyptian hieroglyph <i>NL007</i> that renders as 𓈧.
pattern NL007 :: Char

-- | The Egyptian hieroglyph <i>NL008</i> that renders as 𓈨.
pattern NL008 :: Char

-- | The Egyptian hieroglyph <i>NL009</i> that renders as 𓈩.
pattern NL009 :: Char

-- | The Egyptian hieroglyph <i>NL010</i> that renders as 𓈪.
pattern NL010 :: Char

-- | The Egyptian hieroglyph <i>NL011</i> that renders as 𓈫.
pattern NL011 :: Char

-- | The Egyptian hieroglyph <i>NL012</i> that renders as 𓈬.
pattern NL012 :: Char

-- | The Egyptian hieroglyph <i>NL013</i> that renders as 𓈭.
pattern NL013 :: Char

-- | The Egyptian hieroglyph <i>NL014</i> that renders as 𓈮.
pattern NL014 :: Char

-- | The Egyptian hieroglyph <i>NL015</i> that renders as 𓈯.
pattern NL015 :: Char

-- | The Egyptian hieroglyph <i>NL016</i> that renders as 𓈰.
pattern NL016 :: Char

-- | The Egyptian hieroglyph <i>NL017</i> that renders as 𓈱.
pattern NL017 :: Char

-- | The Egyptian hieroglyph <i>NL017A</i> that renders as 𓈲.
pattern NL017A :: Char

-- | The Egyptian hieroglyph <i>NL018</i> that renders as 𓈳.
pattern NL018 :: Char

-- | The Egyptian hieroglyph <i>NL019</i> that renders as 𓈴.
pattern NL019 :: Char

-- | The Egyptian hieroglyph <i>NL020</i> that renders as 𓈵.
pattern NL020 :: Char

-- | The Egyptian hieroglyph <i>NU001</i> that renders as 𓈶.
pattern NU001 :: Char

-- | The Egyptian hieroglyph <i>NU002</i> that renders as 𓈷.
pattern NU002 :: Char

-- | The Egyptian hieroglyph <i>NU003</i> that renders as 𓈸.
pattern NU003 :: Char

-- | The Egyptian hieroglyph <i>NU004</i> that renders as 𓈹.
pattern NU004 :: Char

-- | The Egyptian hieroglyph <i>NU005</i> that renders as 𓈺.
pattern NU005 :: Char

-- | The Egyptian hieroglyph <i>NU006</i> that renders as 𓈻.
pattern NU006 :: Char

-- | The Egyptian hieroglyph <i>NU007</i> that renders as 𓈼.
pattern NU007 :: Char

-- | The Egyptian hieroglyph <i>NU008</i> that renders as 𓈽.
pattern NU008 :: Char

-- | The Egyptian hieroglyph <i>NU009</i> that renders as 𓈾.
pattern NU009 :: Char

-- | The Egyptian hieroglyph <i>NU010</i> that renders as 𓈿.
pattern NU010 :: Char

-- | The Egyptian hieroglyph <i>NU010A</i> that renders as 𓉀.
pattern NU010A :: Char

-- | The Egyptian hieroglyph <i>NU011</i> that renders as 𓉁.
pattern NU011 :: Char

-- | The Egyptian hieroglyph <i>NU011A</i> that renders as 𓉂.
pattern NU011A :: Char

-- | The Egyptian hieroglyph <i>NU012</i> that renders as 𓉃.
pattern NU012 :: Char

-- | The Egyptian hieroglyph <i>NU013</i> that renders as 𓉄.
pattern NU013 :: Char

-- | The Egyptian hieroglyph <i>NU014</i> that renders as 𓉅.
pattern NU014 :: Char

-- | The Egyptian hieroglyph <i>NU015</i> that renders as 𓉆.
pattern NU015 :: Char

-- | The Egyptian hieroglyph <i>NU016</i> that renders as 𓉇.
pattern NU016 :: Char

-- | The Egyptian hieroglyph <i>NU017</i> that renders as 𓉈.
pattern NU017 :: Char

-- | The Egyptian hieroglyph <i>NU018</i> that renders as 𓉉.
pattern NU018 :: Char

-- | The Egyptian hieroglyph <i>NU018A</i> that renders as 𓉊.
pattern NU018A :: Char

-- | The Egyptian hieroglyph <i>NU019</i> that renders as 𓉋.
pattern NU019 :: Char

-- | The Egyptian hieroglyph <i>NU020</i> that renders as 𓉌.
pattern NU020 :: Char

-- | The Egyptian hieroglyph <i>NU021</i> that renders as 𓉍.
pattern NU021 :: Char

-- | The Egyptian hieroglyph <i>NU022</i> that renders as 𓉎.
pattern NU022 :: Char

-- | The Egyptian hieroglyph <i>NU022A</i> that renders as 𓉏.
pattern NU022A :: Char

-- | The Egyptian hieroglyph <i>O001</i> that renders as 𓉐.
pattern O001 :: Char

-- | The Egyptian hieroglyph <i>O001A</i> that renders as 𓉑.
pattern O001A :: Char

-- | The Egyptian hieroglyph <i>O002</i> that renders as 𓉒.
pattern O002 :: Char

-- | The Egyptian hieroglyph <i>O003</i> that renders as 𓉓.
pattern O003 :: Char

-- | The Egyptian hieroglyph <i>O004</i> that renders as 𓉔.
pattern O004 :: Char

-- | The Egyptian hieroglyph <i>O005</i> that renders as 𓉕.
pattern O005 :: Char

-- | The Egyptian hieroglyph <i>O005A</i> that renders as 𓉖.
pattern O005A :: Char

-- | The Egyptian hieroglyph <i>O006</i> that renders as 𓉗.
pattern O006 :: Char

-- | The Egyptian hieroglyph <i>O006A</i> that renders as 𓉘.
pattern O006A :: Char

-- | The Egyptian hieroglyph <i>O006B</i> that renders as 𓉙.
pattern O006B :: Char

-- | The Egyptian hieroglyph <i>O006C</i> that renders as 𓉚.
pattern O006C :: Char

-- | The Egyptian hieroglyph <i>O006D</i> that renders as 𓉛.
pattern O006D :: Char

-- | The Egyptian hieroglyph <i>O006E</i> that renders as 𓉜.
pattern O006E :: Char

-- | The Egyptian hieroglyph <i>O006F</i> that renders as 𓉝.
pattern O006F :: Char

-- | The Egyptian hieroglyph <i>O007</i> that renders as 𓉞.
pattern O007 :: Char

-- | The Egyptian hieroglyph <i>O008</i> that renders as 𓉟.
pattern O008 :: Char

-- | The Egyptian hieroglyph <i>O009</i> that renders as 𓉠.
pattern O009 :: Char

-- | The Egyptian hieroglyph <i>O010</i> that renders as 𓉡.
pattern O010 :: Char

-- | The Egyptian hieroglyph <i>O010A</i> that renders as 𓉢.
pattern O010A :: Char

-- | The Egyptian hieroglyph <i>O010B</i> that renders as 𓉣.
pattern O010B :: Char

-- | The Egyptian hieroglyph <i>O010C</i> that renders as 𓉤.
pattern O010C :: Char

-- | The Egyptian hieroglyph <i>O011</i> that renders as 𓉥.
pattern O011 :: Char

-- | The Egyptian hieroglyph <i>O012</i> that renders as 𓉦.
pattern O012 :: Char

-- | The Egyptian hieroglyph <i>O013</i> that renders as 𓉧.
pattern O013 :: Char

-- | The Egyptian hieroglyph <i>O014</i> that renders as 𓉨.
pattern O014 :: Char

-- | The Egyptian hieroglyph <i>O015</i> that renders as 𓉩.
pattern O015 :: Char

-- | The Egyptian hieroglyph <i>O016</i> that renders as 𓉪.
pattern O016 :: Char

-- | The Egyptian hieroglyph <i>O017</i> that renders as 𓉫.
pattern O017 :: Char

-- | The Egyptian hieroglyph <i>O018</i> that renders as 𓉬.
pattern O018 :: Char

-- | The Egyptian hieroglyph <i>O019</i> that renders as 𓉭.
pattern O019 :: Char

-- | The Egyptian hieroglyph <i>O019A</i> that renders as 𓉮.
pattern O019A :: Char

-- | The Egyptian hieroglyph <i>O020</i> that renders as 𓉯.
pattern O020 :: Char

-- | The Egyptian hieroglyph <i>O020A</i> that renders as 𓉰.
pattern O020A :: Char

-- | The Egyptian hieroglyph <i>O021</i> that renders as 𓉱.
pattern O021 :: Char

-- | The Egyptian hieroglyph <i>O022</i> that renders as 𓉲.
pattern O022 :: Char

-- | The Egyptian hieroglyph <i>O023</i> that renders as 𓉳.
pattern O023 :: Char

-- | The Egyptian hieroglyph <i>O024</i> that renders as 𓉴.
pattern O024 :: Char

-- | The Egyptian hieroglyph <i>O024A</i> that renders as 𓉵.
pattern O024A :: Char

-- | The Egyptian hieroglyph <i>O025</i> that renders as 𓉶.
pattern O025 :: Char

-- | The Egyptian hieroglyph <i>O025A</i> that renders as 𓉷.
pattern O025A :: Char

-- | The Egyptian hieroglyph <i>O026</i> that renders as 𓉸.
pattern O026 :: Char

-- | The Egyptian hieroglyph <i>O027</i> that renders as 𓉹.
pattern O027 :: Char

-- | The Egyptian hieroglyph <i>O028</i> that renders as 𓉺.
pattern O028 :: Char

-- | The Egyptian hieroglyph <i>O029</i> that renders as 𓉻.
pattern O029 :: Char

-- | The Egyptian hieroglyph <i>O029A</i> that renders as 𓉼.
pattern O029A :: Char

-- | The Egyptian hieroglyph <i>O030</i> that renders as 𓉽.
pattern O030 :: Char

-- | The Egyptian hieroglyph <i>O030A</i> that renders as 𓉾.
pattern O030A :: Char

-- | The Egyptian hieroglyph <i>O031</i> that renders as 𓉿.
pattern O031 :: Char

-- | The Egyptian hieroglyph <i>O032</i> that renders as 𓊀.
pattern O032 :: Char

-- | The Egyptian hieroglyph <i>O033</i> that renders as 𓊁.
pattern O033 :: Char

-- | The Egyptian hieroglyph <i>O033A</i> that renders as 𓊂.
pattern O033A :: Char

-- | The Egyptian hieroglyph <i>O034</i> that renders as 𓊃.
pattern O034 :: Char

-- | The Egyptian hieroglyph <i>O035</i> that renders as 𓊄.
pattern O035 :: Char

-- | The Egyptian hieroglyph <i>O036</i> that renders as 𓊅.
pattern O036 :: Char

-- | The Egyptian hieroglyph <i>O036A</i> that renders as 𓊆.
pattern O036A :: Char

-- | The Egyptian hieroglyph <i>O036B</i> that renders as 𓊇.
pattern O036B :: Char

-- | The Egyptian hieroglyph <i>O036C</i> that renders as 𓊈.
pattern O036C :: Char

-- | The Egyptian hieroglyph <i>O036D</i> that renders as 𓊉.
pattern O036D :: Char

-- | The Egyptian hieroglyph <i>O037</i> that renders as 𓊊.
pattern O037 :: Char

-- | The Egyptian hieroglyph <i>O038</i> that renders as 𓊋.
pattern O038 :: Char

-- | The Egyptian hieroglyph <i>O039</i> that renders as 𓊌.
pattern O039 :: Char

-- | The Egyptian hieroglyph <i>O040</i> that renders as 𓊍.
pattern O040 :: Char

-- | The Egyptian hieroglyph <i>O041</i> that renders as 𓊎.
pattern O041 :: Char

-- | The Egyptian hieroglyph <i>O042</i> that renders as 𓊏.
pattern O042 :: Char

-- | The Egyptian hieroglyph <i>O043</i> that renders as 𓊐.
pattern O043 :: Char

-- | The Egyptian hieroglyph <i>O044</i> that renders as 𓊑.
pattern O044 :: Char

-- | The Egyptian hieroglyph <i>O045</i> that renders as 𓊒.
pattern O045 :: Char

-- | The Egyptian hieroglyph <i>O046</i> that renders as 𓊓.
pattern O046 :: Char

-- | The Egyptian hieroglyph <i>O047</i> that renders as 𓊔.
pattern O047 :: Char

-- | The Egyptian hieroglyph <i>O048</i> that renders as 𓊕.
pattern O048 :: Char

-- | The Egyptian hieroglyph <i>O049</i> that renders as 𓊖.
pattern O049 :: Char

-- | The Egyptian hieroglyph <i>O050</i> that renders as 𓊗.
pattern O050 :: Char

-- | The Egyptian hieroglyph <i>O050A</i> that renders as 𓊘.
pattern O050A :: Char

-- | The Egyptian hieroglyph <i>O050B</i> that renders as 𓊙.
pattern O050B :: Char

-- | The Egyptian hieroglyph <i>O051</i> that renders as 𓊚.
pattern O051 :: Char

-- | The Egyptian hieroglyph <i>P001</i> that renders as 𓊛.
pattern P001 :: Char

-- | The Egyptian hieroglyph <i>P001A</i> that renders as 𓊜.
pattern P001A :: Char

-- | The Egyptian hieroglyph <i>P002</i> that renders as 𓊝.
pattern P002 :: Char

-- | The Egyptian hieroglyph <i>P003</i> that renders as 𓊞.
pattern P003 :: Char

-- | The Egyptian hieroglyph <i>P003A</i> that renders as 𓊟.
pattern P003A :: Char

-- | The Egyptian hieroglyph <i>P004</i> that renders as 𓊠.
pattern P004 :: Char

-- | The Egyptian hieroglyph <i>P005</i> that renders as 𓊡.
pattern P005 :: Char

-- | The Egyptian hieroglyph <i>P006</i> that renders as 𓊢.
pattern P006 :: Char

-- | The Egyptian hieroglyph <i>P007</i> that renders as 𓊣.
pattern P007 :: Char

-- | The Egyptian hieroglyph <i>P008</i> that renders as 𓊤.
pattern P008 :: Char

-- | The Egyptian hieroglyph <i>P009</i> that renders as 𓊥.
pattern P009 :: Char

-- | The Egyptian hieroglyph <i>P010</i> that renders as 𓊦.
pattern P010 :: Char

-- | The Egyptian hieroglyph <i>P011</i> that renders as 𓊧.
pattern P011 :: Char

-- | The Egyptian hieroglyph <i>Q001</i> that renders as 𓊨.
pattern Q001 :: Char

-- | The Egyptian hieroglyph <i>Q002</i> that renders as 𓊩.
pattern Q002 :: Char

-- | The Egyptian hieroglyph <i>Q003</i> that renders as 𓊪.
pattern Q003 :: Char

-- | The Egyptian hieroglyph <i>Q004</i> that renders as 𓊫.
pattern Q004 :: Char

-- | The Egyptian hieroglyph <i>Q005</i> that renders as 𓊬.
pattern Q005 :: Char

-- | The Egyptian hieroglyph <i>Q006</i> that renders as 𓊭.
pattern Q006 :: Char

-- | The Egyptian hieroglyph <i>Q007</i> that renders as 𓊮.
pattern Q007 :: Char

-- | The Egyptian hieroglyph <i>R001</i> that renders as 𓊯.
pattern R001 :: Char

-- | The Egyptian hieroglyph <i>R002</i> that renders as 𓊰.
pattern R002 :: Char

-- | The Egyptian hieroglyph <i>R002A</i> that renders as 𓊱.
pattern R002A :: Char

-- | The Egyptian hieroglyph <i>R003</i> that renders as 𓊲.
pattern R003 :: Char

-- | The Egyptian hieroglyph <i>R003A</i> that renders as 𓊳.
pattern R003A :: Char

-- | The Egyptian hieroglyph <i>R003B</i> that renders as 𓊴.
pattern R003B :: Char

-- | The Egyptian hieroglyph <i>R004</i> that renders as 𓊵.
pattern R004 :: Char

-- | The Egyptian hieroglyph <i>R005</i> that renders as 𓊶.
pattern R005 :: Char

-- | The Egyptian hieroglyph <i>R006</i> that renders as 𓊷.
pattern R006 :: Char

-- | The Egyptian hieroglyph <i>R007</i> that renders as 𓊸.
pattern R007 :: Char

-- | The Egyptian hieroglyph <i>R008</i> that renders as 𓊹.
pattern R008 :: Char

-- | The Egyptian hieroglyph <i>R009</i> that renders as 𓊺.
pattern R009 :: Char

-- | The Egyptian hieroglyph <i>R010</i> that renders as 𓊻.
pattern R010 :: Char

-- | The Egyptian hieroglyph <i>R010A</i> that renders as 𓊼.
pattern R010A :: Char

-- | The Egyptian hieroglyph <i>R011</i> that renders as 𓊽.
pattern R011 :: Char

-- | The Egyptian hieroglyph <i>R012</i> that renders as 𓊾.
pattern R012 :: Char

-- | The Egyptian hieroglyph <i>R013</i> that renders as 𓊿.
pattern R013 :: Char

-- | The Egyptian hieroglyph <i>R014</i> that renders as 𓋀.
pattern R014 :: Char

-- | The Egyptian hieroglyph <i>R015</i> that renders as 𓋁.
pattern R015 :: Char

-- | The Egyptian hieroglyph <i>R016</i> that renders as 𓋂.
pattern R016 :: Char

-- | The Egyptian hieroglyph <i>R016A</i> that renders as 𓋃.
pattern R016A :: Char

-- | The Egyptian hieroglyph <i>R017</i> that renders as 𓋄.
pattern R017 :: Char

-- | The Egyptian hieroglyph <i>R018</i> that renders as 𓋅.
pattern R018 :: Char

-- | The Egyptian hieroglyph <i>R019</i> that renders as 𓋆.
pattern R019 :: Char

-- | The Egyptian hieroglyph <i>R020</i> that renders as 𓋇.
pattern R020 :: Char

-- | The Egyptian hieroglyph <i>R021</i> that renders as 𓋈.
pattern R021 :: Char

-- | The Egyptian hieroglyph <i>R022</i> that renders as 𓋉.
pattern R022 :: Char

-- | The Egyptian hieroglyph <i>R023</i> that renders as 𓋊.
pattern R023 :: Char

-- | The Egyptian hieroglyph <i>R024</i> that renders as 𓋋.
pattern R024 :: Char

-- | The Egyptian hieroglyph <i>R025</i> that renders as 𓋌.
pattern R025 :: Char

-- | The Egyptian hieroglyph <i>R026</i> that renders as 𓋍.
pattern R026 :: Char

-- | The Egyptian hieroglyph <i>R027</i> that renders as 𓋎.
pattern R027 :: Char

-- | The Egyptian hieroglyph <i>R028</i> that renders as 𓋏.
pattern R028 :: Char

-- | The Egyptian hieroglyph <i>R029</i> that renders as 𓋐.
pattern R029 :: Char

-- | The Egyptian hieroglyph <i>S001</i> that renders as 𓋑.
pattern S001 :: Char

-- | The Egyptian hieroglyph <i>S002</i> that renders as 𓋒.
pattern S002 :: Char

-- | The Egyptian hieroglyph <i>S002A</i> that renders as 𓋓.
pattern S002A :: Char

-- | The Egyptian hieroglyph <i>S003</i> that renders as 𓋔.
pattern S003 :: Char

-- | The Egyptian hieroglyph <i>S004</i> that renders as 𓋕.
pattern S004 :: Char

-- | The Egyptian hieroglyph <i>S005</i> that renders as 𓋖.
pattern S005 :: Char

-- | The Egyptian hieroglyph <i>S006</i> that renders as 𓋗.
pattern S006 :: Char

-- | The Egyptian hieroglyph <i>S006A</i> that renders as 𓋘.
pattern S006A :: Char

-- | The Egyptian hieroglyph <i>S007</i> that renders as 𓋙.
pattern S007 :: Char

-- | The Egyptian hieroglyph <i>S008</i> that renders as 𓋚.
pattern S008 :: Char

-- | The Egyptian hieroglyph <i>S009</i> that renders as 𓋛.
pattern S009 :: Char

-- | The Egyptian hieroglyph <i>S010</i> that renders as 𓋜.
pattern S010 :: Char

-- | The Egyptian hieroglyph <i>S011</i> that renders as 𓋝.
pattern S011 :: Char

-- | The Egyptian hieroglyph <i>S012</i> that renders as 𓋞.
pattern S012 :: Char

-- | The Egyptian hieroglyph <i>S013</i> that renders as 𓋟.
pattern S013 :: Char

-- | The Egyptian hieroglyph <i>S014</i> that renders as 𓋠.
pattern S014 :: Char

-- | The Egyptian hieroglyph <i>S014A</i> that renders as 𓋡.
pattern S014A :: Char

-- | The Egyptian hieroglyph <i>S014B</i> that renders as 𓋢.
pattern S014B :: Char

-- | The Egyptian hieroglyph <i>S015</i> that renders as 𓋣.
pattern S015 :: Char

-- | The Egyptian hieroglyph <i>S016</i> that renders as 𓋤.
pattern S016 :: Char

-- | The Egyptian hieroglyph <i>S017</i> that renders as 𓋥.
pattern S017 :: Char

-- | The Egyptian hieroglyph <i>S017A</i> that renders as 𓋦.
pattern S017A :: Char

-- | The Egyptian hieroglyph <i>S018</i> that renders as 𓋧.
pattern S018 :: Char

-- | The Egyptian hieroglyph <i>S019</i> that renders as 𓋨.
pattern S019 :: Char

-- | The Egyptian hieroglyph <i>S020</i> that renders as 𓋩.
pattern S020 :: Char

-- | The Egyptian hieroglyph <i>S021</i> that renders as 𓋪.
pattern S021 :: Char

-- | The Egyptian hieroglyph <i>S022</i> that renders as 𓋫.
pattern S022 :: Char

-- | The Egyptian hieroglyph <i>S023</i> that renders as 𓋬.
pattern S023 :: Char

-- | The Egyptian hieroglyph <i>S024</i> that renders as 𓋭.
pattern S024 :: Char

-- | The Egyptian hieroglyph <i>S025</i> that renders as 𓋮.
pattern S025 :: Char

-- | The Egyptian hieroglyph <i>S026</i> that renders as 𓋯.
pattern S026 :: Char

-- | The Egyptian hieroglyph <i>S026A</i> that renders as 𓋰.
pattern S026A :: Char

-- | The Egyptian hieroglyph <i>S026B</i> that renders as 𓋱.
pattern S026B :: Char

-- | The Egyptian hieroglyph <i>S027</i> that renders as 𓋲.
pattern S027 :: Char

-- | The Egyptian hieroglyph <i>S028</i> that renders as 𓋳.
pattern S028 :: Char

-- | The Egyptian hieroglyph <i>S029</i> that renders as 𓋴.
pattern S029 :: Char

-- | The Egyptian hieroglyph <i>S030</i> that renders as 𓋵.
pattern S030 :: Char

-- | The Egyptian hieroglyph <i>S031</i> that renders as 𓋶.
pattern S031 :: Char

-- | The Egyptian hieroglyph <i>S032</i> that renders as 𓋷.
pattern S032 :: Char

-- | The Egyptian hieroglyph <i>S033</i> that renders as 𓋸.
pattern S033 :: Char

-- | The Egyptian hieroglyph <i>S034</i> that renders as 𓋹.
pattern S034 :: Char

-- | The Egyptian hieroglyph <i>S035</i> that renders as 𓋺.
pattern S035 :: Char

-- | The Egyptian hieroglyph <i>S035A</i> that renders as 𓋻.
pattern S035A :: Char

-- | The Egyptian hieroglyph <i>S036</i> that renders as 𓋼.
pattern S036 :: Char

-- | The Egyptian hieroglyph <i>S037</i> that renders as 𓋽.
pattern S037 :: Char

-- | The Egyptian hieroglyph <i>S038</i> that renders as 𓋾.
pattern S038 :: Char

-- | The Egyptian hieroglyph <i>S039</i> that renders as 𓋿.
pattern S039 :: Char

-- | The Egyptian hieroglyph <i>S040</i> that renders as 𓌀.
pattern S040 :: Char

-- | The Egyptian hieroglyph <i>S041</i> that renders as 𓌁.
pattern S041 :: Char

-- | The Egyptian hieroglyph <i>S042</i> that renders as 𓌂.
pattern S042 :: Char

-- | The Egyptian hieroglyph <i>S043</i> that renders as 𓌃.
pattern S043 :: Char

-- | The Egyptian hieroglyph <i>S044</i> that renders as 𓌄.
pattern S044 :: Char

-- | The Egyptian hieroglyph <i>S045</i> that renders as 𓌅.
pattern S045 :: Char

-- | The Egyptian hieroglyph <i>S046</i> that renders as 𓌆.
pattern S046 :: Char

-- | The Egyptian hieroglyph <i>T001</i> that renders as 𓌇.
pattern T001 :: Char

-- | The Egyptian hieroglyph <i>T002</i> that renders as 𓌈.
pattern T002 :: Char

-- | The Egyptian hieroglyph <i>T003</i> that renders as 𓌉.
pattern T003 :: Char

-- | The Egyptian hieroglyph <i>T003A</i> that renders as 𓌊.
pattern T003A :: Char

-- | The Egyptian hieroglyph <i>T004</i> that renders as 𓌋.
pattern T004 :: Char

-- | The Egyptian hieroglyph <i>T005</i> that renders as 𓌌.
pattern T005 :: Char

-- | The Egyptian hieroglyph <i>T006</i> that renders as 𓌍.
pattern T006 :: Char

-- | The Egyptian hieroglyph <i>T007</i> that renders as 𓌎.
pattern T007 :: Char

-- | The Egyptian hieroglyph <i>T007A</i> that renders as 𓌏.
pattern T007A :: Char

-- | The Egyptian hieroglyph <i>T008</i> that renders as 𓌐.
pattern T008 :: Char

-- | The Egyptian hieroglyph <i>T008A</i> that renders as 𓌑.
pattern T008A :: Char

-- | The Egyptian hieroglyph <i>T009</i> that renders as 𓌒.
pattern T009 :: Char

-- | The Egyptian hieroglyph <i>T009A</i> that renders as 𓌓.
pattern T009A :: Char

-- | The Egyptian hieroglyph <i>T010</i> that renders as 𓌔.
pattern T010 :: Char

-- | The Egyptian hieroglyph <i>T011</i> that renders as 𓌕.
pattern T011 :: Char

-- | The Egyptian hieroglyph <i>T011A</i> that renders as 𓌖.
pattern T011A :: Char

-- | The Egyptian hieroglyph <i>T012</i> that renders as 𓌗.
pattern T012 :: Char

-- | The Egyptian hieroglyph <i>T013</i> that renders as 𓌘.
pattern T013 :: Char

-- | The Egyptian hieroglyph <i>T014</i> that renders as 𓌙.
pattern T014 :: Char

-- | The Egyptian hieroglyph <i>T015</i> that renders as 𓌚.
pattern T015 :: Char

-- | The Egyptian hieroglyph <i>T016</i> that renders as 𓌛.
pattern T016 :: Char

-- | The Egyptian hieroglyph <i>T016A</i> that renders as 𓌜.
pattern T016A :: Char

-- | The Egyptian hieroglyph <i>T017</i> that renders as 𓌝.
pattern T017 :: Char

-- | The Egyptian hieroglyph <i>T018</i> that renders as 𓌞.
pattern T018 :: Char

-- | The Egyptian hieroglyph <i>T019</i> that renders as 𓌟.
pattern T019 :: Char

-- | The Egyptian hieroglyph <i>T020</i> that renders as 𓌠.
pattern T020 :: Char

-- | The Egyptian hieroglyph <i>T021</i> that renders as 𓌡.
pattern T021 :: Char

-- | The Egyptian hieroglyph <i>T022</i> that renders as 𓌢.
pattern T022 :: Char

-- | The Egyptian hieroglyph <i>T023</i> that renders as 𓌣.
pattern T023 :: Char

-- | The Egyptian hieroglyph <i>T024</i> that renders as 𓌤.
pattern T024 :: Char

-- | The Egyptian hieroglyph <i>T025</i> that renders as 𓌥.
pattern T025 :: Char

-- | The Egyptian hieroglyph <i>T026</i> that renders as 𓌦.
pattern T026 :: Char

-- | The Egyptian hieroglyph <i>T027</i> that renders as 𓌧.
pattern T027 :: Char

-- | The Egyptian hieroglyph <i>T028</i> that renders as 𓌨.
pattern T028 :: Char

-- | The Egyptian hieroglyph <i>T029</i> that renders as 𓌩.
pattern T029 :: Char

-- | The Egyptian hieroglyph <i>T030</i> that renders as 𓌪.
pattern T030 :: Char

-- | The Egyptian hieroglyph <i>T031</i> that renders as 𓌫.
pattern T031 :: Char

-- | The Egyptian hieroglyph <i>T032</i> that renders as 𓌬.
pattern T032 :: Char

-- | The Egyptian hieroglyph <i>T032A</i> that renders as 𓌭.
pattern T032A :: Char

-- | The Egyptian hieroglyph <i>T033</i> that renders as 𓌮.
pattern T033 :: Char

-- | The Egyptian hieroglyph <i>T033A</i> that renders as 𓌯.
pattern T033A :: Char

-- | The Egyptian hieroglyph <i>T034</i> that renders as 𓌰.
pattern T034 :: Char

-- | The Egyptian hieroglyph <i>T035</i> that renders as 𓌱.
pattern T035 :: Char

-- | The Egyptian hieroglyph <i>T036</i> that renders as 𓌲.
pattern T036 :: Char

-- | The Egyptian hieroglyph <i>U001</i> that renders as 𓌳.
pattern U001 :: Char

-- | The Egyptian hieroglyph <i>U002</i> that renders as 𓌴.
pattern U002 :: Char

-- | The Egyptian hieroglyph <i>U003</i> that renders as 𓌵.
pattern U003 :: Char

-- | The Egyptian hieroglyph <i>U004</i> that renders as 𓌶.
pattern U004 :: Char

-- | The Egyptian hieroglyph <i>U005</i> that renders as 𓌷.
pattern U005 :: Char

-- | The Egyptian hieroglyph <i>U006</i> that renders as 𓌸.
pattern U006 :: Char

-- | The Egyptian hieroglyph <i>U006A</i> that renders as 𓌹.
pattern U006A :: Char

-- | The Egyptian hieroglyph <i>U006B</i> that renders as 𓌺.
pattern U006B :: Char

-- | The Egyptian hieroglyph <i>U007</i> that renders as 𓌻.
pattern U007 :: Char

-- | The Egyptian hieroglyph <i>U008</i> that renders as 𓌼.
pattern U008 :: Char

-- | The Egyptian hieroglyph <i>U009</i> that renders as 𓌽.
pattern U009 :: Char

-- | The Egyptian hieroglyph <i>U010</i> that renders as 𓌾.
pattern U010 :: Char

-- | The Egyptian hieroglyph <i>U011</i> that renders as 𓌿.
pattern U011 :: Char

-- | The Egyptian hieroglyph <i>U012</i> that renders as 𓍀.
pattern U012 :: Char

-- | The Egyptian hieroglyph <i>U013</i> that renders as 𓍁.
pattern U013 :: Char

-- | The Egyptian hieroglyph <i>U014</i> that renders as 𓍂.
pattern U014 :: Char

-- | The Egyptian hieroglyph <i>U015</i> that renders as 𓍃.
pattern U015 :: Char

-- | The Egyptian hieroglyph <i>U016</i> that renders as 𓍄.
pattern U016 :: Char

-- | The Egyptian hieroglyph <i>U017</i> that renders as 𓍅.
pattern U017 :: Char

-- | The Egyptian hieroglyph <i>U018</i> that renders as 𓍆.
pattern U018 :: Char

-- | The Egyptian hieroglyph <i>U019</i> that renders as 𓍇.
pattern U019 :: Char

-- | The Egyptian hieroglyph <i>U020</i> that renders as 𓍈.
pattern U020 :: Char

-- | The Egyptian hieroglyph <i>U021</i> that renders as 𓍉.
pattern U021 :: Char

-- | The Egyptian hieroglyph <i>U022</i> that renders as 𓍊.
pattern U022 :: Char

-- | The Egyptian hieroglyph <i>U023</i> that renders as 𓍋.
pattern U023 :: Char

-- | The Egyptian hieroglyph <i>U023A</i> that renders as 𓍌.
pattern U023A :: Char

-- | The Egyptian hieroglyph <i>U024</i> that renders as 𓍍.
pattern U024 :: Char

-- | The Egyptian hieroglyph <i>U025</i> that renders as 𓍎.
pattern U025 :: Char

-- | The Egyptian hieroglyph <i>U026</i> that renders as 𓍏.
pattern U026 :: Char

-- | The Egyptian hieroglyph <i>U027</i> that renders as 𓍐.
pattern U027 :: Char

-- | The Egyptian hieroglyph <i>U028</i> that renders as 𓍑.
pattern U028 :: Char

-- | The Egyptian hieroglyph <i>U029</i> that renders as 𓍒.
pattern U029 :: Char

-- | The Egyptian hieroglyph <i>U029A</i> that renders as 𓍓.
pattern U029A :: Char

-- | The Egyptian hieroglyph <i>U030</i> that renders as 𓍔.
pattern U030 :: Char

-- | The Egyptian hieroglyph <i>U031</i> that renders as 𓍕.
pattern U031 :: Char

-- | The Egyptian hieroglyph <i>U032</i> that renders as 𓍖.
pattern U032 :: Char

-- | The Egyptian hieroglyph <i>U032A</i> that renders as 𓍗.
pattern U032A :: Char

-- | The Egyptian hieroglyph <i>U033</i> that renders as 𓍘.
pattern U033 :: Char

-- | The Egyptian hieroglyph <i>U034</i> that renders as 𓍙.
pattern U034 :: Char

-- | The Egyptian hieroglyph <i>U035</i> that renders as 𓍚.
pattern U035 :: Char

-- | The Egyptian hieroglyph <i>U036</i> that renders as 𓍛.
pattern U036 :: Char

-- | The Egyptian hieroglyph <i>U037</i> that renders as 𓍜.
pattern U037 :: Char

-- | The Egyptian hieroglyph <i>U038</i> that renders as 𓍝.
pattern U038 :: Char

-- | The Egyptian hieroglyph <i>U039</i> that renders as 𓍞.
pattern U039 :: Char

-- | The Egyptian hieroglyph <i>U040</i> that renders as 𓍟.
pattern U040 :: Char

-- | The Egyptian hieroglyph <i>U041</i> that renders as 𓍠.
pattern U041 :: Char

-- | The Egyptian hieroglyph <i>U042</i> that renders as 𓍡.
pattern U042 :: Char

-- | The Egyptian hieroglyph <i>V001</i> that renders as 𓍢.
pattern V001 :: Char

-- | The Egyptian hieroglyph <i>V001A</i> that renders as 𓍣.
pattern V001A :: Char

-- | The Egyptian hieroglyph <i>V001B</i> that renders as 𓍤.
pattern V001B :: Char

-- | The Egyptian hieroglyph <i>V001C</i> that renders as 𓍥.
pattern V001C :: Char

-- | The Egyptian hieroglyph <i>V001D</i> that renders as 𓍦.
pattern V001D :: Char

-- | The Egyptian hieroglyph <i>V001E</i> that renders as 𓍧.
pattern V001E :: Char

-- | The Egyptian hieroglyph <i>V001F</i> that renders as 𓍨.
pattern V001F :: Char

-- | The Egyptian hieroglyph <i>V001G</i> that renders as 𓍩.
pattern V001G :: Char

-- | The Egyptian hieroglyph <i>V001H</i> that renders as 𓍪.
pattern V001H :: Char

-- | The Egyptian hieroglyph <i>V001I</i> that renders as 𓍫.
pattern V001I :: Char

-- | The Egyptian hieroglyph <i>V002</i> that renders as 𓍬.
pattern V002 :: Char

-- | The Egyptian hieroglyph <i>V002A</i> that renders as 𓍭.
pattern V002A :: Char

-- | The Egyptian hieroglyph <i>V003</i> that renders as 𓍮.
pattern V003 :: Char

-- | The Egyptian hieroglyph <i>V004</i> that renders as 𓍯.
pattern V004 :: Char

-- | The Egyptian hieroglyph <i>V005</i> that renders as 𓍰.
pattern V005 :: Char

-- | The Egyptian hieroglyph <i>V006</i> that renders as 𓍱.
pattern V006 :: Char

-- | The Egyptian hieroglyph <i>V007</i> that renders as 𓍲.
pattern V007 :: Char

-- | The Egyptian hieroglyph <i>V007A</i> that renders as 𓍳.
pattern V007A :: Char

-- | The Egyptian hieroglyph <i>V007B</i> that renders as 𓍴.
pattern V007B :: Char

-- | The Egyptian hieroglyph <i>V008</i> that renders as 𓍵.
pattern V008 :: Char

-- | The Egyptian hieroglyph <i>V009</i> that renders as 𓍶.
pattern V009 :: Char

-- | The Egyptian hieroglyph <i>V010</i> that renders as 𓍷.
pattern V010 :: Char

-- | The Egyptian hieroglyph <i>V011</i> that renders as 𓍸.
pattern V011 :: Char

-- | The Egyptian hieroglyph <i>V011A</i> that renders as 𓍹.
pattern V011A :: Char

-- | The Egyptian hieroglyph <i>V011B</i> that renders as 𓍺.
pattern V011B :: Char

-- | The Egyptian hieroglyph <i>V011C</i> that renders as 𓍻.
pattern V011C :: Char

-- | The Egyptian hieroglyph <i>V012</i> that renders as 𓍼.
pattern V012 :: Char

-- | The Egyptian hieroglyph <i>V012A</i> that renders as 𓍽.
pattern V012A :: Char

-- | The Egyptian hieroglyph <i>V012B</i> that renders as 𓍾.
pattern V012B :: Char

-- | The Egyptian hieroglyph <i>V013</i> that renders as 𓍿.
pattern V013 :: Char

-- | The Egyptian hieroglyph <i>V014</i> that renders as 𓎀.
pattern V014 :: Char

-- | The Egyptian hieroglyph <i>V015</i> that renders as 𓎁.
pattern V015 :: Char

-- | The Egyptian hieroglyph <i>V016</i> that renders as 𓎂.
pattern V016 :: Char

-- | The Egyptian hieroglyph <i>V017</i> that renders as 𓎃.
pattern V017 :: Char

-- | The Egyptian hieroglyph <i>V018</i> that renders as 𓎄.
pattern V018 :: Char

-- | The Egyptian hieroglyph <i>V019</i> that renders as 𓎅.
pattern V019 :: Char

-- | The Egyptian hieroglyph <i>V020</i> that renders as 𓎆.
pattern V020 :: Char

-- | The Egyptian hieroglyph <i>V020A</i> that renders as 𓎇.
pattern V020A :: Char

-- | The Egyptian hieroglyph <i>V020B</i> that renders as 𓎈.
pattern V020B :: Char

-- | The Egyptian hieroglyph <i>V020C</i> that renders as 𓎉.
pattern V020C :: Char

-- | The Egyptian hieroglyph <i>V020D</i> that renders as 𓎊.
pattern V020D :: Char

-- | The Egyptian hieroglyph <i>V020E</i> that renders as 𓎋.
pattern V020E :: Char

-- | The Egyptian hieroglyph <i>V020F</i> that renders as 𓎌.
pattern V020F :: Char

-- | The Egyptian hieroglyph <i>V020G</i> that renders as 𓎍.
pattern V020G :: Char

-- | The Egyptian hieroglyph <i>V020H</i> that renders as 𓎎.
pattern V020H :: Char

-- | The Egyptian hieroglyph <i>V020I</i> that renders as 𓎏.
pattern V020I :: Char

-- | The Egyptian hieroglyph <i>V020J</i> that renders as 𓎐.
pattern V020J :: Char

-- | The Egyptian hieroglyph <i>V020K</i> that renders as 𓎑.
pattern V020K :: Char

-- | The Egyptian hieroglyph <i>V020L</i> that renders as 𓎒.
pattern V020L :: Char

-- | The Egyptian hieroglyph <i>V021</i> that renders as 𓎓.
pattern V021 :: Char

-- | The Egyptian hieroglyph <i>V022</i> that renders as 𓎔.
pattern V022 :: Char

-- | The Egyptian hieroglyph <i>V023</i> that renders as 𓎕.
pattern V023 :: Char

-- | The Egyptian hieroglyph <i>V023A</i> that renders as 𓎖.
pattern V023A :: Char

-- | The Egyptian hieroglyph <i>V024</i> that renders as 𓎗.
pattern V024 :: Char

-- | The Egyptian hieroglyph <i>V025</i> that renders as 𓎘.
pattern V025 :: Char

-- | The Egyptian hieroglyph <i>V026</i> that renders as 𓎙.
pattern V026 :: Char

-- | The Egyptian hieroglyph <i>V027</i> that renders as 𓎚.
pattern V027 :: Char

-- | The Egyptian hieroglyph <i>V028</i> that renders as 𓎛.
pattern V028 :: Char

-- | The Egyptian hieroglyph <i>V028A</i> that renders as 𓎜.
pattern V028A :: Char

-- | The Egyptian hieroglyph <i>V029</i> that renders as 𓎝.
pattern V029 :: Char

-- | The Egyptian hieroglyph <i>V029A</i> that renders as 𓎞.
pattern V029A :: Char

-- | The Egyptian hieroglyph <i>V030</i> that renders as 𓎟.
pattern V030 :: Char

-- | The Egyptian hieroglyph <i>V030A</i> that renders as 𓎠.
pattern V030A :: Char

-- | The Egyptian hieroglyph <i>V031</i> that renders as 𓎡.
pattern V031 :: Char

-- | The Egyptian hieroglyph <i>V031A</i> that renders as 𓎢.
pattern V031A :: Char

-- | The Egyptian hieroglyph <i>V032</i> that renders as 𓎣.
pattern V032 :: Char

-- | The Egyptian hieroglyph <i>V033</i> that renders as 𓎤.
pattern V033 :: Char

-- | The Egyptian hieroglyph <i>V033A</i> that renders as 𓎥.
pattern V033A :: Char

-- | The Egyptian hieroglyph <i>V034</i> that renders as 𓎦.
pattern V034 :: Char

-- | The Egyptian hieroglyph <i>V035</i> that renders as 𓎧.
pattern V035 :: Char

-- | The Egyptian hieroglyph <i>V036</i> that renders as 𓎨.
pattern V036 :: Char

-- | The Egyptian hieroglyph <i>V037</i> that renders as 𓎩.
pattern V037 :: Char

-- | The Egyptian hieroglyph <i>V037A</i> that renders as 𓎪.
pattern V037A :: Char

-- | The Egyptian hieroglyph <i>V038</i> that renders as 𓎫.
pattern V038 :: Char

-- | The Egyptian hieroglyph <i>V039</i> that renders as 𓎬.
pattern V039 :: Char

-- | The Egyptian hieroglyph <i>V040</i> that renders as 𓎭.
pattern V040 :: Char

-- | The Egyptian hieroglyph <i>V040A</i> that renders as 𓎮.
pattern V040A :: Char

-- | The Egyptian hieroglyph <i>W001</i> that renders as 𓎯.
pattern W001 :: Char

-- | The Egyptian hieroglyph <i>W002</i> that renders as 𓎰.
pattern W002 :: Char

-- | The Egyptian hieroglyph <i>W003</i> that renders as 𓎱.
pattern W003 :: Char

-- | The Egyptian hieroglyph <i>W003A</i> that renders as 𓎲.
pattern W003A :: Char

-- | The Egyptian hieroglyph <i>W004</i> that renders as 𓎳.
pattern W004 :: Char

-- | The Egyptian hieroglyph <i>W005</i> that renders as 𓎴.
pattern W005 :: Char

-- | The Egyptian hieroglyph <i>W006</i> that renders as 𓎵.
pattern W006 :: Char

-- | The Egyptian hieroglyph <i>W007</i> that renders as 𓎶.
pattern W007 :: Char

-- | The Egyptian hieroglyph <i>W008</i> that renders as 𓎷.
pattern W008 :: Char

-- | The Egyptian hieroglyph <i>W009</i> that renders as 𓎸.
pattern W009 :: Char

-- | The Egyptian hieroglyph <i>W009A</i> that renders as 𓎹.
pattern W009A :: Char

-- | The Egyptian hieroglyph <i>W010</i> that renders as 𓎺.
pattern W010 :: Char

-- | The Egyptian hieroglyph <i>W010A</i> that renders as 𓎻.
pattern W010A :: Char

-- | The Egyptian hieroglyph <i>W011</i> that renders as 𓎼.
pattern W011 :: Char

-- | The Egyptian hieroglyph <i>W012</i> that renders as 𓎽.
pattern W012 :: Char

-- | The Egyptian hieroglyph <i>W013</i> that renders as 𓎾.
pattern W013 :: Char

-- | The Egyptian hieroglyph <i>W014</i> that renders as 𓎿.
pattern W014 :: Char

-- | The Egyptian hieroglyph <i>W014A</i> that renders as 𓏀.
pattern W014A :: Char

-- | The Egyptian hieroglyph <i>W015</i> that renders as 𓏁.
pattern W015 :: Char

-- | The Egyptian hieroglyph <i>W016</i> that renders as 𓏂.
pattern W016 :: Char

-- | The Egyptian hieroglyph <i>W017</i> that renders as 𓏃.
pattern W017 :: Char

-- | The Egyptian hieroglyph <i>W017A</i> that renders as 𓏄.
pattern W017A :: Char

-- | The Egyptian hieroglyph <i>W018</i> that renders as 𓏅.
pattern W018 :: Char

-- | The Egyptian hieroglyph <i>W018A</i> that renders as 𓏆.
pattern W018A :: Char

-- | The Egyptian hieroglyph <i>W019</i> that renders as 𓏇.
pattern W019 :: Char

-- | The Egyptian hieroglyph <i>W020</i> that renders as 𓏈.
pattern W020 :: Char

-- | The Egyptian hieroglyph <i>W021</i> that renders as 𓏉.
pattern W021 :: Char

-- | The Egyptian hieroglyph <i>W022</i> that renders as 𓏊.
pattern W022 :: Char

-- | The Egyptian hieroglyph <i>W023</i> that renders as 𓏋.
pattern W023 :: Char

-- | The Egyptian hieroglyph <i>W024</i> that renders as 𓏌.
pattern W024 :: Char

-- | The Egyptian hieroglyph <i>W024A</i> that renders as 𓏍.
pattern W024A :: Char

-- | The Egyptian hieroglyph <i>W025</i> that renders as 𓏎.
pattern W025 :: Char

-- | The Egyptian hieroglyph <i>X001</i> that renders as 𓏏.
pattern X001 :: Char

-- | The Egyptian hieroglyph <i>X002</i> that renders as 𓏐.
pattern X002 :: Char

-- | The Egyptian hieroglyph <i>X003</i> that renders as 𓏑.
pattern X003 :: Char

-- | The Egyptian hieroglyph <i>X004</i> that renders as 𓏒.
pattern X004 :: Char

-- | The Egyptian hieroglyph <i>X004A</i> that renders as 𓏓.
pattern X004A :: Char

-- | The Egyptian hieroglyph <i>X004B</i> that renders as 𓏔.
pattern X004B :: Char

-- | The Egyptian hieroglyph <i>X005</i> that renders as 𓏕.
pattern X005 :: Char

-- | The Egyptian hieroglyph <i>X006</i> that renders as 𓏖.
pattern X006 :: Char

-- | The Egyptian hieroglyph <i>X006A</i> that renders as 𓏗.
pattern X006A :: Char

-- | The Egyptian hieroglyph <i>X007</i> that renders as 𓏘.
pattern X007 :: Char

-- | The Egyptian hieroglyph <i>X008</i> that renders as 𓏙.
pattern X008 :: Char

-- | The Egyptian hieroglyph <i>X008A</i> that renders as 𓏚.
pattern X008A :: Char

-- | The Egyptian hieroglyph <i>Y001</i> that renders as 𓏛.
pattern Y001 :: Char

-- | The Egyptian hieroglyph <i>Y001A</i> that renders as 𓏜.
pattern Y001A :: Char

-- | The Egyptian hieroglyph <i>Y002</i> that renders as 𓏝.
pattern Y002 :: Char

-- | The Egyptian hieroglyph <i>Y003</i> that renders as 𓏞.
pattern Y003 :: Char

-- | The Egyptian hieroglyph <i>Y004</i> that renders as 𓏟.
pattern Y004 :: Char

-- | The Egyptian hieroglyph <i>Y005</i> that renders as 𓏠.
pattern Y005 :: Char

-- | The Egyptian hieroglyph <i>Y006</i> that renders as 𓏡.
pattern Y006 :: Char

-- | The Egyptian hieroglyph <i>Y007</i> that renders as 𓏢.
pattern Y007 :: Char

-- | The Egyptian hieroglyph <i>Y008</i> that renders as 𓏣.
pattern Y008 :: Char

-- | The Egyptian hieroglyph <i>Z001</i> that renders as 𓏤.
pattern Z001 :: Char

-- | The Egyptian hieroglyph <i>Z002</i> that renders as 𓏥.
pattern Z002 :: Char

-- | The Egyptian hieroglyph <i>Z002A</i> that renders as 𓏦.
pattern Z002A :: Char

-- | The Egyptian hieroglyph <i>Z002B</i> that renders as 𓏧.
pattern Z002B :: Char

-- | The Egyptian hieroglyph <i>Z002C</i> that renders as 𓏨.
pattern Z002C :: Char

-- | The Egyptian hieroglyph <i>Z002D</i> that renders as 𓏩.
pattern Z002D :: Char

-- | The Egyptian hieroglyph <i>Z003</i> that renders as 𓏪.
pattern Z003 :: Char

-- | The Egyptian hieroglyph <i>Z003A</i> that renders as 𓏫.
pattern Z003A :: Char

-- | The Egyptian hieroglyph <i>Z003B</i> that renders as 𓏬.
pattern Z003B :: Char

-- | The Egyptian hieroglyph <i>Z004</i> that renders as 𓏭.
pattern Z004 :: Char

-- | The Egyptian hieroglyph <i>Z004A</i> that renders as 𓏮.
pattern Z004A :: Char

-- | The Egyptian hieroglyph <i>Z005</i> that renders as 𓏯.
pattern Z005 :: Char

-- | The Egyptian hieroglyph <i>Z005A</i> that renders as 𓏰.
pattern Z005A :: Char

-- | The Egyptian hieroglyph <i>Z006</i> that renders as 𓏱.
pattern Z006 :: Char

-- | The Egyptian hieroglyph <i>Z007</i> that renders as 𓏲.
pattern Z007 :: Char

-- | The Egyptian hieroglyph <i>Z008</i> that renders as 𓏳.
pattern Z008 :: Char

-- | The Egyptian hieroglyph <i>Z009</i> that renders as 𓏴.
pattern Z009 :: Char

-- | The Egyptian hieroglyph <i>Z010</i> that renders as 𓏵.
pattern Z010 :: Char

-- | The Egyptian hieroglyph <i>Z011</i> that renders as 𓏶.
pattern Z011 :: Char

-- | The Egyptian hieroglyph <i>Z012</i> that renders as 𓏷.
pattern Z012 :: Char

-- | The Egyptian hieroglyph <i>Z013</i> that renders as 𓏸.
pattern Z013 :: Char

-- | The Egyptian hieroglyph <i>Z014</i> that renders as 𓏹.
pattern Z014 :: Char

-- | The Egyptian hieroglyph <i>Z015</i> that renders as 𓏺.
pattern Z015 :: Char

-- | The Egyptian hieroglyph <i>Z015A</i> that renders as 𓏻.
pattern Z015A :: Char

-- | The Egyptian hieroglyph <i>Z015B</i> that renders as 𓏼.
pattern Z015B :: Char

-- | The Egyptian hieroglyph <i>Z015C</i> that renders as 𓏽.
pattern Z015C :: Char

-- | The Egyptian hieroglyph <i>Z015D</i> that renders as 𓏾.
pattern Z015D :: Char

-- | The Egyptian hieroglyph <i>Z015E</i> that renders as 𓏿.
pattern Z015E :: Char

-- | The Egyptian hieroglyph <i>Z015F</i> that renders as 𓐀.
pattern Z015F :: Char

-- | The Egyptian hieroglyph <i>Z015G</i> that renders as 𓐁.
pattern Z015G :: Char

-- | The Egyptian hieroglyph <i>Z015H</i> that renders as 𓐂.
pattern Z015H :: Char

-- | The Egyptian hieroglyph <i>Z015I</i> that renders as 𓐃.
pattern Z015I :: Char

-- | The Egyptian hieroglyph <i>Z016</i> that renders as 𓐄.
pattern Z016 :: Char

-- | The Egyptian hieroglyph <i>Z016A</i> that renders as 𓐅.
pattern Z016A :: Char

-- | The Egyptian hieroglyph <i>Z016B</i> that renders as 𓐆.
pattern Z016B :: Char

-- | The Egyptian hieroglyph <i>Z016C</i> that renders as 𓐇.
pattern Z016C :: Char

-- | The Egyptian hieroglyph <i>Z016D</i> that renders as 𓐈.
pattern Z016D :: Char

-- | The Egyptian hieroglyph <i>Z016E</i> that renders as 𓐉.
pattern Z016E :: Char

-- | The Egyptian hieroglyph <i>Z016F</i> that renders as 𓐊.
pattern Z016F :: Char

-- | The Egyptian hieroglyph <i>Z016G</i> that renders as 𓐋.
pattern Z016G :: Char

-- | The Egyptian hieroglyph <i>Z016H</i> that renders as 𓐌.
pattern Z016H :: Char

-- | The Egyptian hieroglyph <i>AA001</i> that renders as 𓐍.
pattern AA001 :: Char

-- | The Egyptian hieroglyph <i>AA002</i> that renders as 𓐎.
pattern AA002 :: Char

-- | The Egyptian hieroglyph <i>AA003</i> that renders as 𓐏.
pattern AA003 :: Char

-- | The Egyptian hieroglyph <i>AA004</i> that renders as 𓐐.
pattern AA004 :: Char

-- | The Egyptian hieroglyph <i>AA005</i> that renders as 𓐑.
pattern AA005 :: Char

-- | The Egyptian hieroglyph <i>AA006</i> that renders as 𓐒.
pattern AA006 :: Char

-- | The Egyptian hieroglyph <i>AA007</i> that renders as 𓐓.
pattern AA007 :: Char

-- | The Egyptian hieroglyph <i>AA007A</i> that renders as 𓐔.
pattern AA007A :: Char

-- | The Egyptian hieroglyph <i>AA007B</i> that renders as 𓐕.
pattern AA007B :: Char

-- | The Egyptian hieroglyph <i>AA008</i> that renders as 𓐖.
pattern AA008 :: Char

-- | The Egyptian hieroglyph <i>AA009</i> that renders as 𓐗.
pattern AA009 :: Char

-- | The Egyptian hieroglyph <i>AA010</i> that renders as 𓐘.
pattern AA010 :: Char

-- | The Egyptian hieroglyph <i>AA011</i> that renders as 𓐙.
pattern AA011 :: Char

-- | The Egyptian hieroglyph <i>AA012</i> that renders as 𓐚.
pattern AA012 :: Char

-- | The Egyptian hieroglyph <i>AA013</i> that renders as 𓐛.
pattern AA013 :: Char

-- | The Egyptian hieroglyph <i>AA014</i> that renders as 𓐜.
pattern AA014 :: Char

-- | The Egyptian hieroglyph <i>AA015</i> that renders as 𓐝.
pattern AA015 :: Char

-- | The Egyptian hieroglyph <i>AA016</i> that renders as 𓐞.
pattern AA016 :: Char

-- | The Egyptian hieroglyph <i>AA017</i> that renders as 𓐟.
pattern AA017 :: Char

-- | The Egyptian hieroglyph <i>AA018</i> that renders as 𓐠.
pattern AA018 :: Char

-- | The Egyptian hieroglyph <i>AA019</i> that renders as 𓐡.
pattern AA019 :: Char

-- | The Egyptian hieroglyph <i>AA020</i> that renders as 𓐢.
pattern AA020 :: Char

-- | The Egyptian hieroglyph <i>AA021</i> that renders as 𓐣.
pattern AA021 :: Char

-- | The Egyptian hieroglyph <i>AA022</i> that renders as 𓐤.
pattern AA022 :: Char

-- | The Egyptian hieroglyph <i>AA023</i> that renders as 𓐥.
pattern AA023 :: Char

-- | The Egyptian hieroglyph <i>AA024</i> that renders as 𓐦.
pattern AA024 :: Char

-- | The Egyptian hieroglyph <i>AA025</i> that renders as 𓐧.
pattern AA025 :: Char

-- | The Egyptian hieroglyph <i>AA026</i> that renders as 𓐨.
pattern AA026 :: Char

-- | The Egyptian hieroglyph <i>AA027</i> that renders as 𓐩.
pattern AA027 :: Char

-- | The Egyptian hieroglyph <i>AA028</i> that renders as 𓐪.
pattern AA028 :: Char

-- | The Egyptian hieroglyph <i>AA029</i> that renders as 𓐫.
pattern AA029 :: Char

-- | The Egyptian hieroglyph <i>AA030</i> that renders as 𓐬.
pattern AA030 :: Char

-- | The Egyptian hieroglyph <i>AA031</i> that renders as 𓐭.
pattern AA031 :: Char

-- | The Egyptian hieroglyph <i>AA032</i> that renders as 𓐮.
pattern AA032 :: Char


-- | The emoji have 24 clock emoji, each time with 30 minutes difference.
module Data.Char.Emoji.Clock

-- | A <a>Clock</a> object that can be converted to a unicode character
--   that displays a clock with the given time. The <a>Clock</a> has an
--   <a>hours</a> field that contains the given hours between 0 and 12, and
--   a <a>minutes30</a> field that if <a>True</a>, means that the clock is
--   half past that hour.
data Clock

-- | The number of hours on the given clock. Is between 0 and 12. For 0,
--   the <a>minutes30</a> is <a>True</a>; and for 12, the <a>minutes30</a>
--   is <a>False</a>.
hours :: Clock -> Int

-- | Is <a>True</a> if it is half past the given hour on the <a>Clock</a>.
minutes30 :: Clock -> Bool

-- | Construct a <a>Clock</a> object with the given number of hours, and a
--   <a>Bool</a>ean that indicates if it is half past that hour. The
--   function will ensure that the hours are between 0 and 12 (both
--   inclusive). For half past 12, we use half past 0, for 12 hours, we use
--   simply 12.
clock :: Int -> Bool -> Clock

-- | Generate the <a>Clock</a> object that is the closest to the given
--   hours and minutes.
closestClock :: Int -> Int -> Clock
instance GHC.Show.Show Data.Char.Emoji.Clock.Clock
instance GHC.Read.Read Data.Char.Emoji.Clock.Clock
instance GHC.Classes.Ord Data.Char.Emoji.Clock.Clock
instance GHC.Generics.Generic Data.Char.Emoji.Clock.Clock
instance GHC.Classes.Eq Data.Char.Emoji.Clock.Clock
instance Data.Data.Data Data.Char.Emoji.Clock.Clock
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Clock.Clock
instance Control.DeepSeq.NFData Data.Char.Emoji.Clock.Clock
instance GHC.Enum.Bounded Data.Char.Emoji.Clock.Clock
instance GHC.Enum.Enum Data.Char.Emoji.Clock.Clock
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Clock.Clock
instance Data.Char.Core.UnicodeCharacter Data.Char.Emoji.Clock.Clock
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Clock.Clock


-- | A module that defines Emoji patterns.
module Data.Char.Emoji.Core

-- | Append the <a>EmojiSuffix</a> to the string-like value.
withEmojiSuffix :: (Semigroup s, IsString s) => s -> s

-- | A <a>Char</a>acter that is often used as a suffix to turn a character
--   into an emoji.
pattern EmojiSuffix :: Char


-- | The Unicode standard defines four emoji for the <a>O</a>, <a>B</a>,
--   <a>A</a>, and <a>AB</a> blood type.
module Data.Char.Emoji.BloodType

-- | A <a>BloodType</a> object used to convert to its unicode equivalent.
--   The <a>BloodType</a> is also seen as a 2-bit value with the leftmost
--   bit representing the presence of <i>A antigens</i> and the rightmost
--   the presence of <i>B antigens</i>.
data BloodType

-- | The <i>O blood type</i>, with no presence of A and B antigens, denoted
--   by 🅾️.
O :: BloodType

-- | The <i>B blood type</i>, with presence of the B antigen, denoted by
--   🅱️.
B :: BloodType

-- | The <i>A blood type</i>, with presence of the A antigen, denoted by
--   🅰️.
A :: BloodType

-- | The <i>AB blood type</i>, with presence of the A and B antigens,
--   denoted by 🆎.
AB :: BloodType

-- | A emoji that depicts a drop of blood. This looks like 🩸.
pattern DropOfBlood :: Char
instance GHC.Show.Show Data.Char.Emoji.BloodType.BloodType
instance GHC.Read.Read Data.Char.Emoji.BloodType.BloodType
instance GHC.Classes.Ord Data.Char.Emoji.BloodType.BloodType
instance GHC.Generics.Generic Data.Char.Emoji.BloodType.BloodType
instance GHC.Classes.Eq Data.Char.Emoji.BloodType.BloodType
instance GHC.Enum.Enum Data.Char.Emoji.BloodType.BloodType
instance Data.Data.Data Data.Char.Emoji.BloodType.BloodType
instance GHC.Enum.Bounded Data.Char.Emoji.BloodType.BloodType
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.BloodType.BloodType
instance GHC.Bits.Bits Data.Char.Emoji.BloodType.BloodType
instance Data.Hashable.Class.Hashable Data.Char.Emoji.BloodType.BloodType
instance Control.DeepSeq.NFData Data.Char.Emoji.BloodType.BloodType
instance Data.Char.Core.UnicodeText Data.Char.Emoji.BloodType.BloodType


-- | Unicode has two emoji to express male and/or female. These emoji are
--   also used as modifiers for other emoji.
module Data.Char.Emoji.Gender

-- | A data type to specify the <i>gender</i> of a person, animal, etc.
--   used in an emoji. The <a>BinaryGender</a> items are an instance of
--   <a>UnicodeText</a> that maps to the <i>female</i> and <i>male</i>
--   emoji. Often the corresponding codepoints are used to annotate
--   something as male/female.
data BinaryGender
Female :: BinaryGender
Male :: BinaryGender

-- | A data type that, besides <a>Male</a> and <a>Female</a> can also
--   represent a <a>Transgender</a>.
data Trigender

-- | Specify a <i>binary</i> gender which is <i>female</i> or <i>male</i>.
Binary :: BinaryGender -> Trigender

-- | A value that specifies a <i>transgender</i>, this is denoted with ⚧️.
Transgender :: Trigender
instance GHC.Show.Show Data.Char.Emoji.Gender.BinaryGender
instance GHC.Read.Read Data.Char.Emoji.Gender.BinaryGender
instance GHC.Classes.Ord Data.Char.Emoji.Gender.BinaryGender
instance GHC.Generics.Generic Data.Char.Emoji.Gender.BinaryGender
instance GHC.Classes.Eq Data.Char.Emoji.Gender.BinaryGender
instance GHC.Enum.Enum Data.Char.Emoji.Gender.BinaryGender
instance Data.Data.Data Data.Char.Emoji.Gender.BinaryGender
instance GHC.Enum.Bounded Data.Char.Emoji.Gender.BinaryGender
instance GHC.Show.Show Data.Char.Emoji.Gender.Trigender
instance GHC.Read.Read Data.Char.Emoji.Gender.Trigender
instance GHC.Classes.Ord Data.Char.Emoji.Gender.Trigender
instance GHC.Generics.Generic Data.Char.Emoji.Gender.Trigender
instance GHC.Classes.Eq Data.Char.Emoji.Gender.Trigender
instance Data.Data.Data Data.Char.Emoji.Gender.Trigender
instance GHC.Enum.Bounded Data.Char.Emoji.Gender.Trigender
instance GHC.Enum.Enum Data.Char.Emoji.Gender.Trigender
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Gender.Trigender
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Gender.Trigender
instance Control.DeepSeq.NFData Data.Char.Emoji.Gender.Trigender
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Gender.Trigender
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Gender.BinaryGender
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Gender.BinaryGender
instance Control.DeepSeq.NFData Data.Char.Emoji.Gender.BinaryGender
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Gender.BinaryGender


-- | Unicode has two types of emoji for the moon: it contains eight emoji
--   for the moonphase, and four emoji where the moon has a face.
module Data.Char.Emoji.Moon

-- | A data type that defines the eight different moon phases, and is an
--   instance of <a>UnicodeCharacter</a> to convert these to the
--   corresponding Unicode character.
data MoonPhase

-- | The <i>new moon</i>, the first phase of the moon represented by 🌑.
NewMoon :: MoonPhase

-- | The <i>waxing crescent</i>, the second phase of the moon represented
--   by 🌒.
WaxingCrescent :: MoonPhase

-- | The <i>first quarter</i>, the third phase of the moon represented by
--   🌓.
FirstQuarter :: MoonPhase

-- | The <i>waxing gibbous</i>, the fourth phase of the moon represented by
--   🌔.
WaxingGibbous :: MoonPhase

-- | The <i>full moon</i>, the fifth phase of the moon represented by 🌕.
FullMoon :: MoonPhase

-- | The <i>waning gibbous</i>, the sixth phase of the moon represented by
--   🌖.
WaningGibbous :: MoonPhase

-- | The <i>third quarter</i>, the seventh phase of the moon represented by
--   🌗.
ThirdQuarter :: MoonPhase

-- | The <i>waning crescent</i>, the eighth phase of the moon represented
--   by 🌘.
WaningCrescent :: MoonPhase

-- | A data type that defines the four different moon faces (not to be
--   confused with phases). This data type is an instance of the
--   <a>UnicodeCharacter</a> type class to convert these to the
--   corresponding Unicode character.
data MoonFace

-- | The <i>new moon</i>, the first phase of the moon faces represented by
--   🌚.
NewMoonFace :: MoonFace

-- | The <i>first quarter</i>, the second phase of the moon faces
--   represented by 🌛.
FirstQuarterFace :: MoonFace

-- | The <i>full moon</i>, the third phase of the moon faces represented by
--   🌝.
FullMoonFace :: MoonFace

-- | The <i>third quarter</i>, the fourth phase of the moon faces
--   represented by 🌜.
ThirdQuarterFace :: MoonFace

-- | Determine the corresponding MoonPhase emoji for a given day. The
--   algorithm is based on upon a subsystems publication
--   <a>https://www.subsystems.us/uploads/9/8/9/4/98948044/moonphase.pdf</a>
moonPhaseForDay :: Day -> MoonPhase
instance GHC.Show.Show Data.Char.Emoji.Moon.MoonPhase
instance GHC.Read.Read Data.Char.Emoji.Moon.MoonPhase
instance GHC.Classes.Ord Data.Char.Emoji.Moon.MoonPhase
instance GHC.Generics.Generic Data.Char.Emoji.Moon.MoonPhase
instance GHC.Classes.Eq Data.Char.Emoji.Moon.MoonPhase
instance GHC.Enum.Enum Data.Char.Emoji.Moon.MoonPhase
instance Data.Data.Data Data.Char.Emoji.Moon.MoonPhase
instance GHC.Enum.Bounded Data.Char.Emoji.Moon.MoonPhase
instance GHC.Show.Show Data.Char.Emoji.Moon.MoonFace
instance GHC.Read.Read Data.Char.Emoji.Moon.MoonFace
instance GHC.Classes.Ord Data.Char.Emoji.Moon.MoonFace
instance GHC.Generics.Generic Data.Char.Emoji.Moon.MoonFace
instance GHC.Classes.Eq Data.Char.Emoji.Moon.MoonFace
instance GHC.Enum.Enum Data.Char.Emoji.Moon.MoonFace
instance Data.Data.Data Data.Char.Emoji.Moon.MoonFace
instance GHC.Enum.Bounded Data.Char.Emoji.Moon.MoonFace
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Moon.MoonFace
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Moon.MoonFace
instance Data.Char.Core.MirrorVertical Data.Char.Emoji.Moon.MoonFace
instance Control.DeepSeq.NFData Data.Char.Emoji.Moon.MoonFace
instance Data.Char.Core.UnicodeCharacter Data.Char.Emoji.Moon.MoonFace
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Moon.MoonFace
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Moon.MoonPhase
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Moon.MoonPhase
instance Data.Char.Core.MirrorVertical Data.Char.Emoji.Moon.MoonPhase
instance Control.DeepSeq.NFData Data.Char.Emoji.Moon.MoonPhase
instance Data.Char.Core.UnicodeCharacter Data.Char.Emoji.Moon.MoonPhase
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Moon.MoonPhase


-- | Unicode has three codepoints that refer to characters of monkeys where
--   the first one does not see, the second does not hear, and the third
--   one does not speak.
module Data.Char.Emoji.NoEvilMonkey

-- | A data constructors that lists the three different <i>no-evil</i>
--   monkeys.
data NoEvilMonkey

-- | The <i>see-no-evil monkey</i>, denoted with 🙈.
SeeNoEvilMonkey :: NoEvilMonkey

-- | The <i>hear-no-evil monkey</i>, denoted with 🙉.
HearNoEvilMonkey :: NoEvilMonkey

-- | The <i>speak-no-evil monkey</i>, denoted with 🙊.
SpeakNoEvilMonkey :: NoEvilMonkey
instance GHC.Show.Show Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance GHC.Read.Read Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance GHC.Classes.Ord Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance GHC.Generics.Generic Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance GHC.Classes.Eq Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance GHC.Enum.Enum Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance Data.Data.Data Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance GHC.Enum.Bounded Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance Data.Hashable.Class.Hashable Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance Control.DeepSeq.NFData Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance Data.Char.Core.UnicodeCharacter Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey
instance Data.Char.Core.UnicodeText Data.Char.Emoji.NoEvilMonkey.NoEvilMonkey


-- | Unicode defines nine Emoji related to science. This module has a data
--   type together with functions to convert this to and from a text
--   fragment.
module Data.Char.Emoji.Science

-- | There are nine emoji that depict science.
data ScienceEmoji
Alembic :: ScienceEmoji

-- | A <i>test tube</i> is used to conduct chemical experiments. Normally
--   this is depicted as 🧪.
TestTube :: ScienceEmoji

-- | A <i>petri dish</i> is used to culture microbes. Normally this is
--   depicted as 🧫.
PetriDish :: ScienceEmoji

-- | A double helix of DNA is the genetic blueprint of life. Normally this
--   is depicted as 🧬.
DnaDoubleHelix :: ScienceEmoji

-- | A <i>microscope</i> is used to magnify small objects. Normally this is
--   depicted as 🔬.
Microscope :: ScienceEmoji

-- | A <i>telescope</i> is used to gaze at stars and planets in the night
--   sky. Normally this is depicted as 🔭.
Telescope :: ScienceEmoji

-- | A <i>dish satellite</i> is used to send and receive to or from
--   communication satellites. This is normally depicited as 📡.
SatelliteAntenna :: ScienceEmoji
instance GHC.Show.Show Data.Char.Emoji.Science.ScienceEmoji
instance GHC.Read.Read Data.Char.Emoji.Science.ScienceEmoji
instance GHC.Classes.Ord Data.Char.Emoji.Science.ScienceEmoji
instance GHC.Generics.Generic Data.Char.Emoji.Science.ScienceEmoji
instance GHC.Classes.Eq Data.Char.Emoji.Science.ScienceEmoji
instance GHC.Enum.Enum Data.Char.Emoji.Science.ScienceEmoji
instance Data.Data.Data Data.Char.Emoji.Science.ScienceEmoji
instance GHC.Enum.Bounded Data.Char.Emoji.Science.ScienceEmoji
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Science.ScienceEmoji
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Science.ScienceEmoji
instance Control.DeepSeq.NFData Data.Char.Emoji.Science.ScienceEmoji
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Science.ScienceEmoji


-- | For several emoji, one can specify the color of the skin of the
--   person(s) of the emoji. This module defines the skin color modifiers
--   together with its values on the Fitzpatrick scale.
module Data.Char.Emoji.SkinColor

-- | Some emoji deal with people. One can change the color of the skin with
--   the <a>SkinColorModifier</a>. For the skin color, the <a>/Fitzpatrick
--   scale/</a> is used. A numerical classification system for skin types.
data SkinColorModifier

-- | An emoji <i>modifier</i> that applies <i>Fitzpatrick skin type</i> one
--   or two to the Emoji.
Light :: SkinColorModifier

-- | An emoji <i>modifier</i> that applies <i>Fitzpatrick skin type</i>
--   three to the Emoji.
MediumLight :: SkinColorModifier

-- | An emoji <i>modifier</i> that applies <i>Fitzpatrick skin type</i>
--   four to the Emoji.
Medium :: SkinColorModifier

-- | An emoji <i>modifier</i> that applies <i>Fitzpatrick skin type</i>
--   five to the Emoji.
MediumDark :: SkinColorModifier

-- | An emoji <i>modifier</i> that applies <i>Fitzpatrick skin type</i> six
--   to the Emoji.
Dark :: SkinColorModifier

-- | For emoji often the skin color is optional: in case there is no skin
--   color specified, the emoji have often a <i>yellow</i> skin color.
type OptionalSkinColorModifier = Maybe SkinColorModifier

-- | Convert the given <i>Fitzpatrick skin type</i> to the corresponding
--   <a>SkinColorModifier</a> wrapped in a <a>Just</a>, if no such
--   <a>SkinColorModifier</a> exists, <a>Nothing</a> is returned.
fromFitzpatrick :: Integral i => i -> Maybe SkinColorModifier

-- | Check if the given <a>Char</a>acter is a skin color modifier.
isSkinColorModifier :: Char -> Bool

-- | A typeclass where one can specify that the object can be rendered with
--   a given <i>skin color modifier</i>.
class UnicodeText a => WithSkinColorModifierUnicodeText a

-- | Apply the given <a>SkinColorModifier</a> to the item and obtain a
--   <a>Text</a> object where the item has been modified with the
--   <a>SkinColorModifier</a>.
withSkinModifier :: WithSkinColorModifierUnicodeText a => a -> SkinColorModifier -> Text

-- | Apply the given <a>SkinColorModifier</a> to the item given it is not
--   <a>Nothing</a> such that the object is rendered with the given <i>skin
--   color modifier</i>.
withOptionalSkinModifier :: WithSkinColorModifierUnicodeText a => a -> OptionalSkinColorModifier -> Text

-- | Convert the given Text to an item with an
--   <a>OptionalSkinColorModifier</a> that might have been applied.
withoutOptionalSkinModifier :: WithSkinColorModifierUnicodeText a => Text -> Maybe (a, OptionalSkinColorModifier)

-- | Append the given <a>Text</a> object with the Unicode character to
--   modify its skin color.
withSkinModifier' :: Text -> SkinColorModifier -> Text

-- | Append the given <a>Text</a> object with the Unicode character to
--   modify its skin color. If <a>Nothing</a>, then no modification is
--   applied.
withOptionalSkinModifier' :: Text -> OptionalSkinColorModifier -> Text

-- | Convert the given <a>Text</a> object to a wrapped <a>Text</a> object
--   with an <a>OptionalSkinColorModifier</a>.
withoutOptionalSkinModifier' :: Text -> (Text, OptionalSkinColorModifier)

-- | The <a>SkinColorModifier</a> that corresponds to type one of the
--   /Fitzpatrick scale/.
pattern FitzpatrickI :: SkinColorModifier

-- | The <a>SkinColorModifier</a> that corresponds to type two of the
--   /Fitzpatrick scale/.
pattern FitzpatrickII :: SkinColorModifier

-- | The <a>SkinColorModifier</a> that corresponds to type three of the
--   /Fitzpatrick scale/.
pattern FitzpatrickIII :: SkinColorModifier

-- | The <a>SkinColorModifier</a> that corresponds to type four of the
--   /Fitzpatrick scale/.
pattern FitzpatrickIV :: SkinColorModifier

-- | The <a>SkinColorModifier</a> that corresponds to type five of the
--   /Fitzpatrick scale/.
pattern FitzpatrickV :: SkinColorModifier

-- | The <a>SkinColorModifier</a> that corresponds to type six of the
--   /Fitzpatrick scale/.
pattern FitzpatrickVI :: SkinColorModifier
instance GHC.Show.Show Data.Char.Emoji.SkinColor.SkinColorModifier
instance GHC.Read.Read Data.Char.Emoji.SkinColor.SkinColorModifier
instance GHC.Classes.Ord Data.Char.Emoji.SkinColor.SkinColorModifier
instance GHC.Generics.Generic Data.Char.Emoji.SkinColor.SkinColorModifier
instance GHC.Classes.Eq Data.Char.Emoji.SkinColor.SkinColorModifier
instance GHC.Enum.Enum Data.Char.Emoji.SkinColor.SkinColorModifier
instance Data.Data.Data Data.Char.Emoji.SkinColor.SkinColorModifier
instance GHC.Enum.Bounded Data.Char.Emoji.SkinColor.SkinColorModifier
instance Data.Traversable.Traversable Data.Char.Emoji.SkinColor.SkinModified
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Emoji.SkinColor.SkinModified a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Emoji.SkinColor.SkinModified a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Emoji.SkinColor.SkinModified a)
instance GHC.Generics.Generic1 Data.Char.Emoji.SkinColor.SkinModified
instance GHC.Generics.Generic (Data.Char.Emoji.SkinColor.SkinModified a)
instance GHC.Base.Functor Data.Char.Emoji.SkinColor.SkinModified
instance Data.Foldable.Foldable Data.Char.Emoji.SkinColor.SkinModified
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Emoji.SkinColor.SkinModified a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Emoji.SkinColor.SkinModified a)
instance Data.Char.Emoji.SkinColor.WithSkinColorModifierUnicodeText a => Data.Char.Core.UnicodeText (Data.Char.Emoji.SkinColor.SkinModified a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Emoji.SkinColor.SkinModified
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Emoji.SkinColor.SkinModified a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Emoji.SkinColor.SkinModified a)
instance GHC.Enum.Enum a => GHC.Enum.Enum (Data.Char.Emoji.SkinColor.SkinModified a)
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Emoji.SkinColor.SkinModified a)
instance Data.Functor.Classes.Eq1 Data.Char.Emoji.SkinColor.SkinModified
instance Data.Hashable.Class.Hashable1 Data.Char.Emoji.SkinColor.SkinModified
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.SkinColor.SkinColorModifier
instance Data.Hashable.Class.Hashable Data.Char.Emoji.SkinColor.SkinColorModifier
instance Control.DeepSeq.NFData Data.Char.Emoji.SkinColor.SkinColorModifier
instance Data.Char.Core.UnicodeCharacter Data.Char.Emoji.SkinColor.SkinColorModifier
instance Data.Char.Core.UnicodeText Data.Char.Emoji.SkinColor.SkinColorModifier


-- | Unicode has emoji's for hands. In this module we make it more
--   convenient to render hand gestures with a specific skin color.
module Data.Char.Emoji.Hand

-- | A datatype that constructs <i>hand gestures</i> that correspond with a
--   <i>single</i> <a>Char</a>acter.
data SingleCharHandGesture

-- | A waving hand, this is denoted with 👋.
WavingHand :: SingleCharHandGesture

-- | The raised back of a hand, this is denoted with 🤚.
RaisedBackOfHand :: SingleCharHandGesture

-- | A raised hand, this is denoted with ✋.
RaisedHand :: SingleCharHandGesture

-- | The <i>Vulcan</i> salute, this is denoted with 🖖.
VulcanSalute :: SingleCharHandGesture

-- | The okay hand sign, this is denoted with 👌.
OkHandSign :: SingleCharHandGesture

-- | The <i>pinched fingers</i> gesture, this is denoted with 🤌.
PinchedFingers :: SingleCharHandGesture

-- | The <i>pinching hand</i> gesture, this is denoted with 🤏.
PinchingHand :: SingleCharHandGesture

-- | The <i>crossed fingers</i> gesture, this is denoted with 🤞.
CrossedFingers :: SingleCharHandGesture

-- | The <i>love you</i> gesture, this is denoted with 🤟.
LoveYouGesture :: SingleCharHandGesture

-- | The sign of the horns, this is denoted with 🤘.
SignOfTheHorns :: SingleCharHandGesture

-- | The <i>call me</i> hand sign, this is denoted with 🤙.
CallMeHand :: SingleCharHandGesture

-- | Emoji with hands that map on a <i>sequence</i> of characters instead
--   of one character.
data MultiCharHandGesture

-- | A pattern synonym for <a>CrossedFingers</a>.
pattern FingersCrossed :: SingleCharHandGesture

-- | A pattern synonym for the <a>VulcanSalute</a>.
pattern SpockHand :: SingleCharHandGesture

-- | A pattern synonym for <a>SignOfTheHorns</a>.
pattern HornsSign :: SingleCharHandGesture
instance GHC.Show.Show Data.Char.Emoji.Hand.SingleCharHandGesture
instance GHC.Read.Read Data.Char.Emoji.Hand.SingleCharHandGesture
instance GHC.Classes.Ord Data.Char.Emoji.Hand.SingleCharHandGesture
instance GHC.Generics.Generic Data.Char.Emoji.Hand.SingleCharHandGesture
instance GHC.Classes.Eq Data.Char.Emoji.Hand.SingleCharHandGesture
instance GHC.Enum.Enum Data.Char.Emoji.Hand.SingleCharHandGesture
instance Data.Data.Data Data.Char.Emoji.Hand.SingleCharHandGesture
instance GHC.Enum.Bounded Data.Char.Emoji.Hand.SingleCharHandGesture
instance GHC.Show.Show Data.Char.Emoji.Hand.MultiCharHandGesture
instance GHC.Read.Read Data.Char.Emoji.Hand.MultiCharHandGesture
instance GHC.Classes.Ord Data.Char.Emoji.Hand.MultiCharHandGesture
instance GHC.Generics.Generic Data.Char.Emoji.Hand.MultiCharHandGesture
instance GHC.Classes.Eq Data.Char.Emoji.Hand.MultiCharHandGesture
instance GHC.Enum.Enum Data.Char.Emoji.Hand.MultiCharHandGesture
instance Data.Data.Data Data.Char.Emoji.Hand.MultiCharHandGesture
instance GHC.Enum.Bounded Data.Char.Emoji.Hand.MultiCharHandGesture
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Hand.MultiCharHandGesture
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Hand.MultiCharHandGesture
instance Control.DeepSeq.NFData Data.Char.Emoji.Hand.MultiCharHandGesture
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Hand.MultiCharHandGesture
instance Data.Char.Emoji.SkinColor.WithSkinColorModifierUnicodeText Data.Char.Emoji.Hand.MultiCharHandGesture
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Hand.SingleCharHandGesture
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Hand.SingleCharHandGesture
instance Control.DeepSeq.NFData Data.Char.Emoji.Hand.SingleCharHandGesture
instance Data.Char.Core.UnicodeCharacter Data.Char.Emoji.Hand.SingleCharHandGesture
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Hand.SingleCharHandGesture
instance Data.Char.Emoji.SkinColor.WithSkinColorModifierUnicodeText Data.Char.Emoji.Hand.SingleCharHandGesture


-- | Unicode has emojis for the twelve zodiac signs. In this module a data
--   type is used to present the zodiac emoji and also defines pattern
--   synonyms for these.
module Data.Char.Emoji.Zodiac

-- | A data type to deal with the <i>zodiac sign</i> emoji. The data type
--   lists the different zodiac signs as data constructors, and the
--   instance of the <a>UnicodeCharacter</a> allows to convert it from and
--   to a <a>Char</a>acter.
data Zodiac

-- | The <i>aries</i> zodiac sign, <i>ram</i> in English, is denoted as ♈.
Aries :: Zodiac

-- | The <i>taurus</i> zodiac sign, <i>bull</i> in English, is denoted as
--   ♉.
Taurus :: Zodiac

-- | The <i>gemini</i> zodiac sign, <i>twins</i> in English, is denoted as
--   ♊.
Gemini :: Zodiac

-- | The <i>cancer</i> zodiac sign, <i>crab</i> in English, is denoted as
--   ♋.
Cancer :: Zodiac

-- | The <i>leo</i> zodiac sign, <i>lion</i> in English, is denoted as ♌.
Leo :: Zodiac

-- | The <i>virgo</i> zodiac sign, <i>maiden</i> in English, is denoted as
--   ♍.
Virgo :: Zodiac

-- | The <i>libra</i> zodiac sign, <i>scales</i> in English, is denoted as
--   ♎.
Libra :: Zodiac

-- | The <i>scorpio</i> zodiac sign, <i>scorpion</i> in English, is denoted
--   as ♏.
Scorpio :: Zodiac

-- | The <i>saggitarius</i> zodiac sign, <i>archer</i> in English, is
--   denoted as ♐.
Sagittarius :: Zodiac

-- | The <i>capricorn</i> zodiac sign, <i>sea-goat</i> in English, is
--   denoted as ♑.
Capricorn :: Zodiac

-- | The <i>aquarius</i> zodiac sign, <i>water-bearer</i> in English, is
--   denoted as ♒.
Aquarius :: Zodiac

-- | The <i>pices</i> zodiac sign, <i>fish</i> in English, is denoted as ♓.
Pisces :: Zodiac

-- | The English name for the <a>Aries</a> zodiac sign.
pattern Ram :: Zodiac

-- | The English name for the <a>Taurus</a> zodiac sign.
pattern Bull :: Zodiac

-- | The English name for the <a>Gemini</a> zodiac sign.
pattern Twins :: Zodiac

-- | The English name for the <a>Cancer</a> zodiac sign.
pattern Crab :: Zodiac

-- | The English name for the <a>Leo</a> zodiac sign.
pattern Lion :: Zodiac

-- | The English name for the <a>Virgo</a> zodiac sign.
pattern Maiden :: Zodiac

-- | The English name for the <a>Libra</a> zodiac sign.
pattern Scales :: Zodiac

-- | The name of the constellation of the <a>Scorpio</a> zodiac sign.
pattern Scorpius :: Zodiac

-- | The English name for the <a>Scorpio</a> zodiac sign.
pattern Scorpion :: Zodiac

-- | An English name for the <a>Sagittarius</a> zodiac sign.
pattern Centaur :: Zodiac

-- | An English name for the <a>Sagittarius</a> zodiac sign.
pattern Archer :: Zodiac

-- | The name of the constellation of the <a>Capricorn</a> zodiac sign.
pattern Capricornus :: Zodiac

-- | An English name for the <a>Capricorn</a> zodiac sign.
pattern MountainGoat :: Zodiac

-- | An English name for the <a>Capricorn</a> zodiac sign.
pattern GoatHorned :: Zodiac

-- | An English name for the <a>Capricorn</a> zodiac sign.
pattern SeaGoat :: Zodiac

-- | The English name for the <a>Aquarius</a> zodiac sign.
pattern WaterBearer :: Zodiac

-- | The English name for the <a>Pisces</a> zodiac sign.
pattern Fish :: Zodiac
instance GHC.Show.Show Data.Char.Emoji.Zodiac.Zodiac
instance GHC.Read.Read Data.Char.Emoji.Zodiac.Zodiac
instance GHC.Classes.Ord Data.Char.Emoji.Zodiac.Zodiac
instance GHC.Generics.Generic Data.Char.Emoji.Zodiac.Zodiac
instance GHC.Classes.Eq Data.Char.Emoji.Zodiac.Zodiac
instance GHC.Enum.Enum Data.Char.Emoji.Zodiac.Zodiac
instance Data.Data.Data Data.Char.Emoji.Zodiac.Zodiac
instance GHC.Enum.Bounded Data.Char.Emoji.Zodiac.Zodiac
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Zodiac.Zodiac
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Zodiac.Zodiac
instance Control.DeepSeq.NFData Data.Char.Emoji.Zodiac.Zodiac
instance Data.Char.Core.UnicodeCharacter Data.Char.Emoji.Zodiac.Zodiac
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Zodiac.Zodiac


-- | Unicode defines two blocks of enclosed alphanumerical characters. The
--   <a>U2460 block</a>, and the <a>1F100 block</a>. This module aims to
--   make it more convenient to map numbers, upper case and lower case
--   values to their corresponding enclosed characters.
module Data.Char.Enclosed

-- | Convert the given number to a <a>Char</a>acter where the number is
--   succeeded by a comma (<tt>,</tt>). The result is wrapped in a
--   <a>Just</a> data constructor. If the given number is outside the
--   <tt>0-9</tt> range, <a>Nothing</a> is returned.
numberWithComma :: Int -> Maybe Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   succeeded by a comma (<tt>,</tt>). If the given number is outside the
--   <tt>0-9</tt> range, the result is unspecified.
numberWithComma' :: Int -> Char

-- | Convert the given upper case or lower case <a>Char</a>acter to a
--   character that is circled. The result is wrapped in a <a>Just</a> data
--   constructor. If the value is outside the <tt>A-Z,a-z</tt> range,
--   <a>Nothing</a> is returned.
circledAlpha :: Char -> Maybe Char

-- | Convert the given upper case or lower case <a>Char</a>acter to a
--   character that is circled. If the value is outside the
--   <tt>A-Z,a-z</tt> range, the result is unspecified.
circledAlpha' :: Char -> Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   circled wrapped in a <a>Just</a>. This works for numbers in the
--   <tt>0-20</tt> range. For numbers outside this range <a>Nothing</a> is
--   returned.
circledNumber :: Int -> Maybe Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   circled. This works for numbers in the <tt>0-20</tt> range. For
--   numbers outside this range, the behavior is unspecified.
circledNumber' :: Int -> Char

-- | Convert the given upper case or lower case <a>Char</a>acter to a
--   <a>Char</a>acter where it is parenthesized. The result is wrapped in a
--   <a>Just</a> data constructor. If the value is outside the
--   <tt>A-Z,a-z</tt> range, <a>Nothing</a> is returned.
parenthesizedAlpha :: Char -> Maybe Char

-- | Convert the given upper case or lower case character to a
--   <a>Char</a>acter where it is parenthesized. If the value is outside
--   the <tt>A-Z,a-z</tt> range, the result is unspecified.
parenthesizedAlpha' :: Char -> Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   parenthesized wrapped in a <a>Just</a> data constructor. If the number
--   is outside the <tt>1-20</tt> range, <a>Nothing</a> is returned.
parenthesizedNumber :: Int -> Maybe Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   parenthesized. If the number is outside the <tt>1-20</tt> range, the
--   result is unspecified.
parenthesizedNumber' :: Int -> Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   succeeded by a period (<tt>.</tt>) wrapped in a <a>Just</a> data
--   constructor. If the number is outside the <tt>0-20</tt> range,
--   <a>Nothing</a> is returned.
numberWithPeriod :: Int -> Maybe Char

-- | Convert the given number to <a>Char</a>acter where the number is
--   succeeded by a period (<tt>.</tt>). If the number is outside the
--   <tt>0-20</tt> range, the result is unspecified.
numberWithPeriod' :: Int -> Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   double circled. The result is wrapped in a <a>Just</a> data
--   constructor. If the given number is outside the <tt>1-10</tt> range,
--   <a>Nothing</a> is returned.
doubleCircledNumber :: Int -> Maybe Char

-- | Convert the given number to a <a>Char</a>acter where the number is
--   double circled. If the given number is outside the <tt>1-10</tt>
--   range, the result is unspecified.
doubleCircledNumber' :: Int -> Char

-- | Convert the given upper case character to a regional indicator
--   character. The result is wrapped in a <a>Just</a> data constructor. If
--   the value is outside the <tt>A-Z</tt> range, <a>Nothing</a> is
--   returned. The regional indicators are used for flag emojis. Two
--   consecutive regional indicators that together form an ISO 63166
--   Alpha-2 code, then this will result in the corresponding flag Emoji.
--   Deprecated countries like the Soviet Union (SU) and Yugoslavia (YU) do
--   not have a flag emoji. Antarctica (AQ), the European Union (EU) and
--   the United Nations (UN) have a flag emoji.
regionalIndicatorUppercase :: Char -> Maybe Char

-- | Convert the given upper case character to a regional indicator
--   character. If the value is outside the <tt>A-Z</tt> range, the result
--   is unspecified.
--   
--   The regional indicators are used for flag emojis. Two consecutive
--   regional indicators that together form an ISO 63166 Alpha-2 code, then
--   this will result in the corresponding flag Emoji. Deprecated countries
--   like the Soviet Union (SU) and Yugoslavia (YU) do not have a flag
--   emoji. Antarctica (AQ), the European Union (EU) and the United Nations
--   (UN) have a flag emoji.
regionalIndicatorUppercase' :: Char -> Char

-- | Convert the given upper case character to a <a>Char</a>acter where it
--   is squared (put in a square box). The result is wrapped in a
--   <a>Just</a> data constructor. If the value is outside the <tt>A-Z</tt>
--   range, <a>Nothing</a> is returned.
squaredUppercase :: Char -> Maybe Char

-- | Convert the given upper case character to a <a>Char</a>acter where it
--   is squared (put in a square box). If the value is outside the
--   <tt>A-Z</tt> range, the result is unspecified.
squaredUppercase' :: Char -> Char

-- | Convert the given upper case character to a character where the
--   character is written in white on a black circle. The result is wrapped
--   in a <a>Just</a> data constructor. If the given value is outside the
--   <tt>A-Z</tt> range, <a>Nothing</a> is returned.
whiteOnBlackCircledUppercase :: Char -> Maybe Char

-- | Convert the given upper case character to a character where the
--   character is written in white on a black circle. If the given value is
--   outside the <tt>A-Z</tt> range, the result is unspecified.
whiteOnBlackCircledUppercase' :: Char -> Char

-- | Convert the given upper case character to a character where the
--   character is written in white on a black square. The result is wrapped
--   in a <a>Just</a> data constructor. If the given value is outside the
--   <tt>A-Z</tt> range, <a>Nothing</a> is returned.
whiteOnBlackSquaredUppercase :: Char -> Maybe Char

-- | Convert the given upper case character to a character where the
--   character is written in white on a black square. If the given value is
--   outside the <tt>A-Z</tt> range, the result is unspecified.
whiteOnBlackSquaredUppercase' :: Char -> Char

-- | Convert the given number to a character where the number is written in
--   white on a black circle. The result is wrapped in a <a>Just</a> data
--   constructor. If the given value is outside the <tt>0,11-20</tt> range,
--   <a>Nothing</a> is returned.
numberWhiteOnBlackCircle :: Int -> Maybe Char

-- | Convert the given number to a character where the number is written in
--   white on a black circle. If the given value is outside the
--   <tt>0,11-20</tt> range, the result is unspecified.
numberWhiteOnBlackCircle' :: Int -> Char


-- | A module that defines the <i>flag</i> emoji. There are basically three
--   types of flags: flags for nations, flags for subnations (like England,
--   Scotland and Wales); and <a>ExtraFlag</a>s that contain a list of
--   flags used for occassions and political purposes.
module Data.Char.Emoji.Flag

-- | A data type that stores a (country) flag by the two characters of the
--   ISO 3166 Alpa-2 standard. The data constructor is hidden to prevent
--   making flags with a combination of characters that is invalid. Besides
--   the countries defined in the ISO-3166 Alpha-2 standard, only the
--   Antarctica (AQ), the European Union (EU) and the United Nations (UN)
--   have a flag. Deprecated territories like the Soviet Union (SU) and
--   Yugoslavia (YU) have no corresponding flag.
data Flag

-- | Convert the given two characters that represent a flag according to
--   the ISO 3166 Alpha-2 standard to a <a>Flag</a> wrapped in a
--   <a>Just</a> data constructor, if that flag exists; <a>Nothing</a>
--   otherwise. One can pass characters in upper case (<tt>A-Z</tt>) and
--   lower case (<tt>a-z</tt>). The flag will hold the upper case variant.
--   The Emoji have flags for the countries defined by the ISO 3166 Alpha-2
--   standard without deprecated regions like the Soviet Union (SU) and
--   Yugoslavia (YU). Furthermore there are Emoji for the flags of
--   Antarctica (AQ), the European Union (EU) and the United Nations (UN).
flag :: Char -> Char -> Maybe Flag

-- | Convert the given two characters that represent a flag according to
--   the ISO 3166 Alpha-2 standard to a <a>Flag</a>. If the flag does not
--   exists, then the result is unspecified. One can pass characters in
--   upper case (<tt>A-Z</tt>) and lower case (<tt>a-z</tt>). The flag will
--   hold the upper case variant. The Emoji have flags for the countries
--   defined by the ISO 3166 Alpha-2 standard without deprecated regions
--   like the Soviet Union (SU) and Yugoslavia (YU). Furthermore there are
--   Emoji for the flags of Antarctica (AQ), the European Union (EU) and
--   the United Nations (UN).
flag' :: Char -> Char -> Flag

-- | Obtain the two-characters that specify the given <a>Flag</a>. These
--   two characters are always upper case (<tt>A-Z</tt>).
flagChars :: Flag -> (Char, Char)

-- | Convert the given two <a>Char</a>acters of the ISO3166-1 Alpha-2
--   standard to an Emoji that renders the flag of the corresponding
--   country or terroitory wrapped in a <a>Just</a> data constructor.
--   Deprecated regions, such as SU (Soviet Union) and YU (Yugoslavia) have
--   no flag. The European Union (EU), Antarctica (AQ) and United Nations
--   (UN) are included as marcoregion flags. If the flag does not exists,
--   <a>Nothing</a> is returned.
iso3166Alpha2ToFlag :: Char -> Char -> Maybe Text

-- | Convert the given two <a>Char</a>acters of the ISO3166-1 Alpha-2
--   standard to an Emoji that renders the flag of the corresponding
--   country or terroitory. Deprecated regions, such as SU (Soviet Union)
--   and YU (Yugoslavia) have no flag. The European Union (EU), Antarctica
--   (AQ) and United Nations (UN) are included as marcoregion flags. This
--   function does not check if the two characters map to a valid flag
--   token.
iso3166Alpha2ToFlag' :: Char -> Char -> Text

-- | Check if for the given two <a>Char</a>acters, a flag emoji exists. The
--   two character combinations for which a flag exist are defined in the
--   ISO3166-1 Alpha-2 standard where deprecated reagions, such as SU and
--   YU have no flag, and the European Union (EU), Antarctica (AQ), and the
--   United Nations (UN) have a flag. The characters can be upper case
--   (<tt>A-Z</tt>) or lower case (<tt>a-z</tt>).
validFlagEmoji :: Char -> Char -> Bool

-- | A data type to store a subregion flag. This is specified by the
--   <i>parent</i> flag, and three characters of the subregion. At the
--   moment, the only three subregional flags are <i>England</i> (eng),
--   <i>Scotland</i> (sct) and <i>Wales</i> (wls), all beloning under the
--   <i>United Kingdom</i> flag (GB). The data constructor is made private
--   to prevent making non-existing subflags.
data SubFlag

-- | A data type to represent additional non-regional flags defined by the
--   Unicode standard.
data ExtraFlag

-- | A flag with black and white square like in a checkerboard pattern.
--   These are often used to signal the start or end of a car race. This is
--   rendered as 🏁.
ChequeredFlag :: ExtraFlag

-- | A triangular flag that is often used for golf. This is rendered as 🚩.
TriangularFlagOnPost :: ExtraFlag

-- | This emoji depicts two <i>Japanese</i> flags crossed at the base.
--   Older versions of Samsung use two South Korean flags. This is rendered
--   as 🎌.
CrossedFlags :: ExtraFlag

-- | A waving black flag. This is rendered as 🏴.
BlackFlag :: ExtraFlag

-- | A waving white flag. This is often used as a sign of <i>surrender</i>.
--   This is rendered as 🏳️.
WavingWhiteFlag :: ExtraFlag

-- | A flag with six colors of the rainbow that usually include red,
--   orange, yellow, green, blue and purple. This is rendered as 🏳️‍🌈.
RainbowFlag :: ExtraFlag

-- | A flag with horizontal pale blue and pale pink stripes and a single
--   white stripe in the middle. This is used as a <i>transgender</i> pride
--   flag. This is rendered as 🏳️‍⚧️.
TransgenderFlag :: ExtraFlag

-- | A <i>skull and crossbones</i> displayed on a black flag. On pirate
--   ships this is known as the Jolly Roger. This is rendered as 🏴‍☠️.
PirateFlag :: ExtraFlag

-- | The <a>Flag</a> pattern used for <i>Ascension Island</i> denoted with
--   <i>AC</i>.
pattern AC :: Flag

-- | The <a>Flag</a> pattern used for <i>Andorra</i> denoted with
--   <i>AD</i>.
pattern AD :: Flag

-- | The <a>Flag</a> pattern used for the <i>United Arab Emirates</i>
--   denoted with <i>AE</i>.
pattern AE :: Flag

-- | The <a>Flag</a> pattern used for <i>Afghanistan</i> denoted with
--   <i>AF</i>.
pattern AF :: Flag

-- | The <a>Flag</a> pattern used for <i>Antigua &amp; Barbuda</i> denoted
--   with <i>AG</i>.
pattern AG :: Flag

-- | The <a>Flag</a> pattern used for <i>Anguilla</i> denoted with
--   <i>AI</i>.
pattern AI :: Flag

-- | The <a>Flag</a> pattern used for <i>Albania</i> denoted with
--   <i>AL</i>.
pattern AL :: Flag

-- | The <a>Flag</a> pattern used for <i>Armenia</i> denoted with
--   <i>AM</i>.
pattern AM :: Flag

-- | The <a>Flag</a> pattern used for <i>Angola</i> denoted with <i>AO</i>.
pattern AO :: Flag

-- | The <a>Flag</a> pattern used for <i>Antarctica</i> denoted with
--   <i>AQ</i>.
pattern AQ :: Flag

-- | The <a>Flag</a> pattern used for <i>Argentina</i> denoted with
--   <i>AR</i>.
pattern AR :: Flag

-- | The <a>Flag</a> pattern used for <i>American Samoa</i> denoted with
--   <i>AS</i>.
pattern AS :: Flag

-- | The <a>Flag</a> pattern used for <i>Austria</i> denoted with
--   <i>AT</i>.
pattern AT :: Flag

-- | The <a>Flag</a> pattern used for <i>Australia</i> denoted with
--   <i>AU</i>.
pattern AU :: Flag

-- | The <a>Flag</a> pattern used for <i>Aruba</i> denoted with <i>AW</i>.
pattern AW :: Flag

-- | The <a>Flag</a> pattern used for the <i>Åland Islands</i> denoted with
--   <i>AX</i>.
pattern AX :: Flag

-- | The <a>Flag</a> pattern used for <i>Azerbaijan</i> denoted with
--   <i>AZ</i>.
pattern AZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Bosnia &amp; Herzegovina</i>
--   denoted with <i>BA</i>.
pattern BA :: Flag

-- | The <a>Flag</a> pattern used for <i>Barbados</i> denoted with
--   <i>BB</i>.
pattern BB :: Flag

-- | The <a>Flag</a> pattern used for <i>Bangladesh</i> denoted with
--   <i>BD</i>.
pattern BD :: Flag

-- | The <a>Flag</a> pattern used for <i>Belgium</i> denoted with
--   <i>BE</i>.
pattern BE :: Flag

-- | The <a>Flag</a> pattern used for <i>Burkina Faso</i> denoted with
--   <i>BF</i>.
pattern BF :: Flag

-- | The <a>Flag</a> pattern used for <i>Bulgaria</i> denoted with
--   <i>BG</i>.
pattern BG :: Flag

-- | The <a>Flag</a> pattern used for <i>Bahrain</i> denoted with
--   <i>BH</i>.
pattern BH :: Flag

-- | The <a>Flag</a> pattern used for <i>Burundi</i> denoted with
--   <i>BI</i>.
pattern BI :: Flag

-- | The <a>Flag</a> pattern used for <i>Benin</i> denoted with <i>BJ</i>.
pattern BJ :: Flag

-- | The <a>Flag</a> pattern used for <i>St. Barthélemy</i> denoted with
--   <i>BL</i>.
pattern BL :: Flag

-- | The <a>Flag</a> pattern used for <i>Bermuda</i> denoted with
--   <i>BM</i>.
pattern BM :: Flag

-- | The <a>Flag</a> pattern used for <i>Brunei</i> denoted with <i>BN</i>.
pattern BN :: Flag

-- | The <a>Flag</a> pattern used for <i>Bolivia</i> denoted with
--   <i>BO</i>.
pattern BO :: Flag

-- | The <a>Flag</a> pattern used for the <i>Caribbean Netherlands</i>
--   denoted with <i>BQ</i>.
pattern BQ :: Flag

-- | The <a>Flag</a> pattern used for <i>Brazil</i> denoted with <i>BR</i>.
pattern BR :: Flag

-- | The <a>Flag</a> pattern used for the <i>Bahamas</i> denoted with
--   <i>BS</i>.
pattern BS :: Flag

-- | The <a>Flag</a> pattern used for <i>Bhutan</i> denoted with <i>BT</i>.
pattern BT :: Flag

-- | The <a>Flag</a> pattern used for <i>Bouvet Island</i> denoted with
--   <i>BV</i>.
pattern BV :: Flag

-- | The <a>Flag</a> pattern used for <i>Botswana</i> denoted with
--   <i>BW</i>.
pattern BW :: Flag

-- | The <a>Flag</a> pattern used for <i>Belarus</i> denoted with
--   <i>BY</i>.
pattern BY :: Flag

-- | The <a>Flag</a> pattern used for <i>Belize</i> denoted with <i>BZ</i>.
pattern BZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Canada</i> denoted with <i>CA</i>.
pattern CA :: Flag

-- | The <a>Flag</a> pattern used for the <i>Cocos (Keeling) Islands</i>
--   denoted with <i>CC</i>.
pattern CC :: Flag

-- | The <a>Flag</a> pattern used for <i>Congo - Kinshasa</i> denoted with
--   <i>CD</i>.
pattern CD :: Flag

-- | The <a>Flag</a> pattern used for <i>Central African Republic</i>
--   denoted with <i>CF</i>.
pattern CF :: Flag

-- | The <a>Flag</a> pattern used for <i>Congo - Brazzaville</i> denoted
--   with <i>CG</i>.
pattern CG :: Flag

-- | The <a>Flag</a> pattern used for <i>Switzerland</i> denoted with
--   <i>CH</i>.
pattern CH :: Flag

-- | The <a>Flag</a> pattern used for <i>Côte d’Ivoire</i> denoted with
--   <i>CI</i>.
pattern CI :: Flag

-- | The <a>Flag</a> pattern used for the <i>Cook Islands</i> denoted with
--   <i>CK</i>.
pattern CK :: Flag

-- | The <a>Flag</a> pattern used for <i>Chile</i> denoted with <i>CL</i>.
pattern CL :: Flag

-- | The <a>Flag</a> pattern used for <i>Cameroon</i> denoted with
--   <i>CM</i>.
pattern CM :: Flag

-- | The <a>Flag</a> pattern used for <i>China</i> denoted with <i>CN</i>.
pattern CN :: Flag

-- | The <a>Flag</a> pattern used for <i>Colombia</i> denoted with
--   <i>CO</i>.
pattern CO :: Flag

-- | The <a>Flag</a> pattern used for <i>Clipperton Island</i> denoted with
--   <i>CP</i>.
pattern CP :: Flag

-- | The <a>Flag</a> pattern used for <i>Costa Rica</i> denoted with
--   <i>CR</i>.
pattern CR :: Flag

-- | The <a>Flag</a> pattern used for <i>Cuba</i> denoted with <i>CU</i>.
pattern CU :: Flag

-- | The <a>Flag</a> pattern used for <i>Cape Verde</i> denoted with
--   <i>CV</i>.
pattern CV :: Flag

-- | The <a>Flag</a> pattern used for <i>Curaçao</i> denoted with
--   <i>CW</i>.
pattern CW :: Flag

-- | The <a>Flag</a> pattern used for <i>Christmas Island</i> denoted with
--   <i>CX</i>.
pattern CX :: Flag

-- | The <a>Flag</a> pattern used for <i>Cyprus</i> denoted with <i>CY</i>.
pattern CY :: Flag

-- | The <a>Flag</a> pattern used for <i>Czechia</i> denoted with
--   <i>CZ</i>.
pattern CZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Germany</i> denoted with
--   <i>DE</i>.
pattern DE :: Flag

-- | The <a>Flag</a> pattern used for <i>Diego Garcia</i> denoted with
--   <i>DG</i>.
pattern DG :: Flag

-- | The <a>Flag</a> pattern used for <i>Djibouti</i> denoted with
--   <i>DJ</i>.
pattern DJ :: Flag

-- | The <a>Flag</a> pattern used for <i>Denmark</i> denoted with
--   <i>DK</i>.
pattern DK :: Flag

-- | The <a>Flag</a> pattern used for <i>Dominica</i> denoted with
--   <i>DM</i>.
pattern DM :: Flag

-- | The <a>Flag</a> pattern used for <i>Dominican Republic</i> denoted
--   with <i>DO</i>.
pattern DO :: Flag

-- | The <a>Flag</a> pattern used for <i>Algeria</i> denoted with
--   <i>DZ</i>.
pattern DZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Ceuta &amp; Melilla</i> denoted
--   with <i>EA</i>.
pattern EA :: Flag

-- | The <a>Flag</a> pattern used for <i>Ecuador</i> denoted with
--   <i>EC</i>.
pattern EC :: Flag

-- | The <a>Flag</a> pattern used for <i>Estonia</i> denoted with
--   <i>EE</i>.
pattern EE :: Flag

-- | The <a>Flag</a> pattern used for <i>Egypt</i> denoted with <i>EG</i>.
pattern EG :: Flag

-- | The <a>Flag</a> pattern used for <i>Western Sahara</i> denoted with
--   <i>EH</i>.
pattern EH :: Flag

-- | The <a>Flag</a> pattern used for <i>Eritrea</i> denoted with
--   <i>ER</i>.
pattern ER :: Flag

-- | The <a>Flag</a> pattern used for <i>Spain</i> denoted with <i>ES</i>.
pattern ES :: Flag

-- | The <a>Flag</a> pattern used for <i>Ethiopia</i> denoted with
--   <i>ET</i>.
pattern ET :: Flag

-- | The <a>Flag</a> pattern used for the <i>European Union</i> denoted
--   with <i>EU</i>.
pattern EU :: Flag

-- | The <a>Flag</a> pattern used for <i>Finland</i> denoted with
--   <i>FI</i>.
pattern FI :: Flag

-- | The <a>Flag</a> pattern used for <i>Fiji</i> denoted with <i>FJ</i>.
pattern FJ :: Flag

-- | The <a>Flag</a> pattern used for the <i>Falkland Islands</i> denoted
--   with <i>FK</i>.
pattern FK :: Flag

-- | The <a>Flag</a> pattern used for <i>Micronesia</i> denoted with
--   <i>FM</i>.
pattern FM :: Flag

-- | The <a>Flag</a> pattern used for the <i>Faroe Islands</i> denoted with
--   <i>FO</i>.
pattern FO :: Flag

-- | The <a>Flag</a> pattern used for <i>France</i> denoted with <i>FR</i>.
pattern FR :: Flag

-- | The <a>Flag</a> pattern used for <i>Gabon</i> denoted with <i>GA</i>.
pattern GA :: Flag

-- | The <a>Flag</a> pattern used for <i>United Kingdom</i> denoted with
--   <i>GB</i>.
pattern GB :: Flag

-- | The <a>Flag</a> pattern used for <i>Grenada</i> denoted with
--   <i>GD</i>.
pattern GD :: Flag

-- | The <a>Flag</a> pattern used for <i>Georgia</i> denoted with
--   <i>GE</i>.
pattern GE :: Flag

-- | The <a>Flag</a> pattern used for <i>French Guiana</i> denoted with
--   <i>GF</i>.
pattern GF :: Flag

-- | The <a>Flag</a> pattern used for <i>Guernsey</i> denoted with
--   <i>GG</i>.
pattern GG :: Flag

-- | The <a>Flag</a> pattern used for <i>Ghana</i> denoted with <i>GH</i>.
pattern GH :: Flag

-- | The <a>Flag</a> pattern used for <i>Gibraltar</i> denoted with
--   <i>GI</i>.
pattern GI :: Flag

-- | The <a>Flag</a> pattern used for <i>Greenland</i> denoted with
--   <i>GL</i>.
pattern GL :: Flag

-- | The <a>Flag</a> pattern used for <i>Gambia</i> denoted with <i>GM</i>.
pattern GM :: Flag

-- | The <a>Flag</a> pattern used for <i>Guinea</i> denoted with <i>GN</i>.
pattern GN :: Flag

-- | The <a>Flag</a> pattern used for <i>Guadeloupe</i> denoted with
--   <i>GP</i>.
pattern GP :: Flag

-- | The <a>Flag</a> pattern used for <i>Equatorial Guinea</i> denoted with
--   <i>GQ</i>.
pattern GQ :: Flag

-- | The <a>Flag</a> pattern used for <i>Greece</i> denoted with <i>GR</i>.
pattern GR :: Flag

-- | The <a>Flag</a> pattern used for the <i>South Georgia &amp; South
--   Sandwich Islands</i> denoted with <i>GS</i>.
pattern GS :: Flag

-- | The <a>Flag</a> pattern used for <i>Guatemala</i> denoted with
--   <i>GT</i>.
pattern GT :: Flag

-- | The <a>Flag</a> pattern used for <i>Guam</i> denoted with <i>GU</i>.
pattern GU :: Flag

-- | The <a>Flag</a> pattern used for <i>Guinea-Bissau</i> denoted with
--   <i>GW</i>.
pattern GW :: Flag

-- | The <a>Flag</a> pattern used for <i>Guyana</i> denoted with <i>GY</i>.
pattern GY :: Flag

-- | The <a>Flag</a> pattern used for <i>Hong Kong SAR China</i> denoted
--   with <i>HK</i>.
pattern HK :: Flag

-- | The <a>Flag</a> pattern used for the <i>Heard &amp; McDonald
--   Islands</i> denoted with <i>HM</i>.
pattern HM :: Flag

-- | The <a>Flag</a> pattern used for <i>Honduras</i> denoted with
--   <i>HN</i>.
pattern HN :: Flag

-- | The <a>Flag</a> pattern used for <i>Croatia</i> denoted with
--   <i>HR</i>.
pattern HR :: Flag

-- | The <a>Flag</a> pattern used for <i>Haiti</i> denoted with <i>HT</i>.
pattern HT :: Flag

-- | The <a>Flag</a> pattern used for <i>Hungary</i> denoted with
--   <i>HU</i>.
pattern HU :: Flag

-- | The <a>Flag</a> pattern used for the <i>Canary Islands</i> denoted
--   with <i>IC</i>.
pattern IC :: Flag

-- | The <a>Flag</a> pattern used for <i>Indonesia</i> denoted with
--   <i>ID</i>.
pattern ID :: Flag

-- | The <a>Flag</a> pattern used for <i>Ireland</i> denoted with
--   <i>IE</i>.
pattern IE :: Flag

-- | The <a>Flag</a> pattern used for <i>Israel</i> denoted with <i>IL</i>.
pattern IL :: Flag

-- | The <a>Flag</a> pattern used for <i>Isle of Man</i> denoted with
--   <i>IM</i>.
pattern IM :: Flag

-- | The <a>Flag</a> pattern used for <i>India</i> denoted with <i>IN</i>.
pattern IN :: Flag

-- | The <a>Flag</a> pattern used for <i>British Indian Ocean Territory</i>
--   denoted with <i>IO</i>.
pattern IO :: Flag

-- | The <a>Flag</a> pattern used for <i>Iraq</i> denoted with <i>IQ</i>.
pattern IQ :: Flag

-- | The <a>Flag</a> pattern used for <i>Iran</i> denoted with <i>IR</i>.
pattern IR :: Flag

-- | The <a>Flag</a> pattern used for <i>Iceland</i> denoted with
--   <i>IS</i>.
pattern IS :: Flag

-- | The <a>Flag</a> pattern used for <i>Italy</i> denoted with <i>IT</i>.
pattern IT :: Flag

-- | The <a>Flag</a> pattern used for <i>Jersey</i> denoted with <i>JE</i>.
pattern JE :: Flag

-- | The <a>Flag</a> pattern used for <i>Jamaica</i> denoted with
--   <i>JM</i>.
pattern JM :: Flag

-- | The <a>Flag</a> pattern used for <i>Jordan</i> denoted with <i>JO</i>.
pattern JO :: Flag

-- | The <a>Flag</a> pattern used for <i>Japan</i> denoted with <i>JP</i>.
pattern JP :: Flag

-- | The <a>Flag</a> pattern used for <i>Kenya</i> denoted with <i>KE</i>.
pattern KE :: Flag

-- | The <a>Flag</a> pattern used for <i>Kyrgyzstan</i> denoted with
--   <i>KG</i>.
pattern KG :: Flag

-- | The <a>Flag</a> pattern used for <i>Cambodia</i> denoted with
--   <i>KH</i>.
pattern KH :: Flag

-- | The <a>Flag</a> pattern used for <i>Kiribati</i> denoted with
--   <i>KI</i>.
pattern KI :: Flag

-- | The <a>Flag</a> pattern used for the <i>Comoros</i> denoted with
--   <i>KM</i>.
pattern KM :: Flag

-- | The <a>Flag</a> pattern used for <i>St. Kitts &amp; Nevis</i> denoted
--   with <i>KN</i>.
pattern KN :: Flag

-- | The <a>Flag</a> pattern used for <i>North Korea</i> denoted with
--   <i>KP</i>.
pattern KP :: Flag

-- | The <a>Flag</a> pattern used for <i>South Korea</i> denoted with
--   <i>KR</i>.
pattern KR :: Flag

-- | The <a>Flag</a> pattern used for <i>Kuwait</i> denoted with <i>KW</i>.
pattern KW :: Flag

-- | The <a>Flag</a> pattern used for the <i>Cayman Islands</i> denoted
--   with <i>KY</i>.
pattern KY :: Flag

-- | The <a>Flag</a> pattern used for <i>Kazakhstan</i> denoted with
--   <i>KZ</i>.
pattern KZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Laos</i> denoted with <i>LA</i>.
pattern LA :: Flag

-- | The <a>Flag</a> pattern used for <i>Lebanon</i> denoted with
--   <i>LB</i>.
pattern LB :: Flag

-- | The <a>Flag</a> pattern used for <i>St. Lucia</i> denoted with
--   <i>LC</i>.
pattern LC :: Flag

-- | The <a>Flag</a> pattern used for <i>Liechtenstein</i> denoted with
--   <i>LI</i>.
pattern LI :: Flag

-- | The <a>Flag</a> pattern used for <i>Sri Lanka</i> denoted with
--   <i>LK</i>.
pattern LK :: Flag

-- | The <a>Flag</a> pattern used for <i>Liberia</i> denoted with
--   <i>LR</i>.
pattern LR :: Flag

-- | The <a>Flag</a> pattern used for <i>Lesotho</i> denoted with
--   <i>LS</i>.
pattern LS :: Flag

-- | The <a>Flag</a> pattern used for <i>Lithuania</i> denoted with
--   <i>LT</i>.
pattern LT :: Flag

-- | The <a>Flag</a> pattern used for <i>Luxembourg</i> denoted with
--   <i>LU</i>.
pattern LU :: Flag

-- | The <a>Flag</a> pattern used for <i>Latvia</i> denoted with <i>LV</i>.
pattern LV :: Flag

-- | The <a>Flag</a> pattern used for <i>Libya</i> denoted with <i>LY</i>.
pattern LY :: Flag

-- | The <a>Flag</a> pattern used for <i>Morocco</i> denoted with
--   <i>MA</i>.
pattern MA :: Flag

-- | The <a>Flag</a> pattern used for <i>Monaco</i> denoted with <i>MC</i>.
pattern MC :: Flag

-- | The <a>Flag</a> pattern used for <i>Moldova</i> denoted with
--   <i>MD</i>.
pattern MD :: Flag

-- | The <a>Flag</a> pattern used for <i>Montenegro</i> denoted with
--   <i>ME</i>.
pattern ME :: Flag

-- | The <a>Flag</a> pattern used for <i>St. Martin</i> denoted with
--   <i>MF</i>.
pattern MF :: Flag

-- | The <a>Flag</a> pattern used for <i>Madagascar</i> denoted with
--   <i>MG</i>.
pattern MG :: Flag

-- | The <a>Flag</a> pattern used for the <i>Marshall Islands</i> denoted
--   with <i>MH</i>.
pattern MH :: Flag

-- | The <a>Flag</a> pattern used for <i>North Macedonia</i> denoted with
--   <i>MK</i>.
pattern MK :: Flag

-- | The <a>Flag</a> pattern used for <i>Mali</i> denoted with <i>ML</i>.
pattern ML :: Flag

-- | The <a>Flag</a> pattern used for <i>Myanmar (Burma)</i> denoted with
--   <i>MM</i>.
pattern MM :: Flag

-- | The <a>Flag</a> pattern used for <i>Mongolia</i> denoted with
--   <i>MN</i>.
pattern MN :: Flag

-- | The <a>Flag</a> pattern used for <i>Macao SAR China</i> denoted with
--   <i>MO</i>.
pattern MO :: Flag

-- | The <a>Flag</a> pattern used for the <i>Northern Mariana Islands</i>
--   denoted with <i>MP</i>.
pattern MP :: Flag

-- | The <a>Flag</a> pattern used for <i>Martinique</i> denoted with
--   <i>MQ</i>.
pattern MQ :: Flag

-- | The <a>Flag</a> pattern used for <i>Mauritania</i> denoted with
--   <i>MR</i>.
pattern MR :: Flag

-- | The <a>Flag</a> pattern used for <i>Montserrat</i> denoted with
--   <i>MS</i>.
pattern MS :: Flag

-- | The <a>Flag</a> pattern used for <i>Malta</i> denoted with <i>MT</i>.
pattern MT :: Flag

-- | The <a>Flag</a> pattern used for <i>Mauritius</i> denoted with
--   <i>MU</i>.
pattern MU :: Flag

-- | The <a>Flag</a> pattern used for the <i>Maldives</i> denoted with
--   <i>MV</i>.
pattern MV :: Flag

-- | The <a>Flag</a> pattern used for <i>Malawi</i> denoted with <i>MW</i>.
pattern MW :: Flag

-- | The <a>Flag</a> pattern used for <i>Mexico</i> denoted with <i>MX</i>.
pattern MX :: Flag

-- | The <a>Flag</a> pattern used for <i>Malaysia</i> denoted with
--   <i>MY</i>.
pattern MY :: Flag

-- | The <a>Flag</a> pattern used for <i>Mozambique</i> denoted with
--   <i>MZ</i>.
pattern MZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Namibia</i> denoted with
--   <i>NA</i>.
pattern NA :: Flag

-- | The <a>Flag</a> pattern used for <i>New Caledonia</i> denoted with
--   <i>NC</i>.
pattern NC :: Flag

-- | The <a>Flag</a> pattern used for <i>Niger</i> denoted with <i>NE</i>.
pattern NE :: Flag

-- | The <a>Flag</a> pattern used for <i>Norfolk Island</i> denoted with
--   <i>NF</i>.
pattern NF :: Flag

-- | The <a>Flag</a> pattern used for <i>Nigeria</i> denoted with
--   <i>NG</i>.
pattern NG :: Flag

-- | The <a>Flag</a> pattern used for <i>Nicaragua</i> denoted with
--   <i>NI</i>.
pattern NI :: Flag

-- | The <a>Flag</a> pattern used for the <i>Netherlands</i> denoted with
--   <i>NL</i>.
pattern NL :: Flag

-- | The <a>Flag</a> pattern used for <i>Norway</i> denoted with <i>NO</i>.
pattern NO :: Flag

-- | The <a>Flag</a> pattern used for <i>Nepal</i> denoted with <i>NP</i>.
pattern NP :: Flag

-- | The <a>Flag</a> pattern used for <i>Nauru</i> denoted with <i>NR</i>.
pattern NR :: Flag

-- | The <a>Flag</a> pattern used for <i>Niue</i> denoted with <i>NU</i>.
pattern NU :: Flag

-- | The <a>Flag</a> pattern used for <i>New Zealand</i> denoted with
--   <i>NZ</i>.
pattern NZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Oman</i> denoted with <i>OM</i>.
pattern OM :: Flag

-- | The <a>Flag</a> pattern used for <i>Panama</i> denoted with <i>PA</i>.
pattern PA :: Flag

-- | The <a>Flag</a> pattern used for <i>Peru</i> denoted with <i>PE</i>.
pattern PE :: Flag

-- | The <a>Flag</a> pattern used for <i>French Polynesia</i> denoted with
--   <i>PF</i>.
pattern PF :: Flag

-- | The <a>Flag</a> pattern used for <i>Papua New Guinea</i> denoted with
--   <i>PG</i>.
pattern PG :: Flag

-- | The <a>Flag</a> pattern used for the <i>Philippines</i> denoted with
--   <i>PH</i>.
pattern PH :: Flag

-- | The <a>Flag</a> pattern used for <i>Pakistan</i> denoted with
--   <i>PK</i>.
pattern PK :: Flag

-- | The <a>Flag</a> pattern used for <i>Poland</i> denoted with <i>PL</i>.
pattern PL :: Flag

-- | The <a>Flag</a> pattern used for <i>St. Pierre &amp; Miquelon</i>
--   denoted with <i>PM</i>.
pattern PM :: Flag

-- | The <a>Flag</a> pattern used for the <i>Pitcairn Islands</i> denoted
--   with <i>PN</i>.
pattern PN :: Flag

-- | The <a>Flag</a> pattern used for <i>Puerto Rico</i> denoted with
--   <i>PR</i>.
pattern PR :: Flag

-- | The <a>Flag</a> pattern used for the <i>Palestinian Territories</i>
--   denoted with <i>PS</i>.
pattern PS :: Flag

-- | The <a>Flag</a> pattern used for <i>Portugal</i> denoted with
--   <i>PT</i>.
pattern PT :: Flag

-- | The <a>Flag</a> pattern used for <i>Palau</i> denoted with <i>PW</i>.
pattern PW :: Flag

-- | The <a>Flag</a> pattern used for <i>Paraguay</i> denoted with
--   <i>PY</i>.
pattern PY :: Flag

-- | The <a>Flag</a> pattern used for <i>Qatar</i> denoted with <i>QA</i>.
pattern QA :: Flag

-- | The <a>Flag</a> pattern used for <i>Réunion</i> denoted with
--   <i>RE</i>.
pattern RE :: Flag

-- | The <a>Flag</a> pattern used for <i>Romania</i> denoted with
--   <i>RO</i>.
pattern RO :: Flag

-- | The <a>Flag</a> pattern used for <i>Serbia</i> denoted with <i>RS</i>.
pattern RS :: Flag

-- | The <a>Flag</a> pattern used for <i>Russia</i> denoted with <i>RU</i>.
pattern RU :: Flag

-- | The <a>Flag</a> pattern used for <i>Rwanda</i> denoted with <i>RW</i>.
pattern RW :: Flag

-- | The <a>Flag</a> pattern used for <i>Saudi Arabia</i> denoted with
--   <i>SA</i>.
pattern SA :: Flag

-- | The <a>Flag</a> pattern used for the <i>Solomon Islands</i> denoted
--   with <i>SB</i>.
pattern SB :: Flag

-- | The <a>Flag</a> pattern used for <i>Seychelles</i> denoted with
--   <i>SC</i>.
pattern SC :: Flag

-- | The <a>Flag</a> pattern used for <i>Sudan</i> denoted with <i>SD</i>.
pattern SD :: Flag

-- | The <a>Flag</a> pattern used for <i>Sweden</i> denoted with <i>SE</i>.
pattern SE :: Flag

-- | The <a>Flag</a> pattern used for <i>Singapore</i> denoted with
--   <i>SG</i>.
pattern SG :: Flag

-- | The <a>Flag</a> pattern used for <i>St. Helena</i> denoted with
--   <i>SH</i>.
pattern SH :: Flag

-- | The <a>Flag</a> pattern used for <i>Slovenia</i> denoted with
--   <i>SI</i>.
pattern SI :: Flag

-- | The <a>Flag</a> pattern used for <i>Svalbard &amp; Jan Mayen</i>
--   denoted with <i>SJ</i>.
pattern SJ :: Flag

-- | The <a>Flag</a> pattern used for <i>Slovakia</i> denoted with
--   <i>SK</i>.
pattern SK :: Flag

-- | The <a>Flag</a> pattern used for <i>Sierra Leone</i> denoted with
--   <i>SL</i>.
pattern SL :: Flag

-- | The <a>Flag</a> pattern used for <i>San Marino</i> denoted with
--   <i>SM</i>.
pattern SM :: Flag

-- | The <a>Flag</a> pattern used for <i>Senegal</i> denoted with
--   <i>SN</i>.
pattern SN :: Flag

-- | The <a>Flag</a> pattern used for <i>Somalia</i> denoted with
--   <i>SO</i>.
pattern SO :: Flag

-- | The <a>Flag</a> pattern used for <i>Suriname</i> denoted with
--   <i>SR</i>.
pattern SR :: Flag

-- | The <a>Flag</a> pattern used for <i>South Sudan</i> denoted with
--   <i>SS</i>.
pattern SS :: Flag

-- | The <a>Flag</a> pattern used for <i>São Tomé &amp; Príncipe</i>
--   denoted with <i>ST</i>.
pattern ST :: Flag

-- | The <a>Flag</a> pattern used for <i>El Salvador</i> denoted with
--   <i>SV</i>.
pattern SV :: Flag

-- | The <a>Flag</a> pattern used for <i>Sint Maarten</i> denoted with
--   <i>SX</i>.
pattern SX :: Flag

-- | The <a>Flag</a> pattern used for <i>Syria</i> denoted with <i>SY</i>.
pattern SY :: Flag

-- | The <a>Flag</a> pattern used for <i>Eswatini</i> denoted with
--   <i>SZ</i>.
pattern SZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Tristan da Cunha</i> denoted with
--   <i>TA</i>.
pattern TA :: Flag

-- | The <a>Flag</a> pattern used for the <i>Turks &amp; Caicos Islands</i>
--   denoted with <i>TC</i>.
pattern TC :: Flag

-- | The <a>Flag</a> pattern used for <i>Chad</i> denoted with <i>TD</i>.
pattern TD :: Flag

-- | The <a>Flag</a> pattern used for the <i>French Southern
--   Territories</i> denoted with <i>TF</i>.
pattern TF :: Flag

-- | The <a>Flag</a> pattern used for <i>Togo</i> denoted with <i>TG</i>.
pattern TG :: Flag

-- | The <a>Flag</a> pattern used for <i>Thailand</i> denoted with
--   <i>TH</i>.
pattern TH :: Flag

-- | The <a>Flag</a> pattern used for <i>Tajikistan</i> denoted with
--   <i>TJ</i>.
pattern TJ :: Flag

-- | The <a>Flag</a> pattern used for <i>Tokelau</i> denoted with
--   <i>TK</i>.
pattern TK :: Flag

-- | The <a>Flag</a> pattern used for <i>Timor-Leste</i> denoted with
--   <i>TL</i>.
pattern TL :: Flag

-- | The <a>Flag</a> pattern used for <i>Turkmenistan</i> denoted with
--   <i>TM</i>.
pattern TM :: Flag

-- | The <a>Flag</a> pattern used for <i>Tunisia</i> denoted with
--   <i>TN</i>.
pattern TN :: Flag

-- | The <a>Flag</a> pattern used for <i>Tonga</i> denoted with <i>TO</i>.
pattern TO :: Flag

-- | The <a>Flag</a> pattern used for <i>Turkey</i> denoted with <i>TR</i>.
pattern TR :: Flag

-- | The <a>Flag</a> pattern used for <i>Trinidad &amp; Tobago</i> denoted
--   with <i>TT</i>.
pattern TT :: Flag

-- | The <a>Flag</a> pattern used for <i>Tuvalu</i> denoted with <i>TV</i>.
pattern TV :: Flag

-- | The <a>Flag</a> pattern used for <i>Taiwan</i> denoted with <i>TW</i>.
pattern TW :: Flag

-- | The <a>Flag</a> pattern used for <i>Tanzania</i> denoted with
--   <i>TZ</i>.
pattern TZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Ukraine</i> denoted with
--   <i>UA</i>.
pattern UA :: Flag

-- | The <a>Flag</a> pattern used for <i>Uganda</i> denoted with <i>UG</i>.
pattern UG :: Flag

-- | The <a>Flag</a> pattern used for the <i>U.S. Outlying Islands</i>
--   denoted with <i>UM</i>.
pattern UM :: Flag

-- | The <a>Flag</a> pattern used for the <i>United Nations</i> denoted
--   with <i>UN</i>.
pattern UN :: Flag

-- | The <a>Flag</a> pattern used for the <i>United States</i> denoted with
--   <i>US</i>.
pattern US :: Flag

-- | The <a>Flag</a> pattern used for <i>Uruguay</i> denoted with
--   <i>UY</i>.
pattern UY :: Flag

-- | The <a>Flag</a> pattern used for <i>Uzbekistan</i> denoted with
--   <i>UZ</i>.
pattern UZ :: Flag

-- | The <a>Flag</a> pattern used for <i>Vatican City</i> denoted with
--   <i>VA</i>.
pattern VA :: Flag

-- | The <a>Flag</a> pattern used for <i>St. Vincent &amp; Grenadines</i>
--   denoted with <i>VC</i>.
pattern VC :: Flag

-- | The <a>Flag</a> pattern used for <i>Venezuela</i> denoted with
--   <i>VE</i>.
pattern VE :: Flag

-- | The <a>Flag</a> pattern used for the <i>British Virgin Islands</i>
--   denoted with <i>VG</i>.
pattern VG :: Flag

-- | The <a>Flag</a> pattern used for the <i>U.S. Virgin Islands</i>
--   denoted with <i>VI</i>.
pattern VI :: Flag

-- | The <a>Flag</a> pattern used for <i>Vietnam</i> denoted with
--   <i>VN</i>.
pattern VN :: Flag

-- | The <a>Flag</a> pattern used for <i>Vanuatu</i> denoted with
--   <i>VU</i>.
pattern VU :: Flag

-- | The <a>Flag</a> pattern used for <i>Wallis &amp; Futuna</i> denoted
--   with <i>WF</i>.
pattern WF :: Flag

-- | The <a>Flag</a> pattern used for <i>Samoa</i> denoted with <i>WS</i>.
pattern WS :: Flag

-- | The <a>Flag</a> pattern used for <i>Kosovo</i> denoted with <i>XK</i>.
pattern XK :: Flag

-- | The <a>Flag</a> pattern used for <i>Yemen</i> denoted with <i>YE</i>.
pattern YE :: Flag

-- | The <a>Flag</a> pattern used for <i>Mayotte</i> denoted with
--   <i>YT</i>.
pattern YT :: Flag

-- | The <a>Flag</a> pattern used for <i>South Africa</i> denoted with
--   <i>ZA</i>.
pattern ZA :: Flag

-- | The <a>Flag</a> pattern used for <i>Zambia</i> denoted with <i>ZM</i>.
pattern ZM :: Flag

-- | The <a>Flag</a> pattern used for <i>Zimbabwe</i> denoted with
--   <i>ZW</i>.
pattern ZW :: Flag

-- | The <a>SubFlag</a> pattern used for <i>England</i> denoted with
--   <i>GB-ENG</i> or <i>ENG</i>.
pattern ENG :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Scotland</i> denoted with
--   <i>GB-SCT</i> or <i>SCT</i>.
pattern SCT :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Wales</i> denoted with
--   <i>GB-WLS</i> or <i>WLS</i>.
pattern WLS :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Alabama</i> denoted with
--   <i>US-AL</i> or <i>AL</i>
pattern USAL :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Alaska</i> denoted with
--   <i>US-AK</i> or <i>AK</i>
pattern USAK :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>American Samoa</i> denoted with
--   <i>US-AS</i> or <i>AS</i>
pattern USAS :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Arizona</i> denoted with
--   <i>US-AZ</i> or <i>AZ</i>
pattern USAZ :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Arkansas</i> denoted with
--   <i>US-AR</i> or <i>AR</i>
pattern USAR :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>California</i> denoted with
--   <i>US-CA</i> or <i>CA</i>
pattern USCA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Colorado</i> denoted with
--   <i>US-CO</i> or <i>CO</i>
pattern USCO :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Connecticut</i> denoted with
--   <i>US-CT</i> or <i>CT</i>
pattern USCT :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Delaware</i> denoted with
--   <i>US-DE</i> or <i>DE</i>
pattern USDE :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Florida</i> denoted with
--   <i>US-FL</i> or <i>FL</i>
pattern USFL :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Georgia</i> denoted with
--   <i>US-GA</i> or <i>GA</i>
pattern USGA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Guam</i> denoted with
--   <i>US-GU</i> or <i>GU</i>
pattern USGU :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Hawaii</i> denoted with
--   <i>US-HI</i> or <i>HI</i>
pattern USHI :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Idaho</i> denoted with
--   <i>US-ID</i> or <i>ID</i>
pattern USID :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Illinois</i> denoted with
--   <i>US-IL</i> or <i>IL</i>
pattern USIL :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Indiana</i> denoted with
--   <i>US-IN</i> or <i>IN</i>
pattern USIN :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Iowa</i> denoted with
--   <i>US-IA</i> or <i>IA</i>
pattern USIA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Kansas</i> denoted with
--   <i>US-KS</i> or <i>KS</i>
pattern USKS :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Kentucky</i> denoted with
--   <i>US-KY</i> or <i>KY</i>
pattern USKY :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Louisiana</i> denoted with
--   <i>US-LA</i> or <i>LA</i>
pattern USLA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Maine</i> denoted with
--   <i>US-ME</i> or <i>ME</i>
pattern USME :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Maryland</i> denoted with
--   <i>US-MD</i> or <i>MD</i>
pattern USMD :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Massachusetts</i> denoted with
--   <i>US-MA</i> or <i>MA</i>
pattern USMA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Michigan</i> denoted with
--   <i>US-MI</i> or <i>MI</i>
pattern USMI :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Minnesota</i> denoted with
--   <i>US-MN</i> or <i>MN</i>
pattern USMN :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Mississippi</i> denoted with
--   <i>US-MS</i> or <i>MS</i>
pattern USMS :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Missouri</i> denoted with
--   <i>US-MO</i> or <i>MO</i>
pattern USMO :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Montana</i> denoted with
--   <i>US-MT</i> or <i>MT</i>
pattern USMT :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Nebraska</i> denoted with
--   <i>US-NE</i> or <i>NE</i>
pattern USNE :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Nevada</i> denoted with
--   <i>US-NV</i> or <i>NV</i>
pattern USNV :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>New Hampshire</i> denoted with
--   <i>US-NH</i> or <i>NH</i>
pattern USNH :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>New Jersey</i> denoted with
--   <i>US-NJ</i> or <i>NJ</i>
pattern USNJ :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>New Mexico</i> denoted with
--   <i>US-NM</i> or <i>NM</i>
pattern USNM :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>New York</i> denoted with
--   <i>US-NY</i> or <i>NY</i>
pattern USNY :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>North Carolina</i> denoted with
--   <i>US-NC</i> or <i>NC</i>
pattern USNC :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>North Dakota</i> denoted with
--   <i>US-ND</i> or <i>ND</i>
pattern USND :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Northern Mariana Islands</i>
--   denoted with <i>US-MP</i> or <i>MP</i>
pattern USMP :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Ohio</i> denoted with
--   <i>US-OH</i> or <i>OH</i>
pattern USOH :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Oklahoma</i> denoted with
--   <i>US-OK</i> or <i>OK</i>
pattern USOK :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Oregon</i> denoted with
--   <i>US-OR</i> or <i>OR</i>
pattern USOR :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Pennsylvania</i> denoted with
--   <i>US-PA</i> or <i>PA</i>
pattern USPA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Puerto Rico</i> denoted with
--   <i>US-PR</i> or <i>PR</i>
pattern USPR :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Rhode Island</i> denoted with
--   <i>US-RI</i> or <i>RI</i>
pattern USRI :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>South Carolina</i> denoted with
--   <i>US-SC</i> or <i>SC</i>
pattern USSC :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>South Dakota</i> denoted with
--   <i>US-SD</i> or <i>SD</i>
pattern USSD :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Tennessee</i> denoted with
--   <i>US-TN</i> or <i>TN</i>
pattern USTN :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>U.S. Outlying Islands</i>
--   denoted with <i>US-UM</i> or <i>UM</i>
pattern USUM :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>U.S. Virgin Islands</i> denoted
--   with <i>US-VI</i> or <i>VI</i>
pattern USVI :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Utah</i> denoted with
--   <i>US-UT</i> or <i>UT</i>
pattern USUT :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Vermont</i> denoted with
--   <i>US-VT</i> or <i>VT</i>
pattern USVT :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Virginia</i> denoted with
--   <i>US-VA</i> or <i>VA</i>
pattern USVA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Washington</i> denoted with
--   <i>US-WA</i> or <i>WA</i>
pattern USWA :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Washington DC</i> denoted with
--   <i>US-DC</i> or <i>DC</i>
pattern USDC :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>West Virginia</i> denoted with
--   <i>US-WV</i> or <i>WV</i>
pattern USWV :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Wisconsin</i> denoted with
--   <i>US-WI</i> or <i>WI</i>
pattern USWI :: SubFlag

-- | The <a>SubFlag</a> pattern used for <i>Wyoming</i> denoted with
--   <i>US-WY</i> or <i>WY</i>
pattern USWY :: SubFlag
instance GHC.Show.Show Data.Char.Emoji.Flag.Flag
instance GHC.Read.Read Data.Char.Emoji.Flag.Flag
instance GHC.Classes.Ord Data.Char.Emoji.Flag.Flag
instance GHC.Generics.Generic Data.Char.Emoji.Flag.Flag
instance GHC.Classes.Eq Data.Char.Emoji.Flag.Flag
instance Data.Data.Data Data.Char.Emoji.Flag.Flag
instance GHC.Show.Show Data.Char.Emoji.Flag.SubFlag
instance GHC.Read.Read Data.Char.Emoji.Flag.SubFlag
instance GHC.Classes.Ord Data.Char.Emoji.Flag.SubFlag
instance GHC.Generics.Generic Data.Char.Emoji.Flag.SubFlag
instance GHC.Classes.Eq Data.Char.Emoji.Flag.SubFlag
instance Data.Data.Data Data.Char.Emoji.Flag.SubFlag
instance GHC.Show.Show Data.Char.Emoji.Flag.ExtraFlag
instance GHC.Read.Read Data.Char.Emoji.Flag.ExtraFlag
instance GHC.Classes.Ord Data.Char.Emoji.Flag.ExtraFlag
instance GHC.Generics.Generic Data.Char.Emoji.Flag.ExtraFlag
instance GHC.Classes.Eq Data.Char.Emoji.Flag.ExtraFlag
instance GHC.Enum.Enum Data.Char.Emoji.Flag.ExtraFlag
instance Data.Data.Data Data.Char.Emoji.Flag.ExtraFlag
instance GHC.Enum.Bounded Data.Char.Emoji.Flag.ExtraFlag
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Flag.ExtraFlag
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Flag.ExtraFlag
instance Control.DeepSeq.NFData Data.Char.Emoji.Flag.ExtraFlag
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Flag.ExtraFlag
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Flag.SubFlag
instance Control.DeepSeq.NFData Data.Char.Emoji.Flag.SubFlag
instance GHC.Enum.Bounded Data.Char.Emoji.Flag.SubFlag
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Flag.SubFlag
instance GHC.Enum.Enum Data.Char.Emoji.Flag.SubFlag
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Flag.SubFlag
instance Data.Hashable.Class.Hashable Data.Char.Emoji.Flag.Flag
instance Control.DeepSeq.NFData Data.Char.Emoji.Flag.Flag
instance GHC.Enum.Bounded Data.Char.Emoji.Flag.Flag
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Emoji.Flag.Flag
instance GHC.Enum.Enum Data.Char.Emoji.Flag.Flag
instance Data.Char.Core.UnicodeText Data.Char.Emoji.Flag.Flag


-- | Unicode defines 2182 emoji characters, this module aims to make
--   working with emoji characters more convenient.
module Data.Char.Emoji


-- | A frame is represented as a pair of horizontal and vertical lines.
--   These can be any items, but currently only booleans and weight objects
--   are covered to convert the item to a corresponding character.
module Data.Char.Frame

-- | The weights of the frame lines, these can be <a>Empty</a>,
--   <a>Light</a> or <a>Heavy</a>.
data Weight

-- | The frame does not contain such line.
Empty :: Weight

-- | The frame contains such line.
Light :: Weight

-- | The frame contains such line, in <i>boldface</i>.
Heavy :: Weight

-- | A data type that determines the state of the <i>horizontal</i> lines
--   of the frame (<a>left</a> and <a>right</a>).
data Horizontal a
Horizontal :: a -> a -> Horizontal a

-- | The state of the left line of the frame.
[left] :: Horizontal a -> a

-- | The state of the right line of the frame.
[right] :: Horizontal a -> a

-- | A data type that determines the state of the <i>vertical</i> lines of
--   the frame (<a>up</a> and <a>down</a>).
data Vertical a
Vertical :: a -> a -> Vertical a

-- | The state of the line in the up direction of the frame.
[up] :: Vertical a -> a

-- | The state of the line in the down direction of the frame.
[down] :: Vertical a -> a

-- | A data type that specifies the four lines that should (not) be drawn
--   for the frame.
data Parts a
Parts :: Vertical a -> Horizontal a -> Parts a

-- | A type synonym that makes it more convenient to work with a
--   <a>Parts</a> object that wraps <a>Bool</a>s. Usually <a>True</a> means
--   it should draw a line, and <a>False</a> that there is no line in that
--   direction. The <a>UnicodeCharacter</a> instance of a <a>Simple</a>
--   works by converting <a>True</a> to a <a>Light</a>, and vice versa.
type Simple = Parts Bool

-- | A type synonym that makes it more convenient to work with a
--   <a>Parts</a> object that wraps <a>Weight</a> objects. These specify
--   the weight .
type Weighted = Parts Weight

-- | A pattern that makes pattern matching and expressions with
--   <a>Parts</a> more convenient.
pattern Frame :: a -> a -> a -> a -> Parts a

-- | Convert a <a>Simple</a> frame to a corresponding <a>Char</a>. Here
--   <a>True</a> is mapped to a <a>Light</a> line.
simple :: Simple -> Char

-- | Convert a <a>Simple</a> frame to a corresponding <a>Char</a>. Here
--   <a>True</a> is mapped to a <a>Heavy</a> line.
simple' :: Simple -> Char

-- | Generate a <a>Char</a> where turns are done with an <i>arc</i> instead
--   of a corner. This can only be done for <a>Light</a> lines.
simpleWithArc :: Simple -> Char

-- | Converts a given <a>Weighted</a> to the char that can be used to
--   render frames.
weighted :: Weighted -> Char

-- | Convert a <a>Simple</a> frame to a <a>Weighted</a> frame by converting
--   <a>True</a> to the given <a>Weight</a> value.
simpleToWeighted :: Weight -> Simple -> Weighted

-- | Convert a <a>Simple</a> frame to a <a>Weighted</a> frame by converting
--   <a>True</a> to <a>Light</a>.
simpleToLight :: Simple -> Weighted

-- | Convert a <a>Simple</a> frame to a <a>Weighted</a> frame by converting
--   <a>True</a> to <a>Heavy</a>.
simpleToHeavy :: Simple -> Weighted

-- | Convert a <a>Weighted</a> object to a <a>Simple</a> object by
--   converting the <a>Light</a> and <a>Heavy</a> parts to <a>True</a> and
--   the <a>Empty</a> parts to <a>False</a>.
weightedToSimple :: Weighted -> Simple

-- | Convert the given <a>Char</a>acter to a <a>Parts</a> object of
--   <a>Weight</a> objects wrapped in a <a>Just</a> data constructor if it
--   is a <i>block</i> character; <a>Nothing</a> otherwise.
fromWeighted :: Char -> Maybe Weighted

-- | Convert the given <a>Char</a>acter to a <a>Parts</a> object of
--   <a>Weight</a> objects. If the given <a>Char</a>acter is not a
--   <i>frame</i> of <a>Weight</a>s, the result is unspecified.
fromWeighted' :: Char -> Weighted

-- | Convert the given <a>Char</a>acter to the equivalent <a>Simple</a>
--   object wrapped in a <a>Just</a> data constructor if it exists;
--   <a>Nothing</a> otherwise. The parts of the frame should only be
--   <a>Empty</a> or <a>Light</a>, if it contains a <a>Heavy</a> object
--   <a>Nothing</a> is returned.
fromLight :: Char -> Maybe Simple

-- | Convert the given <a>Char</a>acter to the equivalent <a>Simple</a>
--   object if it exists; unspecified output otherwise. The parts of the
--   frame should only be <a>Empty</a> or <a>Light</a>.
fromLight' :: Char -> Simple

-- | Convert the given <a>Char</a>acter to the equivalent <a>Simple</a>
--   object wrapped in a <a>Just</a> data constructor if it exists;
--   <a>Nothing</a> otherwise. The parts of the frame should only be
--   <a>Empty</a> or <a>Heavy</a>, if it contains a <a>Light</a> object
--   <a>Nothing</a> is returned.
fromHeavy :: Char -> Maybe Simple

-- | Convert the given <a>Char</a>acter to the equivalent <a>Simple</a>
--   object if it exists; unspecified output otherwise. The parts of the
--   frame should only be <a>Empty</a> or <a>Heavy</a>.
fromHeavy' :: Char -> Simple

-- | Convert the given <a>Char</a>acter to a <a>Simple</a> object wrapped
--   in a <a>Just</a> if such <a>Simple</a> object exists; <a>Nothing</a>
--   otherwise. Parts that are <a>Light</a> or <a>Heavy</a> are mapped to
--   <a>True</a>, and parts that are <a>Empty</a> are mapped to
--   <a>False</a>.
fromSimple :: Char -> Maybe Simple

-- | Convert the given <a>Char</a>acter to a <a>Simple</a>, if no such
--   <a>Simple</a> object exists, the output is unspecified. Parts that are
--   <a>Light</a> or <a>Heavy</a> are mapped to <a>True</a>, and parts that
--   are <a>Empty</a> are mapped to <a>False</a>.
fromSimple' :: Char -> Simple
instance Data.Traversable.Traversable Data.Char.Frame.Horizontal
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Frame.Horizontal a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Frame.Horizontal a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Frame.Horizontal a)
instance GHC.Generics.Generic1 Data.Char.Frame.Horizontal
instance GHC.Generics.Generic (Data.Char.Frame.Horizontal a)
instance GHC.Base.Functor Data.Char.Frame.Horizontal
instance Data.Foldable.Foldable Data.Char.Frame.Horizontal
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Frame.Horizontal a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Frame.Horizontal a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Frame.Horizontal a)
instance Data.Traversable.Traversable Data.Char.Frame.Vertical
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Frame.Vertical a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Frame.Vertical a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Frame.Vertical a)
instance GHC.Generics.Generic1 Data.Char.Frame.Vertical
instance GHC.Generics.Generic (Data.Char.Frame.Vertical a)
instance GHC.Base.Functor Data.Char.Frame.Vertical
instance Data.Foldable.Foldable Data.Char.Frame.Vertical
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Frame.Vertical a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Frame.Vertical a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Frame.Vertical a)
instance Data.Traversable.Traversable Data.Char.Frame.Parts
instance GHC.Show.Show a => GHC.Show.Show (Data.Char.Frame.Parts a)
instance GHC.Read.Read a => GHC.Read.Read (Data.Char.Frame.Parts a)
instance GHC.Classes.Ord a => GHC.Classes.Ord (Data.Char.Frame.Parts a)
instance GHC.Generics.Generic1 Data.Char.Frame.Parts
instance GHC.Generics.Generic (Data.Char.Frame.Parts a)
instance GHC.Base.Functor Data.Char.Frame.Parts
instance Data.Foldable.Foldable Data.Char.Frame.Parts
instance GHC.Classes.Eq a => GHC.Classes.Eq (Data.Char.Frame.Parts a)
instance Data.Data.Data a => Data.Data.Data (Data.Char.Frame.Parts a)
instance GHC.Enum.Bounded a => GHC.Enum.Bounded (Data.Char.Frame.Parts a)
instance GHC.Show.Show Data.Char.Frame.Weight
instance GHC.Read.Read Data.Char.Frame.Weight
instance GHC.Classes.Ord Data.Char.Frame.Weight
instance GHC.Generics.Generic Data.Char.Frame.Weight
instance GHC.Classes.Eq Data.Char.Frame.Weight
instance GHC.Enum.Enum Data.Char.Frame.Weight
instance Data.Data.Data Data.Char.Frame.Weight
instance GHC.Enum.Bounded Data.Char.Frame.Weight
instance Data.Hashable.Class.Hashable Data.Char.Frame.Weight
instance Control.DeepSeq.NFData Data.Char.Frame.Weight
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Frame.Weight
instance Data.Char.Core.UnicodeCharacter (Data.Char.Frame.Parts Data.Char.Frame.Weight)
instance Data.Char.Core.UnicodeText (Data.Char.Frame.Parts Data.Char.Frame.Weight)
instance Data.Functor.Classes.Eq1 Data.Char.Frame.Parts
instance Data.Hashable.Class.Hashable1 Data.Char.Frame.Parts
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Frame.Parts a)
instance Data.Char.Core.MirrorHorizontal (Data.Char.Frame.Parts a)
instance Data.Char.Core.MirrorVertical (Data.Char.Frame.Parts a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Frame.Parts a)
instance Control.DeepSeq.NFData1 Data.Char.Frame.Parts
instance Data.Functor.Classes.Ord1 Data.Char.Frame.Parts
instance GHC.Base.Semigroup a => GHC.Base.Semigroup (Data.Char.Frame.Parts a)
instance GHC.Base.Monoid a => GHC.Base.Monoid (Data.Char.Frame.Parts a)
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Frame.Parts a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Frame.Parts
instance GHC.Base.Applicative Data.Char.Frame.Parts
instance Data.Char.Core.UnicodeCharacter (Data.Char.Frame.Parts GHC.Types.Bool)
instance Data.Char.Core.UnicodeText (Data.Char.Frame.Parts GHC.Types.Bool)
instance Data.Functor.Classes.Eq1 Data.Char.Frame.Vertical
instance Data.Hashable.Class.Hashable1 Data.Char.Frame.Vertical
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Frame.Vertical a)
instance Data.Char.Core.MirrorHorizontal (Data.Char.Frame.Vertical a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Frame.Vertical a)
instance Control.DeepSeq.NFData1 Data.Char.Frame.Vertical
instance Data.Functor.Classes.Ord1 Data.Char.Frame.Vertical
instance GHC.Base.Semigroup a => GHC.Base.Semigroup (Data.Char.Frame.Vertical a)
instance GHC.Base.Monoid a => GHC.Base.Monoid (Data.Char.Frame.Vertical a)
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Frame.Vertical a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Frame.Vertical
instance GHC.Base.Applicative Data.Char.Frame.Vertical
instance Data.Functor.Classes.Eq1 Data.Char.Frame.Horizontal
instance Data.Hashable.Class.Hashable1 Data.Char.Frame.Horizontal
instance Data.Hashable.Class.Hashable a => Data.Hashable.Class.Hashable (Data.Char.Frame.Horizontal a)
instance Data.Char.Core.MirrorVertical (Data.Char.Frame.Horizontal a)
instance Control.DeepSeq.NFData a => Control.DeepSeq.NFData (Data.Char.Frame.Horizontal a)
instance Control.DeepSeq.NFData1 Data.Char.Frame.Horizontal
instance Data.Functor.Classes.Ord1 Data.Char.Frame.Horizontal
instance GHC.Base.Semigroup a => GHC.Base.Semigroup (Data.Char.Frame.Horizontal a)
instance GHC.Base.Monoid a => GHC.Base.Monoid (Data.Char.Frame.Horizontal a)
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Char.Frame.Horizontal a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Char.Frame.Horizontal
instance GHC.Base.Applicative Data.Char.Frame.Horizontal


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.Fraktur

-- | Obtain the fraktur symbol for the given character in the given emphais
--   style. The result is wrapped in a <a>Just</a> data constructor. The
--   range of supported characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case a
--   character outside the range is passed to the function, <a>Nothing</a>
--   is returned.
fraktur :: Emphasis -> Char -> Maybe Char

-- | Obtain the fraktur symbol for the given character in the given
--   emphasis style. The supported range of characters are the alphabet
--   characters (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case
--   the character is not in this range, it is unspecified what will be
--   returned.
fraktur' :: Emphasis -> Char -> Char

-- | Obtain the fraktur symbol for the given character in a regular (not
--   <i>bold</i> style). The result is wrapped in a <a>Just</a> data
--   constructor. The range of supported characters are the alphabet
--   characters (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case
--   a character outside the range is passed to the function,
--   <a>Nothing</a> is returned.
frakturRegular :: Char -> Maybe Char

-- | Obtain the fraktur symbol for the given character in a regular (not
--   <i>bold</i>) style. The supported range of characters are the alphabet
--   characters (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case
--   the character is not in this range, it is unspecified what will be
--   returned.
frakturRegular' :: Char -> Char

-- | Obtain the fraktur symbol for the given character in a <i>bold</i>.
--   The result is wrapped in a <a>Just</a> data constructor. The range of
--   supported characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case a
--   character outside the range is passed to the function, <a>Nothing</a>
--   is returned.
frakturBold :: Char -> Maybe Char

-- | Obtain the fraktur symbol for the given character in a <i>bold</i>
--   style. The supported range of characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case the
--   character is not in this range, it is unspecified what will be
--   returned.
frakturBold' :: Char -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.DoubleStruck

-- | Obtain the double struck symbol for the given character. The supported
--   range of characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>), and the numerical
--   characters (<tt>0</tt>–<tt>9</tt>). The symbols are wrapped in the
--   <a>Just</a> data constructor. For characters outside the range,
--   <a>Nothing</a> is returned.
doubleStruck :: Char -> Maybe Char

-- | Obtain the double struck symbol for the given character. The supported
--   range of characters are the alphabet character (<tt>A</tt>–<tt>Z</tt>,
--   and <tt>a</tt>–<tt>z</tt>), and the numerical characters
--   (<tt>0</tt>–<tt>9</tt>). For characters other than these, the
--   behaviour is unspecified.
doubleStruck' :: Char -> Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>double-struck</i> style wrapped in a <a>Just</a> data
--   constructor. <a>Nothing</a> for characters outside the range.
digitDoubleStruck :: Char -> Maybe Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>double-struck</i> style. Unspecified result for
--   characters outside the range.
digitDoubleStruck' :: Char -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>double-struck</i> style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitDoubleStruck :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>double-struck</i> style. Unspecified result for
--   numbers outside this range.
intToDigitDoubleStruck' :: Int -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.Monospace

-- | Convert the given character to its <i>monospace</i> equivalent for the
--   alphabet and numerical range (<tt>A</tt>–<tt>Z</tt>,
--   <tt>a</tt>–<tt>z</tt>, and <tt>0</tt>–<tt>9</tt>) wrapped in a
--   <a>Just</a> data constructor. For characters outside the range,
--   <a>Nothing</a> is returned.
monospace :: Char -> Maybe Char

-- | Convert the given character to its <i>monospace</i> equivalent for the
--   alphabet and numerical range (<tt>A</tt>–<tt>Z</tt>,
--   <tt>a</tt>–<tt>z</tt>, and <tt>0</tt>–<tt>9</tt>). For characters
--   outside the range, the result is unspecified.
monospace' :: Char -> Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>monospace</i> style wrapped in a <a>Just</a> data
--   constructor. <a>Nothing</a> for characters outside the range.
digitMonospace :: Char -> Maybe Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>monospace</i> style. Unspecified result for
--   characters outside the range.
digitMonospace' :: Char -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>monospace</i> style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitMonospace :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>monospace</i> style. Unspecified result for numbers
--   outside this range.
intToDigitMonospace' :: Int -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.SansSerif.Digit

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with the given <a>Emphasis</a> in sans-serif
--   style wrapped in a <a>Just</a> data constructor. For characters
--   outside this range, <a>Nothing</a> is returned.
digitSansSerif :: Emphasis -> Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with a given <a>Emphasis</a> in sans-serif
--   style. The result for characters outside this range is unspecified.
digitSansSerif' :: Emphasis -> Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold sans-serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSansSerifRegular :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold sans-serif style. The result for
--   characters outside this range is unspecified.
digitSansSerifRegular' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold sans-serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSansSerifBold :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold sans-serif style. The result for
--   characters outside this range is unspecified.
digitSansSerifBold' :: Char -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with the given <a>Emphasis</a> in sans-serif style wrapped
--   in a <a>Just</a> data constructor. For numbers outside this range,
--   <a>Nothing</a> is returned.
intToDigitSansSerif :: Emphasis -> Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with a given <a>Emphasis</a> in sans-serif style. The result
--   for numbers outside this range is unspecified.
intToDigitSansSerif' :: Emphasis -> Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold sans-serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSansSerifRegular :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold sans-serif style. The result for numbers
--   outside this range is unspecified.
intToDigitSansSerifRegular' :: Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold sans-serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSansSerifBold :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold sans-serif style. The result for numbers outside
--   this range is unspecified.
intToDigitSansSerifBold' :: Int -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.SansSerif.Greek

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in the given <i>italics</i> type
--   wrapped in a <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and a given <i>italics</i> style. This
--   maps characters an equivalent sans-serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSansSerif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   not in <i>bold</i> and in a <i>italics</i> type. This maps characters
--   an equivalent sans-serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSansSerifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent sans-serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSansSerifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and not in italics. This maps characters
--   an equivalent sans-serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSansSerifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and in italics. This maps characters an
--   equivalent sans-serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSansSerifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and no <i>italics</i>. This maps characters to
--   itself wrapped in a <a>Just</a>; <a>Nothing</a> if that character does
--   not exists.
greekSansSerifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and no <i>italics</i>. This maps characters to
--   itself.
greekSansSerifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> not in <i>italics</i>. This maps characters an
--   equivalent sans-serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSansSerifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>.
--   If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and no <i>italics</i>. This maps characters to
--   itself.
greekSansSerifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSansSerifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with in <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent sans-serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSansSerifBoldItalic' :: Char -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.SansSerif.Latin

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in the given <i>italics</i> type
--   wrapped in a <a>Just</a>. If the character is outside the
--   <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a>
--   is returned.
latinSansSerif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and a given <i>italics</i> style. This
--   maps characters an equivalent sans-serif symbol for the
--   <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range. For characters
--   outside the range, the behavior is unspecified.
latinSansSerif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   not in <i>bold</i> and in a <i>italics</i> type. This maps characters
--   an equivalent sans-serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSansSerifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent sans-serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSansSerifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and not in italics. This maps characters
--   an equivalent sans-serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSansSerifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and in italics. This maps characters an
--   equivalent sans-serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSansSerifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>.
--   If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and no <i>italics</i>. This maps characters to
--   itself for the <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range.
--   For characters outside the range, the behavior is unspecified.
latinSansSerifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> not in <i>italics</i>. This maps characters an
--   equivalent sans-serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSansSerifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>.
--   If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent sans-serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSansSerifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSansSerifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with in <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent sans-serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSansSerifBoldItalic' :: Char -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.SansSerif

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in the given <i>italics</i> type
--   wrapped in a <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and a given <i>italics</i> style. If the
--   symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
sansSerif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   not in <i>bold</i> and in a <i>italics</i> type. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> and in a <i>italics</i> type. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and not in italics. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and in italics. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and no <i>italics</i>. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> not in <i>italics</i>. If the symbol is not supported
--   (see: <a>Data.Char.Math#characters_ranges</a>), the returned character
--   is unspecified.
sansSerifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and in <i>italics</i>. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with in <i>bold</i> and in <i>italics</i>. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifBoldItalic' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with the given <a>Emphasis</a> in sans-serif
--   style wrapped in a <a>Just</a> data constructor. For characters
--   outside this range, <a>Nothing</a> is returned.
digitSansSerif :: Emphasis -> Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with a given <a>Emphasis</a> in sans-serif
--   style. The result for characters outside this range is unspecified.
digitSansSerif' :: Emphasis -> Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold sans-serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSansSerifRegular :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold sans-serif style. The result for
--   characters outside this range is unspecified.
digitSansSerifRegular' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold sans-serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSansSerifBold :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold sans-serif style. The result for
--   characters outside this range is unspecified.
digitSansSerifBold' :: Char -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with the given <a>Emphasis</a> in sans-serif style wrapped
--   in a <a>Just</a> data constructor. For numbers outside this range,
--   <a>Nothing</a> is returned.
intToDigitSansSerif :: Emphasis -> Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with a given <a>Emphasis</a> in sans-serif style. The result
--   for numbers outside this range is unspecified.
intToDigitSansSerif' :: Emphasis -> Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold sans-serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSansSerifRegular :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold sans-serif style. The result for numbers
--   outside this range is unspecified.
intToDigitSansSerifRegular' :: Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold sans-serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSansSerifBold :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold sans-serif style. The result for numbers outside
--   this range is unspecified.
intToDigitSansSerifBold' :: Int -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.Script

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in the given <a>Emphasis</a> style.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
script :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in the given
--   <a>Emphasis</a> style. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
script' :: Emphasis -> Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in boldface. If the character is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>),
--   <a>Nothing</a> is returned.
scriptRegular :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is <i>not</i> written in
--   boldface. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
scriptRegular' :: Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is written in boldface. If the character is not supported
--   (see: <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is
--   returned.
scriptBold :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in boldface. If the
--   symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
scriptBold' :: Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in the given <a>Emphasis</a> style.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
--   This is an alias of <a>script</a>.
calligraphy :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in the given
--   <a>Emphasis</a> style. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified. This is an alias of <a>script'</a>.
calligraphy' :: Emphasis -> Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in boldface. If the character is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>),
--   <a>Nothing</a> is returned. This is an alias of <a>scriptRegular</a>.
calligraphyRegular :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is <i>not</i> written in
--   boldface. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified. This is an alias of <a>scriptRegular'</a>.
calligraphyRegular' :: Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is written in boldface. If the character is not supported
--   (see: <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is
--   returned. This is an alias of <a>scriptBold</a>.
calligraphyBold :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in boldface. If the
--   symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified. This is an alias of <a>scriptBold'</a>.
calligraphyBold' :: Char -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.Serif.Digit

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with the given <a>Emphasis</a> in serif style
--   wrapped in a <a>Just</a> data constructor. For characters outside this
--   range, <a>Nothing</a> is returned.
digitSerif :: Emphasis -> Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with a given <a>Emphasis</a> in serif style.
--   The result for characters outside this range is unspecified.
digitSerif' :: Emphasis -> Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSerifRegular :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold serif style. The result for
--   characters outside this range is unspecified.
digitSerifRegular' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold serif style wrapped in a <a>Just</a>
--   data constructor. For characters outside this range, <a>Nothing</a> is
--   returned.
digitSerifBold :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold serif style. The result for
--   characters outside this range is unspecified.
digitSerifBold' :: Char -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with the given <a>Emphasis</a> in serif style wrapped in a
--   <a>Just</a> data constructor. For numbers outside this range,
--   <a>Nothing</a> is returned.
intToDigitSerif :: Emphasis -> Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with a given <a>Emphasis</a> in serif style. The result for
--   numbers outside this range is unspecified.
intToDigitSerif' :: Emphasis -> Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSerifRegular :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold serif style. The result for numbers outside
--   this range is unspecified.
intToDigitSerifRegular' :: Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSerifBold :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold serif style. The result for numbers outside this
--   range is unspecified.
intToDigitSerifBold' :: Int -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.Serif.Greek

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and in the given <i>italics</i> type wrapped
--   in a <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and a given <i>italics</i> style. This maps
--   characters an equivalent serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, not
--   in <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and not in italics. This maps characters an
--   equivalent serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and in italics. This maps characters an
--   equivalent serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and no <i>italics</i>. This maps characters to itself.
greekSerifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> not in <i>italics</i>. This maps characters an equivalent
--   serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>,
--   <a>Nothing</a> is returned.
greekSerifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   in <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for the characters in
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ∇ϴαβγδεζηθικλμνξοπρςστυφχψω∂ϵϑϰϕϱϖ</tt>.
--   For characters outside the range, the behavior is unspecified.
greekSerifBoldItalic' :: Char -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.Serif.Latin

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and in the given <i>italics</i> type wrapped
--   in a <a>Just</a>. If the character is outside the
--   <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a>
--   is returned.
latinSerif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and a given <i>italics</i> style. This maps
--   characters an equivalent serif symbol for the <tt>A</tt>–<tt>Z</tt>
--   and <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSerif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, not
--   in <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSerifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSerifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and not in italics. This maps characters an
--   equivalent serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSerifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and in italics. This maps characters an
--   equivalent serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSerifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and no <i>italics</i>. This maps characters to itself
--   for the <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range. For
--   characters outside the range, the behavior is unspecified.
latinSerifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> not in <i>italics</i>. This maps characters an equivalent
--   serif symbol for the <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt>
--   range. For characters outside the range, the behavior is unspecified.
latinSerifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSerifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is outside the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range, <a>Nothing</a> is returned.
latinSerifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   in <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for the <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> range. For characters outside the range, the
--   behavior is unspecified.
latinSerifBoldItalic' :: Char -> Char


-- | See <a>Data.Char.Math</a> for further documentation.
module Data.Char.Math.Serif

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in the given <i>italics</i> type
--   wrapped in a <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and a given <i>italics</i> style. This maps
--   characters an equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, not
--   in <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and not in italics. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and in italics. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and no <i>italics</i>. This maps characters to itself
--   for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> not in <i>italics</i>. This maps characters an equivalent
--   serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   in <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifBoldItalic' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with the given <a>Emphasis</a> in serif style
--   wrapped in a <a>Just</a> data constructor. For characters outside this
--   range, <a>Nothing</a> is returned.
digitSerif :: Emphasis -> Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with a given <a>Emphasis</a> in serif style.
--   The result for characters outside this range is unspecified.
digitSerif' :: Emphasis -> Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSerifRegular :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold serif style. The result for
--   characters outside this range is unspecified.
digitSerifRegular' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold serif style wrapped in a <a>Just</a>
--   data constructor. For characters outside this range, <a>Nothing</a> is
--   returned.
digitSerifBold :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold serif style. The result for
--   characters outside this range is unspecified.
digitSerifBold' :: Char -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with the given <a>Emphasis</a> in serif style wrapped in a
--   <a>Just</a> data constructor. For numbers outside this range,
--   <a>Nothing</a> is returned.
intToDigitSerif :: Emphasis -> Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with a given <a>Emphasis</a> in serif style. The result for
--   numbers outside this range is unspecified.
intToDigitSerif' :: Emphasis -> Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSerifRegular :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold serif style. The result for numbers outside
--   this range is unspecified.
intToDigitSerifRegular' :: Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSerifBold :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold serif style. The result for numbers outside this
--   range is unspecified.
intToDigitSerifBold' :: Int -> Char


-- | <h1>Introduction</h1>
--   
--   This module aims to make it more convenient to transform mathematical
--   characters to their <i>double struck</i>, <i>fraktur</i>,
--   <i>calligraphic</i>, etc. equivalent.
--   
--   Most of the characters are defined in the <tt><a>1D400–1D7FF</a></tt>
--   Unicode block <i>Mathematical Alphanumeric Symbols</i>. See also the
--   <a>Wikipedia page</a>.
--   
--   <h2>Examples</h2>
--   
--   <pre>
--   &gt;&gt;&gt; math Serif Italic Bold 'x'
--   Just '\119961'
--   
--   &gt;&gt;&gt; math Serif Italic Bold '3'
--   Just '\120785'
--   
--   &gt;&gt;&gt; latinMath Serif Italic Bold 'x'
--   Just '\119961'
--   
--   &gt;&gt;&gt; latinMath Serif Italic Bold '3'
--   Nothing
--   
--   &gt;&gt;&gt; script NoBold 'S'
--   Just '\119982'
--   
--   &gt;&gt;&gt; intToDigitChar SansSerif Bold 3
--   Just '\120815'
--   
--   &gt;&gt;&gt; intToDigitChar SansSerif Bold 33
--   Nothing
--   </pre>
--   
--   <h2>Supported ranges of characters </h2>
--   
--   The transformations of this module only supports the following small
--   subset of Unicode points:
--   
--   <ul>
--   <li><i>ASCII latin letters</i> <tt>A</tt>–<tt>Z</tt> and
--   <tt>a</tt>–<tt>z</tt> ranges</li>
--   <li><i>Greek-like symbols</i> <ul><li>The following characters from
--   the Unicode block <a><i>Greek and Coptic</i></a>:
--   <tt>ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩϴαβγδεζηθικλμνξοπρςστυφχψωϵϑϰϕϱϖ</tt>.</li><li>The
--   following characters from the Unicode block <a><i>Mathematical
--   Operators</i></a>: <tt>∇∂</tt>.</li></ul></li>
--   <li><i>Digits</i> <tt>0</tt>–<tt>9</tt> range</li>
--   </ul>
--   
--   <h2>Naming Conventions</h2>
--   
--   The functions with a name finishing with a quote <tt>'</tt> (such as
--   <a>math'</a>) do not check their input: they transform the characters
--   in the supported range and have an <i>unspecified behaviour</i>
--   outside this range.
--   
--   The functions without a quote in their name (such as <a>math</a>)
--   check their input and output and wrap the resulting transformation
--   with <a>Maybe</a>.
module Data.Char.Math

-- | Convert the given character to a mathematical symbol with the given
--   <i>font</i> style, in the given <i>emphasis</i> and in the given
--   <i>italics</i> type wrapped in a <a>Just</a> if the character is
--   supported (see: <a>supported ranges</a>) If the character is outside
--   theses ranges, <a>Nothing</a> is returned.
math :: FontStyle -> ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with the given
--   <i>font</i> style, with a given <i>emphasis</i> and a given
--   <i>italics</i> style. This maps characters an equivalent sans-serif
--   symbol for characters in the <a>supported ranges</a>. For characters
--   outside the range, the behavior is unspecified.
math' :: FontStyle -> ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with the given
--   <i>font</i> style, in the given <i>emphasis</i> and in the given
--   <i>italics</i> type wrapped in a <a>Just</a>. If the character is
--   outside the <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range,
--   <a>Nothing</a> is returned.
latinMath :: FontStyle -> ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with the given
--   <i>font</i> style, in the given <i>emphasis</i> and in the given
--   <i>italics</i> type wrapped in a <a>Just</a>. If the character is
--   outside the <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range,
--   <a>Nothing</a> is returned.

-- | <i>Deprecated: Use <a>latinMath</a></i>
mathAlpha :: FontStyle -> ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with the given
--   <i>font</i> style, with a given <i>emphasis</i> and a given
--   <i>italics</i> style. This maps characters an equivalent sansSerif
--   symbol for the <tt>A</tt>–<tt>Z</tt> and <tt>a</tt>–<tt>z</tt> range.
--   For characters outside the range, the behavior is unspecified.

-- | <i>Deprecated: Use <a>math'</a></i>
mathAlpha' :: FontStyle -> ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in the given <i>italics</i> type
--   wrapped in a <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and a given <i>italics</i> style. This maps
--   characters an equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, not
--   in <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> and in a <i>italics</i> type. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and not in italics. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   a given <i>emphasis</i> and in italics. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and no <i>italics</i>. This maps characters to itself
--   for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i> not in <i>italics</i>. This maps characters an equivalent
--   serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   no <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol with serifs, in
--   <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
serifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol with serifs, with
--   in <i>bold</i> and in <i>italics</i>. This maps characters an
--   equivalent serif symbol for supported characters (see:
--   <a>Data.Char.Math#characters_ranges</a>). For characters outside the
--   range, the behavior is unspecified.
serifBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in the given <i>italics</i> type
--   wrapped in a <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerif :: ItalicType -> Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and a given <i>italics</i> style. If the
--   symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
sansSerif' :: ItalicType -> Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and in the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   not in <i>bold</i> and in a <i>italics</i> type. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> with the given <i>italics</i> type wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifBold :: ItalicType -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> and in a <i>italics</i> type. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifBold' :: ItalicType -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and not in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and not in italics. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in the given <i>emphasis</i> and in <i>italics</i> wrapped in a
--   <a>Just</a>. If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifItalic :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with a given <i>emphasis</i> and in italics. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifItalic' :: Emphasis -> Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and no <i>italics</i>. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and no <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifBoldNoItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i> not in <i>italics</i>. If the symbol is not supported
--   (see: <a>Data.Char.Math#characters_ranges</a>), the returned character
--   is unspecified.
sansSerifBoldNoItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifNoBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with no <i>bold</i> and in <i>italics</i>. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifNoBoldItalic' :: Char -> Char

-- | Convert the given character to a mathematical symbol without serifs,
--   in <i>bold</i>, and in <i>italics</i> wrapped in a <a>Just</a>. If the
--   character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
sansSerifBoldItalic :: Char -> Maybe Char

-- | Convert the given character to a mathematical symbol without serifs,
--   with in <i>bold</i> and in <i>italics</i>. If the symbol is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>), the returned
--   character is unspecified.
sansSerifBoldItalic' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with the given <a>Emphasis</a> in the given
--   <i>font</i> style wrapped in a <a>Just</a> data constructor. For
--   characters outside this range, <a>Nothing</a> is returned.
digit :: FontStyle -> Emphasis -> Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with a given <a>Emphasis</a> in the given
--   <i>font</i> style. The result for characters outside this range is
--   unspecified.
digit' :: FontStyle -> Emphasis -> Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with the given <a>Emphasis</a> in sans-serif
--   style wrapped in a <a>Just</a> data constructor. For characters
--   outside this range, <a>Nothing</a> is returned.
digitSansSerif :: Emphasis -> Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with a given <a>Emphasis</a> in sans-serif
--   style. The result for characters outside this range is unspecified.
digitSansSerif' :: Emphasis -> Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with the given <a>Emphasis</a> in serif style
--   wrapped in a <a>Just</a> data constructor. For characters outside this
--   range, <a>Nothing</a> is returned.
digitSerif :: Emphasis -> Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character with a given <a>Emphasis</a> in serif style.
--   The result for characters outside this range is unspecified.
digitSerif' :: Emphasis -> Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSerifRegular :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold serif style. The result for
--   characters outside this range is unspecified.
digitSerifRegular' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold serif style wrapped in a <a>Just</a>
--   data constructor. For characters outside this range, <a>Nothing</a> is
--   returned.
digitSerifBold :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold serif style. The result for
--   characters outside this range is unspecified.
digitSerifBold' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold sans-serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSansSerifRegular :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a non-bold sans-serif style. The result for
--   characters outside this range is unspecified.
digitSansSerifRegular' :: Char -> Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold sans-serif style wrapped in a
--   <a>Just</a> data constructor. For characters outside this range,
--   <a>Nothing</a> is returned.
digitSansSerifBold :: Char -> Maybe Char

-- | Convert the given digit character (<tt>0</tt>–<tt>9</tt>) to its
--   corresponding character in a bold sans-serif style. The result for
--   characters outside this range is unspecified.
digitSansSerifBold' :: Char -> Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>monospace</i> style wrapped in a <a>Just</a> data
--   constructor. <a>Nothing</a> for characters outside the range.
digitMonospace :: Char -> Maybe Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>monospace</i> style. Unspecified result for
--   characters outside the range.
digitMonospace' :: Char -> Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>double-struck</i> style wrapped in a <a>Just</a> data
--   constructor. <a>Nothing</a> for characters outside the range.
digitDoubleStruck :: Char -> Maybe Char

-- | Converts the given digit (<tt>0</tt>–<tt>9</tt>) charcters to its
--   equivalent in <i>double-struck</i> style. Unspecified result for
--   characters outside the range.
digitDoubleStruck' :: Char -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with the given <a>Emphasis</a> in the given <a>FontStyle</a>
--   wrapped in a <a>Just</a> data constructor. For numbers outside this
--   range, <a>Nothing</a> is returned.
intToDigitChar :: FontStyle -> Emphasis -> Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with a given <a>Emphasis</a> in the given <a>FontStyle</a>.
--   The result for numbers outside this range is unspecified.
intToDigitChar' :: FontStyle -> Emphasis -> Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with the given <a>Emphasis</a> in serif style wrapped in a
--   <a>Just</a> data constructor. For numbers outside this range,
--   <a>Nothing</a> is returned.
intToDigitSerif :: Emphasis -> Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with a given <a>Emphasis</a> in serif style. The result for
--   numbers outside this range is unspecified.
intToDigitSerif' :: Emphasis -> Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with the given <a>Emphasis</a> in sans-serif style wrapped
--   in a <a>Just</a> data constructor. For numbers outside this range,
--   <a>Nothing</a> is returned.
intToDigitSansSerif :: Emphasis -> Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character with a given <a>Emphasis</a> in sans-serif style. The result
--   for numbers outside this range is unspecified.
intToDigitSansSerif' :: Emphasis -> Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSerifRegular :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a non-bold serif style. The result for numbers outside
--   this range is unspecified.
intToDigitSerifRegular' :: Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold serif style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitSerifBold :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in a bold serif style. The result for numbers outside this
--   range is unspecified.
intToDigitSerifBold' :: Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>monospace</i> style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitMonospace :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>monospace</i> style. Unspecified result for numbers
--   outside this range.
intToDigitMonospace' :: Int -> Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>double-struck</i> style wrapped in a <a>Just</a> data
--   constructor. For numbers outside this range, <a>Nothing</a> is
--   returned.
intToDigitDoubleStruck :: Int -> Maybe Char

-- | Convert the given number (<tt>0</tt>–<tt>9</tt>) to its corresponding
--   character in <i>double-struck</i> style. Unspecified result for
--   numbers outside this range.
intToDigitDoubleStruck' :: Int -> Char

-- | Convert the given character to its <i>monospace</i> equivalent for the
--   alphabet and numerical range (<tt>A</tt>–<tt>Z</tt>,
--   <tt>a</tt>–<tt>z</tt>, and <tt>0</tt>–<tt>9</tt>) wrapped in a
--   <a>Just</a> data constructor. For characters outside the range,
--   <a>Nothing</a> is returned.
monospace :: Char -> Maybe Char

-- | Convert the given character to its <i>monospace</i> equivalent for the
--   alphabet and numerical range (<tt>A</tt>–<tt>Z</tt>,
--   <tt>a</tt>–<tt>z</tt>, and <tt>0</tt>–<tt>9</tt>). For characters
--   outside the range, the result is unspecified.
monospace' :: Char -> Char

-- | Obtain the double struck symbol for the given character. The supported
--   range of characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>), and the numerical
--   characters (<tt>0</tt>–<tt>9</tt>). The symbols are wrapped in the
--   <a>Just</a> data constructor. For characters outside the range,
--   <a>Nothing</a> is returned.
doubleStruck :: Char -> Maybe Char

-- | Obtain the double struck symbol for the given character. The supported
--   range of characters are the alphabet character (<tt>A</tt>–<tt>Z</tt>,
--   and <tt>a</tt>–<tt>z</tt>), and the numerical characters
--   (<tt>0</tt>–<tt>9</tt>). For characters other than these, the
--   behaviour is unspecified.
doubleStruck' :: Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in the given <a>Emphasis</a> style.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
script :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in the given
--   <a>Emphasis</a> style. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
script' :: Emphasis -> Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in boldface. If the character is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>),
--   <a>Nothing</a> is returned.
scriptRegular :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is <i>not</i> written in
--   boldface. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
scriptRegular' :: Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is written in boldface. If the character is not supported
--   (see: <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is
--   returned.
scriptBold :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in boldface. If the
--   symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified.
scriptBold' :: Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in the given <a>Emphasis</a> style.
--   If the character is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is returned.
--   This is an alias of <a>script</a>.
calligraphy :: Emphasis -> Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in the given
--   <a>Emphasis</a> style. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified. This is an alias of <a>script'</a>.
calligraphy' :: Emphasis -> Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is <i>not</i> written in boldface. If the character is not
--   supported (see: <a>Data.Char.Math#characters_ranges</a>),
--   <a>Nothing</a> is returned. This is an alias of <a>scriptRegular</a>.
calligraphyRegular :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is <i>not</i> written in
--   boldface. If the symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified. This is an alias of <a>scriptRegular'</a>.
calligraphyRegular' :: Char -> Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol wrapped in a <a>Just</a> data constructor.
--   This symbol is written in boldface. If the character is not supported
--   (see: <a>Data.Char.Math#characters_ranges</a>), <a>Nothing</a> is
--   returned. This is an alias of <a>scriptBold</a>.
calligraphyBold :: Char -> Maybe Char

-- | Convert the given character to its <i>script</i> or
--   <i>calligraphic</i> symbol. This symbol is written in boldface. If the
--   symbol is not supported (see:
--   <a>Data.Char.Math#characters_ranges</a>), the returned character is
--   unspecified. This is an alias of <a>scriptBold'</a>.
calligraphyBold' :: Char -> Char

-- | Obtain the fraktur symbol for the given character in the given emphais
--   style. The result is wrapped in a <a>Just</a> data constructor. The
--   range of supported characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case a
--   character outside the range is passed to the function, <a>Nothing</a>
--   is returned.
fraktur :: Emphasis -> Char -> Maybe Char

-- | Obtain the fraktur symbol for the given character in the given
--   emphasis style. The supported range of characters are the alphabet
--   characters (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case
--   the character is not in this range, it is unspecified what will be
--   returned.
fraktur' :: Emphasis -> Char -> Char

-- | Obtain the fraktur symbol for the given character in a regular (not
--   <i>bold</i> style). The result is wrapped in a <a>Just</a> data
--   constructor. The range of supported characters are the alphabet
--   characters (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case
--   a character outside the range is passed to the function,
--   <a>Nothing</a> is returned.
frakturRegular :: Char -> Maybe Char

-- | Obtain the fraktur symbol for the given character in a regular (not
--   <i>bold</i>) style. The supported range of characters are the alphabet
--   characters (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case
--   the character is not in this range, it is unspecified what will be
--   returned.
frakturRegular' :: Char -> Char

-- | Obtain the fraktur symbol for the given character in a <i>bold</i>.
--   The result is wrapped in a <a>Just</a> data constructor. The range of
--   supported characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case a
--   character outside the range is passed to the function, <a>Nothing</a>
--   is returned.
frakturBold :: Char -> Maybe Char

-- | Obtain the fraktur symbol for the given character in a <i>bold</i>
--   style. The supported range of characters are the alphabet characters
--   (<tt>A</tt>–<tt>Z</tt>, and <tt>a</tt>–<tt>z</tt>). In case the
--   character is not in this range, it is unspecified what will be
--   returned.
frakturBold' :: Char -> Char


-- | The <a>2150 unicode block</a> contains two characters for duodecimal
--   numbers: numbers with base 12.
--   
--   In order to represent digits for 10 and 11, unicode has two
--   codepoints: <tt>TURNED DIGIT TWO</tt>, and <tt>TURNED DIGIT
--   THREE</tt>. This module makes it more convenient to convert an
--   <a>Integral</a> number to these digits, as well as converting a number
--   to its duodecimal representation.
module Data.Char.Number.Duodecimal

-- | The character used to denote 10: <tt>ↀ</tt>.
char10 :: Char

-- | The character used to denote 11: <tt>ↁ</tt>.
char11 :: Char

-- | Convert the given <a>Integral</a> number to its unicode character
--   wrapped in a <a>Just</a> data constructor. In case the value is less
--   than <tt>0</tt> or greater than <tt>11</tt>, <a>Nothing</a> is
--   returned.
duodecimalDigit :: Integral i => i -> Maybe Char

-- | Convert the given <a>Integral</a> number to its unicode character. In
--   case the value is less than <tt>0</tt>, or greater than <tt>11</tt>,
--   the behavior is unspecified.
duodecimalDigit' :: Integral i => i -> Char

-- | Convert the given <a>Integral</a> number to a <a>Text</a> object that
--   contains a sequence of duodecimal digits that represent that number.
--   The given <a>PlusStyle</a> specifies if the number is prefixed with
--   <tt>+</tt> if it is positive.
duodecimalNumber :: Integral i => PlusStyle -> i -> Text

-- | Convert the given <a>Integral</a> number to a <a>Text</a> object that
--   contains sequence of duodecimal digits that represent that number.
duodecimalNumber' :: Integral i => i -> Text


-- | One can make use of a <a>block of Unicode characters</a> to typeset
--   ancient <i>Egyptian</i> hieroglyphs. This module aims to make it more
--   convenient to work with ancient Egyptian numerals.
--   
--   Ancient Egyptian numerals use a <i>sign-value system</i> with radix
--   10. This means that there are hieroglyphs for 1 to 9, for 10, 20, ...,
--   90, for 100, 200, ..., 900, etc. With the <i>heh</i> as largest value
--   denoting one million.
--   
--   In Egyptian numerals, one could write numbers left-to-right and
--   right-to-left (or even vertical). The human or animal figures always
--   point to the <i>beginning</i> of the line. Because in the Unicode
--   standard the <i>heh</i> (denoting one million) looks to the left, the
--   values are written left-to-right.
module Data.Char.Number.Egyptian

-- | The hieroglyph used as a <i>plus</i> sign. This character is used for
--   <i>addition</i>. This is hieroglyph D055.
plus :: Char

-- | The hieroglyph used as a <i>minus</i> sign. This character is used for
--   <i>subtraction</i>. This is hieroglyph D054.
minus :: Char

-- | The nfr character, an ancient Egyptian character to denote
--   <i>zero</i>, it also means <i>beautiful</i>. This is hieroglyph F035.
nfr :: Char

-- | The single stroke character, an ancient Egyptian character to denote
--   <i>one</i>. This is hieroglyph Z015.
singleStroke :: Char

-- | The cattle hobble character, an ancient Egyptian character to denote
--   <i>ten</i>. This is hieroglyph V020.
cattleHobble :: Char

-- | The coil of rope character, an ancient Egyptian character to denote
--   <i>hundred</i>. This is hieroglyph V001.
coilOfRope :: Char

-- | The water lily character, an ancient Egyptian character to denote
--   <i>thousand</i>. This is hieroglyph M012.
waterLily :: Char

-- | The bent finger character, an ancient Egyptian character to denote
--   <i>ten thousand</i>. This is hieroglyph B050.
bentFinger :: Char

-- | The tadpole character, an ancient Egyptian character to denote
--   <i>hundred thousand</i>. This is hieroglyph I008.
tadpole :: Char

-- | The heh character, an ancient Egyptian character to denote <i>one
--   million</i>, or <i>many</i>. This is hieroglyph C011.
heh :: Char

-- | The single stroke character, an ancient Egyptian character to denote
--   <i>one</i>. This is hieroglyph Z015.
singleStroke1 :: Char

-- | The double stroke character, an ancient Egyptian character to denote
--   <i>two</i>. This is hieroglyph Z015A.
singleStroke2 :: Char

-- | The triple stroke character, an ancient Egyptian character to denote
--   <i>three</i>. This is hieroglyph Z015B.
singleStroke3 :: Char

-- | The quadruple stroke character, an ancient Egyptian character to
--   denote <i>four</i>. This is hieroglyph Z015C.
singleStroke4 :: Char

-- | The quintuple stroke character, an ancient Egyptian character to
--   denote <i>five</i>. This is hieroglyph Z015D.
singleStroke5 :: Char

-- | The sextuple stroke character, an ancient Egyptian character to denote
--   <i>six</i>. This is hieroglyph Z015E.
singleStroke6 :: Char

-- | The septuple stroke character, an ancient Egyptian character to denote
--   <i>seven</i>. This is hieroglyph Z015F.
singleStroke7 :: Char

-- | The octuple stroke character, an ancient Egyptian character to denote
--   <i>eight</i>. This is hieroglyph Z015G.
singleStroke8 :: Char

-- | The nonuple stroke character, an ancient Egyptian character to denote
--   <i>nine</i>. This is hieroglyph Z015H.
singleStroke9 :: Char

-- | An alternative version of the quintuple stroke character, an ancient
--   Egyptian character to denote <i>five</i>. This is hieroglyph Z015I.
singleStroke5' :: Char

-- | The cattle hobble character, an ancient Egyptian character to denote
--   <i>ten</i>.
cattleHobble1 :: Char

-- | The two cattle hobble character, an ancient Egyptian character to
--   denote <i>twenty</i>.
cattleHobble2 :: Char

-- | The three cattle hobble character, an ancient Egyptian character to
--   denote <i>thirty</i>. This is hieroglyph V020B.
cattleHobble3 :: Char

-- | The four cattle hobble character, an ancient Egyptian character to
--   denote <i>forty</i>. This is hieroglyph V020C.
cattleHobble4 :: Char

-- | The five cattle hobble character, an ancient Egyptian character to
--   denote <i>fifty</i>.
cattleHobble5 :: Char

-- | The six cattle hobble character, an ancient Egyptian character to
--   denote <i>sixty</i>. This is hieroglyph V020E.
cattleHobble6 :: Char

-- | The seven cattle hobble character, an ancient Egyptian character to
--   denote <i>seventy</i>. This is hieroglyph V020F.
cattleHobble7 :: Char

-- | The eight cattle hobble character, an ancient Egyptian character to
--   denote <i>eighty</i>. This is hieroglyph V020G.
cattleHobble8 :: Char

-- | The nine cattle hobble character, an ancient Egyptian character to
--   denote <i>ninety</i>. This is hieroglyph V020H.
cattleHobble9 :: Char

-- | An alternative version of the two cattle hobble character, an ancient
--   Egyptian character to denote <i>twenty</i>. This is hieroglyph V020I.
cattleHobble2' :: Char

-- | An alternative version of the three cattle hobble character, an
--   ancient Egyptian character to denote <i>thirty</i>. This is hieroglyph
--   V020J.
cattleHobble3' :: Char

-- | An alternative version of the four cattle hobble character, an ancient
--   Egyptian character to denote <i>fourty</i>. This is hieroglyph V020K.
cattleHobble4' :: Char

-- | An alternative version of the five cattle hobble character, an ancient
--   Egyptian character to denote <i>fifty</i>. This is hieroglyph V020L.
cattleHobble5' :: Char

-- | The coil of rope character, an ancient Egyptian character to denote
--   <i>hundred</i>. This is hieroglyph V001.
coilOfRope1 :: Char

-- | The double coil of rope character, an ancient Egyptian character to
--   denote <i>two hundred</i>. This is hieroglyph V001A.
coilOfRope2 :: Char

-- | The tripple coil of rope character, an ancient Egyptian character to
--   denote <i>three hundred</i>. This is hieroglyph V001B.
coilOfRope3 :: Char

-- | The quadruple coil of rope character, an ancient Egyptian character to
--   denote <i>four hundred</i>. This is hieroglyph V001C.
coilOfRope4 :: Char

-- | The quintuple coil of rope character, an ancient Egyptian character to
--   denote <i>five hundred</i>. This is hieroglyph V001D.
coilOfRope5 :: Char

-- | The sextuple coil of rope character, an ancient Egyptian character to
--   denote <i>six hundred</i>. This is hieroglyph V001E.
coilOfRope6 :: Char

-- | The septuple coil of rope character, an ancient Egyptian character to
--   denote <i>seven hundred</i>. This is hieroglyph V001F.
coilOfRope7 :: Char

-- | The octuple coil of rope character, an ancient Egyptian character to
--   denote <i>eight hundred</i>. This is hieroglyph V001G.
coilOfRope8 :: Char

-- | The nonuple coil of rope character, an ancient Egyptian character to
--   denote <i>nine hundred</i>. This is hieroglyph V001H.
coilOfRope9 :: Char

-- | An alternative version of the quintuple coil of rope character, an
--   ancient Egyptian character to denote <i>five hundred</i>. This is
--   hieroglyph V001I.
coilOfRope5' :: Char

-- | The water lily character, an ancient Egyptian character to denote
--   <i>thousand</i>. This is hieroglyph M012.
waterLily1 :: Char

-- | The two water lilies character, an ancient Egyptian character to
--   denote <i>two thousand</i>. This is hieroglyph M012A.
waterLily2 :: Char

-- | The three water lilies character, an ancient Egyptian character to
--   denote <i>three thousand</i>. This is hieroglyph M012B.
waterLily3 :: Char

-- | The four water lilies character, an ancient Egyptian character to
--   denote <i>four thousand</i>. This is hieroglyph M012C.
waterLily4 :: Char

-- | The five water lilies character, an ancient Egyptian character to
--   denote <i>five thousand</i>. This is hieroglyph M012D.
waterLily5 :: Char

-- | The six water lilies character, an ancient Egyptian character to
--   denote <i>six thousand</i>. This is hieroglyph M012E.
waterLily6 :: Char

-- | The seven water lilies character, an ancient Egyptian character to
--   denote <i>seven thousand</i>. This is hieroglyph M012F.
waterLily7 :: Char

-- | The eight water lilies character, an ancient Egyptian character to
--   denote <i>eight thousand</i>. This is hieroglyph M012G.
waterLily8 :: Char

-- | The nine water lilies character, an ancient Egyptian character to
--   denote <i>nine thousand</i>. This is hieroglyph M012H.
waterLily9 :: Char

-- | The bent finger character, an ancient Egyptian character to denote
--   <i>ten thousand</i>. This is hieroglyph B050.
bentFinger1 :: Char

-- | The two bent fingers character, an ancient Egyptian character to
--   denote <i>twenty thousand</i>. This is hieroglyph B050A.
bentFinger2 :: Char

-- | The three bent fingers character, an ancient Egyptian character to
--   denote <i>thirty thousand</i>. This is hieroglyph B050B.
bentFinger3 :: Char

-- | The four bent fingers character, an ancient Egyptian character to
--   denote <i>fourty thousand</i>. This is hieroglyph B050C.
bentFinger4 :: Char

-- | The five bent fingers character, an ancient Egyptian character to
--   denote <i>fifty thousand</i>. This is hieroglyph B050D.
bentFinger5 :: Char

-- | The six bent fingers character, an ancient Egyptian character to
--   denote <i>sixty thousand</i>. This is hieroglyph B050E.
bentFinger6 :: Char

-- | The seven bent fingers character, an ancient Egyptian character to
--   denote <i>seventy thousand</i>. This is hieroglyph B050F.
bentFinger7 :: Char

-- | The eight bent fingers character, an ancient Egyptian character to
--   denote <i>eighty thousand</i>. This is hieroglyph B050G.
bentFinger8 :: Char

-- | The nine bent fingers character, an ancient Egyptian character to
--   denote <i>ninety thousand</i>. This is hieroglyph B050H.
bentFinger9 :: Char

-- | An alternative version of the five bent fingers character, an ancient
--   Egyptian character to denote <i>fifty thousand</i>. This is hieroglyph
--   B050I.
bentFinger5' :: Char

-- | Construct an ancient Egyptian numeral with the given <a>Ligate</a>
--   style and <a>PlusStyle</a> for the given number.
egyptianNumber :: Integral i => Ligate -> PlusStyle -> i -> Text

-- | Construct an acient Egyptian ligated numeral with the given
--   <a>PlusStyle</a> for the given number.
egyptianNumber' :: Integral i => PlusStyle -> i -> Text

-- | Construct an ancient Egyptian ligated numeral with the default
--   'PlusStyle.
egyptianNumber'' :: Integral i => i -> Text


-- | Unicode uses a <a>code block</a> for Mayan numerals. Mayan numerals
--   are written top to bottom, so vertically. This module aims to make it
--   more convenient to write Mayan numerals by offering functions to
--   convert numbers into a <a>Text</a> object for Mayan numbers. Mayan
--   numerals can <i>not</i> present <i>negative</i> numbers.
module Data.Char.Number.Mayan

-- | The Mayan numerals, as defined in the Unicode block.
data MayanLiteral

-- | The unicode character for the Mayan numeral <i>zero</i>: 𝋠.
Zero :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>one</i>: 𝋡.
One :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>two</i>: 𝋢.
Two :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>three</i>: 𝋣.
Three :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>four</i>: 𝋤.
Four :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>five</i>: 𝋥.
Five :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>six</i>: 𝋦.
Six :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>seven</i>: 𝋧.
Seven :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>eight</i>: 𝋨.
Eight :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>nine</i>: 𝋩.
Nine :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>ten</i>: 𝋪.
Ten :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>eleven</i>: 𝋫.
Eleven :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>twelve</i>: 𝋬.
Twelve :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>thirteen</i>: 𝋭.
Thirteen :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>fourteen</i>: 𝋮.
Fourteen :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>fifteen</i>: 𝋯.
Fifteen :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>sixteen</i>: 𝋰.
Sixteen :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>seventeen</i>: 𝋱.
Seventeen :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>eighteen</i>: 𝋲.
Eighteen :: MayanLiteral

-- | The unicode character for the Mayan numeral <i>nineteen</i>: 𝋳.
Nineteen :: MayanLiteral

-- | Convert the given <a>Integral</a> number to a <a>Text</a> object that
--   writes the Mayan number to to bottom. This function will return a
--   <a>Nothing</a> in case the number is negative (since it can not be
--   presented in Mayan).
toMayanVertical :: Integral i => i -> Maybe Text

-- | Convert the given <a>Integral</a> number to a <a>Text</a> object that
--   writes the Mayan number to to bottom.
toMayanVertical' :: Integral i => i -> Text

-- | Convert the given <a>Integral</a> number to a <a>String</a> object
--   that writes the Mayan number to to bottom.
toMayanVertical'' :: Integral i => i -> String

-- | Convert the given <a>Integral</a> number to a <a>Text</a> object that
--   writes the Mayan number from left-to-right. The object is wrapped in a
--   <a>Just</a> data constructor. If the number is negative, and thus can
--   not be represented, <a>Nothing</a> is returned.
toMayan :: Integral i => i -> Maybe Text

-- | Convert the given <a>Integral</a> number to a <a>Text</a> object that
--   writes the Mayan number from left-to-right.
toMayan' :: Integral i => i -> Text

-- | Convert the given <a>Integral</a> number to a <a>String</a> object
--   that writes the Mayan number from left-to-right.
toMayan'' :: Integral i => i -> String
instance GHC.Show.Show Data.Char.Number.Mayan.MayanLiteral
instance GHC.Read.Read Data.Char.Number.Mayan.MayanLiteral
instance GHC.Classes.Ord Data.Char.Number.Mayan.MayanLiteral
instance GHC.Generics.Generic Data.Char.Number.Mayan.MayanLiteral
instance GHC.Classes.Eq Data.Char.Number.Mayan.MayanLiteral
instance GHC.Enum.Enum Data.Char.Number.Mayan.MayanLiteral
instance Data.Data.Data Data.Char.Number.Mayan.MayanLiteral
instance GHC.Enum.Bounded Data.Char.Number.Mayan.MayanLiteral
instance Control.DeepSeq.NFData Data.Char.Number.Mayan.MayanLiteral
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Number.Mayan.MayanLiteral
instance Data.Hashable.Class.Hashable Data.Char.Number.Mayan.MayanLiteral
instance Data.Char.Core.UnicodeCharacter Data.Char.Number.Mayan.MayanLiteral
instance Data.Char.Core.UnicodeText Data.Char.Number.Mayan.MayanLiteral


-- | This module aims to convert Roman numerals to a String of unicode
--   characters that represent the corresponding Roman number.
--   
--   One can convert numbers to Roman numerals in upper case and lower
--   case, and in <a>Additive</a> and <a>Subtractive</a> style.
module Data.Char.Number.Roman

-- | Roman numerals for which a unicode character exists.
data RomanLiteral

-- | The unicode character for the Roman numeral <i>one</i>: Ⅰ.
I :: RomanLiteral

-- | The unicode character for the Roman numeral <i>two</i>: Ⅱ.
II :: RomanLiteral

-- | The unicode character for the Roman numeral <i>three</i>: Ⅲ.
III :: RomanLiteral

-- | The unicode character for the Roman numeral <i>four</i>: Ⅳ.
IV :: RomanLiteral

-- | The unicode character for the Roman numeral <i>five</i>: Ⅴ.
V :: RomanLiteral

-- | The unicode character for the Roman numeral <i>six</i>: Ⅵ.
VI :: RomanLiteral

-- | The unicode character for the Roman numeral <i>seven</i>: Ⅶ.
VII :: RomanLiteral

-- | The unicode character for the Roman numeral <i>eight</i>: Ⅷ.
VIII :: RomanLiteral

-- | The unicode character for the Roman numeral <i>nine</i>: Ⅸ.
IX :: RomanLiteral

-- | The unicode character for the Roman numeral <i>ten</i>: Ⅹ.
X :: RomanLiteral

-- | The unicode character for the Roman numeral <i>eleven</i>: Ⅺ.
XI :: RomanLiteral

-- | The unicode character for the Roman numeral <i>twelve</i>: Ⅻ.
XII :: RomanLiteral

-- | The unicode character for the Roman numeral <i>fifty</i>: Ⅼ.
L :: RomanLiteral

-- | The unicode character for the Roman numeral <i>hundred</i>: Ⅽ.
C :: RomanLiteral

-- | The unicode character for the Roman numeral <i>five hundred</i>: Ⅾ.
D :: RomanLiteral

-- | The unicode character for the Roman numeral <i>thousand</i>: Ⅿ.
M :: RomanLiteral

-- | The style to convert a number to a Roman numeral. The
--   <a>UnicodeCharacter</a> instance maps on the uppercase Roman literals.
data RomanStyle

-- | The additive style converts four to ⅠⅠⅠⅠ.
Additive :: RomanStyle

-- | The subtractive style converts four to ⅠⅤ.
Subtractive :: RomanStyle

-- | Convert the given number with the given <a>RomanStyle</a> and
--   <a>Ligate</a> style to a sequence of <a>RomanLiteral</a>s, given the
--   number can be represented with Roman numerals (is strictly larger than
--   zero).
toLiterals :: Integral i => RomanStyle -> Ligate -> i -> Maybe [RomanLiteral]

-- | Convert the given <a>RomanLiteral</a> object to a unicode character in
--   <i>upper case</i>.
romanLiteral :: RomanLiteral -> Char

-- | Convert the given <a>RomanLiteral</a> object to a unicode character in
--   <i>lower case</i>.
romanLiteral' :: RomanLiteral -> Char

-- | Convert a sequence of <a>RomanLiteral</a> objects to a <a>Text</a>
--   object that contains a sequence of corresponding Unicode characters
--   which are Roman numberals in <i>upper case</i>.
romanNumeral :: [RomanLiteral] -> Text

-- | Convert a sequence of <a>RomanLiteral</a> objects to a <a>Text</a>
--   object that contains a sequence of corresponding Unicode characters
--   which are Roman numberals in <i>lower case</i>.
romanNumeral' :: [RomanLiteral] -> Text

-- | Convert a sequence of <a>RomanLiteral</a> objects to a <a>Text</a>
--   object that contains a sequence of corresponding Unicode characters
--   which are Roman numberals in <i>upper case</i> or <i>lower case</i>
--   depending on the <a>LetterCase</a> value.
romanNumeralCase :: LetterCase -> [RomanLiteral] -> Text

-- | Convert a given number to a <a>Text</a> wrapped in a <a>Just</a> data
--   constructor, given the number, given it can be represented.
--   <a>Nothing</a> in case it can not be represented. The number is
--   written in Roman numerals in <i>upper case</i>.
romanNumber :: Integral i => RomanStyle -> Ligate -> i -> Maybe Text

-- | Convert a given number to a <a>Text</a> wrapped in a <a>Just</a> data
--   constructor, given the number, given it can be represented.
--   <a>Nothing</a> in case it can not be represented. The number is
--   written in Roman numerals in <i>lower case</i>.
romanNumber' :: Integral i => RomanStyle -> Ligate -> i -> Maybe Text

-- | Convert a given number to a <a>Text</a> wrapped in a <a>Just</a> data
--   constructor, given the number, given it can be represented.
--   <a>Nothing</a> in case it can not be represented. The number is
--   written in Roman numerals in <i>upper case</i> or <i>lower case</i>
--   depending on the <a>LetterCase</a> value.
romanNumberCase :: Integral i => LetterCase -> RomanStyle -> Ligate -> i -> Maybe Text
instance GHC.Show.Show Data.Char.Number.Roman.RomanStyle
instance GHC.Read.Read Data.Char.Number.Roman.RomanStyle
instance GHC.Classes.Ord Data.Char.Number.Roman.RomanStyle
instance GHC.Generics.Generic Data.Char.Number.Roman.RomanStyle
instance GHC.Classes.Eq Data.Char.Number.Roman.RomanStyle
instance GHC.Enum.Enum Data.Char.Number.Roman.RomanStyle
instance Data.Data.Data Data.Char.Number.Roman.RomanStyle
instance GHC.Enum.Bounded Data.Char.Number.Roman.RomanStyle
instance GHC.Read.Read Data.Char.Number.Roman.RomanLiteral
instance GHC.Show.Show Data.Char.Number.Roman.RomanLiteral
instance GHC.Generics.Generic Data.Char.Number.Roman.RomanLiteral
instance GHC.Classes.Eq Data.Char.Number.Roman.RomanLiteral
instance GHC.Enum.Enum Data.Char.Number.Roman.RomanLiteral
instance Data.Data.Data Data.Char.Number.Roman.RomanLiteral
instance GHC.Enum.Bounded Data.Char.Number.Roman.RomanLiteral
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Number.Roman.RomanLiteral
instance Data.Char.Core.UnicodeCharacter Data.Char.Number.Roman.RomanLiteral
instance Data.Char.Core.UnicodeText Data.Char.Number.Roman.RomanLiteral
instance Data.Hashable.Class.Hashable Data.Char.Number.Roman.RomanLiteral
instance Control.DeepSeq.NFData Data.Char.Number.Roman.RomanLiteral
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Number.Roman.RomanStyle
instance Data.Default.Class.Default Data.Char.Number.Roman.RomanStyle
instance Data.Hashable.Class.Hashable Data.Char.Number.Roman.RomanStyle
instance Control.DeepSeq.NFData Data.Char.Number.Roman.RomanStyle


-- | The <a>1FB00 Unicode block</a> contains symbols for legacy computing
--   and among them segmented digits: 🯰🯲🯳🯴🯵🯶🯷🯸🯹
module Data.Char.Number.Segmented

-- | Convert the given <a>Integral</a> number to its Unicode character
--   wrapped in a <a>Just</a> data constructor. In case the value is less
--   than <tt>0</tt> or greater than <tt>9</tt>, <a>Nothing</a> is
--   returned.
segmentedDigit :: Integral i => i -> Maybe Char

-- | Convert the given <a>Integral</a> number to its Unicode character. In
--   case the value is less than <tt>0</tt>, or greater than <tt>9</tt>,
--   the behavior is unspecified.
segmentedDigit' :: Integral i => i -> Char


-- | This module aims to convert numbers to (Western) tally marks and vice
--   versa.
module Data.Char.Number.Tally

-- | A tally literal that is either a one (𝍷), or five grouped together
--   (𝍸).
data TallyLiteral

-- | The unicode character for the tally numeral <i>one</i>: 𝍷.
I :: TallyLiteral

-- | The unicode character for the tally numeral <i>five</i>: 𝍸.
V :: TallyLiteral

-- | Convert a given <i>positive</i> natural number to a sequence of
--   <a>TallyLiteral</a>s.
toLiterals :: Integral i => i -> Maybe [TallyLiteral]

-- | Convert a given number to a sequence of <a>TallyLiteral</a>s, for
--   negative numbers or zero, the behavior is unspecified.
toLiterals' :: Integral i => i -> [TallyLiteral]

-- | Convert a given <i>positive</i> natural number to a <a>Text</a> object
--   with the tally marks for that number.
tallyNumber :: Integral i => i -> Maybe Text

-- | Convert a given number to a <a>Text</a> object with the tally marks
--   for that number, for negative numbers or zero, the behavior is
--   unspecified.
tallyNumber' :: Integral i => i -> Text
instance GHC.Read.Read Data.Char.Number.Tally.TallyLiteral
instance GHC.Show.Show Data.Char.Number.Tally.TallyLiteral
instance GHC.Generics.Generic Data.Char.Number.Tally.TallyLiteral
instance GHC.Classes.Eq Data.Char.Number.Tally.TallyLiteral
instance GHC.Enum.Enum Data.Char.Number.Tally.TallyLiteral
instance Data.Data.Data Data.Char.Number.Tally.TallyLiteral
instance GHC.Enum.Bounded Data.Char.Number.Tally.TallyLiteral
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Number.Tally.TallyLiteral
instance Data.Char.Core.UnicodeCharacter Data.Char.Number.Tally.TallyLiteral
instance Data.Char.Core.UnicodeText Data.Char.Number.Tally.TallyLiteral
instance Data.Hashable.Class.Hashable Data.Char.Number.Tally.TallyLiteral
instance Control.DeepSeq.NFData Data.Char.Number.Tally.TallyLiteral


-- | Unicode has a <a>block</a> named <i>Private Use Area</i> that can be
--   used for all sorts of characters, and each font can decide to allocate
--   certain characters for this block. In the submodules, popular usages
--   are supoorted.
module Data.Char.Private

-- | The first character in the <i>private use area</i>.
privateStart :: Char

-- | The last character in the <i>private use area</i>.
privateStop :: Char

-- | Checks if the given <a>Char</a> is in the <i>private use area</i>.
isPrivateChar :: Char -> Bool

-- | A generator of <a>Char</a>acters in the <i>private use area</i>.
privateCharGen :: Gen Char


-- | Some fonts implement the <i>Klingon script</i> characters with the
--   <i>private usage area</i>. <a>Wikipedia</a> describes the different
--   fonts and <a>Evertype</a> provides a font to typeset Klingon script.
module Data.Char.Private.Klingon

-- | A datatype to represent the Klingon characters, and their mapping to a
--   Klingon font.
data Klingon

-- | The <tt>a</tt> character in Klingon script.
A :: Klingon

-- | The <tt>b</tt> character in Klingon script.
B :: Klingon

-- | The <tt>ch</tt> character in Klingon script.
Ch :: Klingon

-- | The <tt>D</tt> character in Klingon script.
D :: Klingon

-- | The <tt>e</tt> character in Klingon script.
E :: Klingon

-- | The <tt>gh</tt> character in Klingon script.
Gh :: Klingon

-- | The <tt>H</tt> character in Klingon script.
H :: Klingon

-- | The <tt>I</tt> character in Klingon script.
I :: Klingon

-- | The <tt>j</tt> character in Klingon script.
J :: Klingon

-- | The <tt>l</tt> character in Klingon script.
L :: Klingon

-- | The <tt>m</tt> character in Klingon script.
M :: Klingon

-- | The <tt>n</tt> character in Klingon script.
N :: Klingon

-- | The <tt>ng</tt> character in Klingon script.
Ng :: Klingon

-- | The <tt>o</tt> character in Klingon script.
O :: Klingon

-- | The <tt>p</tt> character in Klingon script.
P :: Klingon

-- | The <tt>q</tt> character in Klingon script.
Q :: Klingon

-- | The <tt>Q</tt> character in Klingon script.
QUpper :: Klingon

-- | The <tt>r</tt> character in Klingon script.
R :: Klingon

-- | The <tt>S</tt> character in Klingon script.
S :: Klingon

-- | The <tt>t</tt> character in Klingon script.
T :: Klingon

-- | The <tt>tlh</tt> character in Klingon script.
Tlh :: Klingon

-- | The <tt>u</tt> character in Klingon script.
U :: Klingon

-- | The <tt>v</tt> character in Klingon script.
V :: Klingon

-- | The <tt>w</tt> character in Klingon script.
W :: Klingon

-- | The <tt>y</tt> character in Klingon script.
Y :: Klingon

-- | The <tt>ʼ</tt> character in Klingon script, denoting the <i>glottal
--   stop</i>.
GlottalStop :: Klingon

-- | The <tt>0</tt> character in Klingon script.
Zero :: Klingon

-- | The <tt>1</tt> character in Klingon script.
One :: Klingon

-- | The <tt>2</tt> character in Klingon script.
Two :: Klingon

-- | The <tt>3</tt> character in Klingon script.
Three :: Klingon

-- | The <tt>4</tt> character in Klingon script.
Four :: Klingon

-- | The <tt>5</tt> character in Klingon script.
Five :: Klingon

-- | The <tt>6</tt> character in Klingon script.
Six :: Klingon

-- | The <tt>7</tt> character in Klingon script.
Seven :: Klingon

-- | The <tt>8</tt> character in Klingon script.
Eight :: Klingon

-- | The <tt>9</tt> character in Klingon script.
Nine :: Klingon

-- | The <i>comma</i> character in Klingon script, denoted by an
--   <i>up-turned triangle</i>.
Comma :: Klingon

-- | The <i>full stop</i> character in Klingon script, denoted by a
--   <i>down-turned triangle</i>.
FullStop :: Klingon

-- | The <i>mummification</i> character in Klingon script, also known as
--   the <i>klingon character for the empire</i> or <i>heart of virtue</i>.
Mummification :: Klingon
instance GHC.Show.Show Data.Char.Private.Klingon.Klingon
instance GHC.Read.Read Data.Char.Private.Klingon.Klingon
instance GHC.Classes.Ord Data.Char.Private.Klingon.Klingon
instance GHC.Generics.Generic Data.Char.Private.Klingon.Klingon
instance GHC.Classes.Eq Data.Char.Private.Klingon.Klingon
instance GHC.Enum.Enum Data.Char.Private.Klingon.Klingon
instance Data.Data.Data Data.Char.Private.Klingon.Klingon
instance GHC.Enum.Bounded Data.Char.Private.Klingon.Klingon
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Char.Private.Klingon.Klingon
instance Data.Hashable.Class.Hashable Data.Char.Private.Klingon.Klingon
instance Control.DeepSeq.NFData Data.Char.Private.Klingon.Klingon
instance Data.Char.Core.UnicodeCharacter Data.Char.Private.Klingon.Klingon
instance Data.Char.Core.UnicodeText Data.Char.Private.Klingon.Klingon


-- | One can make use of a <a>block of Unicode characters</a> to
--   <i>emulate</i> subscript and superscript. Note that the subscript and
--   superscript will be aligned with the <i>baseline</i> and the <i>cap
--   line</i> respectively, and is thus not equivalent to
--   <tt><a>sub</a>...<a>/sub</a></tt> and
--   <tt><a>sup</a>...<a>/sup</a></tt> in HTML. Furthermore only a small
--   subset of characters is supported.
--   
--   This module allows one to map certain characters to their subscript
--   and superscript counterpart, and furthermore makes it more convenient
--   to transform a number (both positive and negative) to a <a>Text</a>
--   that specifies this number in subscript and superscript.
module Data.Char.Small

-- | Convert a set of characters to their subscript counterpart, given that
--   characters exists.
toSub :: Char -> Maybe Char

-- | Convert a set of characters to their superscript counterpart, given
--   that characters exists.
toSup :: Char -> Maybe Char

-- | Convert subscripts and superscripts back to the original counterpart,
--   so <tt>'⁵'</tt> back to <tt>'5'</tt>. For non-subscript or
--   -superscript characters, it returns the original character.
fromSubSup :: Char -> Char

-- | Convert a number (positive or negative) to a <a>Text</a> object that
--   denotes that number in subscript characters.
asSub :: Integral i => PlusStyle -> i -> Text

-- | Convert a number (positive or negative) to a <a>Text</a> that
--   specifies that number in subscript characters.
asSub' :: Integral i => i -> Text

-- | Convert a number (positive or negative) to a <a>Text</a> that
--   specifies that number in subscript characters. For positive
--   characters, the subscript contains a plus character (<tt>₊</tt>).
asSubPlus :: Integral i => i -> Text

-- | Convert a number (positive or negative) to a <a>Text</a> object that
--   denotes that number in superscript characters.
asSup :: Integral i => PlusStyle -> i -> Text

-- | Convert a number (positive or negative) to a <a>Text</a> object that
--   denotes that number in superscript characters.
asSup' :: Integral i => i -> Text

-- | Convert a number (positive or negative) to a <a>Text</a> that
--   specifies that number in superscript characters. For positive
--   characters, the superscript contains a plus character (<tt>⁺</tt>).
asSupPlus :: Integral i => i -> Text

-- | Convert the given <a>Ratio</a> object to a sequence of characters with
--   the numerator in superscript and the denominator in subscript. The
--   given <a>PlusStyle</a> is applied to the numerator.
ratioToUnicode :: Integral i => PlusStyle -> Ratio i -> Text

-- | Format a given <a>Ratio</a> object to a <a>Text</a> value that formats
--   the ratio with superscript and subscript using the <a>Default</a>
--   <a>PlusStyle</a>.
ratioToUnicode' :: Integral i => Ratio i -> Text

-- | Converting the given numerator and denominator to a fraction where the
--   numerator is written in superscript, and the denominator in subscript.
--   If the denominator is negative, the item is rendered with a minus at
--   the numerator part.
ratioPartsToUnicode :: (Integral i, Integral j) => PlusStyle -> i -> j -> Text

-- | Converting the given numerator and denominator to a fraction where the
--   numerator is written in superscript, and the denominator in subscript.
--   If the denominator is negative, the item is rendered with a minus at
--   the numerator part.
ratioPartsToUnicode' :: (Integral i, Integral j) => i -> j -> Text

-- | Try to convert the given text that contains a fraction to a
--   <a>Ratio</a>. This does *not* take <i>vulgar fractions</i> into
--   account. You can process these with <a>fromVulgarFallbackToRatio</a>.
unicodeToRatio :: (Integral i, Read i) => Text -> Maybe (Ratio i)

-- | Try to convert the given text that contains a fraction to the
--   numerator and denominator. This does *not* take <i>vulgar
--   fractions</i> into account. You can process these with
--   <a>fromVulgarFallback</a>.
unicodeToRatioParts :: (Read i, Read j) => Text -> Maybe (i, j)


-- | Uncode has two blocks where vulgar fractions are defined: <a>C1
--   controls and latin supplement 1</a> and <a>Number forms</a>. These are
--   fractions that are commenly used.
--   
--   The module exports function <a>toVulgar</a> and <a>ratioToVulgar</a>
--   to convert the ratio to a <a>Char</a> with that fraction if that
--   exists. The functon <a>ratioToVulgarFallback</a> and
--   <a>ratioToVulgarFallback</a> are used to try to find a vulgar fraction
--   character, and if that fails, it prints the fraction with the help of
--   the <a>Small</a> module.
module Data.Char.Number.VulgarFraction

-- | Convert the given <a>Ratio</a> item to a vulgar fraction character, if
--   such character exists; <a>Nothing</a> otherwise.
ratioToVulgar :: Integral i => Ratio i -> Maybe Char

-- | Convert the given <i>numerator</i> den <i>denominator</i> to a vulgar
--   fraction character, if such character exists; <a>Nothing</a>
--   otherwise.
toVulgar :: (Integral i, Integral j) => i -> j -> Maybe Char

-- | Try to convert a given <a>Char</a>, if it is a <i>vulgar fraction</i>,
--   to a 2-tuple with the numerator and denominator. Returns
--   <a>Nothing</a> if the <a>Char</a> is not a vulgar fraction character.
fromVulgar :: (Integral i, Integral j) => Char -> Maybe (i, j)

-- | Try to convert the given <a>Char</a>, if it is a <i>vulgar
--   fraction</i>, to a <a>Ratio</a> object. Returns <a>Nothing</a> if the
--   <a>Char</a> is not a vulgar fraction character.
fromVulgarToRatio :: Integral i => Char -> Maybe (Ratio i)

-- | Convert the given <a>Ratio</a> to a singleton <a>Text</a> with the
--   vulgar fraction character, if such character exists; it will make ue
--   of the <a>ratioPartsToUnicode'</a> to generate a <a>Text</a> object
--   (with multiple <a>Char</a>acters) that looks like a fraction.
ratioToVulgarFallback :: Integral i => Ratio i -> Text

-- | Convert the given numerator and denominator to a singleton <a>Text</a>
--   with the vulgar fraction character, if such character exists; it will
--   make ue of the <a>ratioPartsToUnicode'</a> to generate a <a>Text</a>
--   object (with multiple <a>Char</a>acters) that looks like a fraction.
toVulgarFallback :: (Integral i, Integral j) => i -> j -> Text

-- | Try to parse the text as a <i>vulgar fraction</i> and fallback on the
--   <a>unicodeToRatioParts</a> function to parse it as a fraction.
fromVulgarFallback :: (Read i, Integral i, Read j, Integral j) => Text -> Maybe (i, j)

-- | Try to parse the text as a <i>vulgar fraction</i> and fallback on the
--   <a>unicodeToRatioParts</a> function to parse it as a fraction.
fromVulgarFallbackToRatio :: (Read i, Integral i) => Text -> Maybe (Ratio i)


-- | Unicode has a <i>tags</i> block. This is used to make hidden
--   annotations to specify the language of the text, this is no longer
--   recommended. Since then this Unicode block has been repurposed as
--   modifiers for region flag emoji. These are used for example in the
--   flag of Scotland with
--   <tt>"\x1f3f4\xe0067\xe0062\xe0073\xe0063\xe0074\xe007f"</tt> where the
--   first character is the emoji of a black flag, the following two
--   characters are tags for <tt>g</tt>, and <tt>b</tt> to present <i>Great
--   Brittain</i>, then the following three characters are used to specify
--   the region where <tt>s</tt>, <tt>c</tt> and <tt>t</tt> are used to
--   specify <i>Scotland</i> and finally the <i>stateful tag terminator</i>
--   to end the Emoji sequence.

-- | <i>Warning: Using tags to convey language tags is strongly discouraged
--   by the Unicode developers.</i>
module Data.Char.Tag

-- | Check if the given <a>Char</a> is a <i>tag</i>.
isTag :: Char -> Bool

-- | Check if the given item is a tag for a visible ASCII character.
isAsciiTag :: Char -> Bool

-- | Check if the given <a>Char</a>acter has a tag counterpart. This is
--   only the case for visible ASCII characters.
hasTagCounterPart :: Char -> Bool

-- | Convert the given <a>Char</a> to a <i>tag</i> wrapped in a <a>Just</a>
--   data constructor. if there is no tag for the given <a>Char</a>, it
--   returns <a>Nothing</a>.
toTag :: Char -> Maybe Char

-- | Try to convert the given string of characters, to a string of tag
--   characters. If one of the conversions failed, <a>Nothing</a> is
--   returned.
toTags :: String -> Maybe String

-- | Convert the given <a>Char</a>acter to the corresponding <i>tag</i>
--   character. If the given character has no tag counterpart, it is
--   unspecified what will happen.
toTag' :: Char -> Char

-- | Convert the given string of <a>Char</a>acters to a string of
--   corresponding tag characters. If a <a>Char</a>acter has no
--   corresponding <i>tag</i> <a>Char</a>acter, the behavior is
--   unspecified.
toTags' :: String -> String

-- | Convert the given tag <a>Char</a>acter to its visible ASCII
--   counterpart wrapped in a <a>Just</a> data constructor. If there is no
--   such counterpart, <a>Nothing</a> is returned.
fromTag :: Char -> Maybe Char

-- | Convert the given tag <a>Char</a>acter to its visible ASCII
--   counterpart. If the given <a>Char</a>acter has no such counterpart,
--   the behavior is unspecified.
fromTag' :: Char -> Char

-- | Convert the given string of tag <a>Char</a>acters to the visible ASCII
--   counterparts wrapped in a <a>Just</a> data constructor. If there is a
--   <a>Char</a> in the given <a>String</a> that has no such counterpart,
--   <a>Nothing</a> is returned.
fromTags :: String -> Maybe String

-- | Convert the given <a>String</a> of tags to the corresponding string of
--   visible ASCII characters. If at least one of the given
--   <a>Char</a>acters has no visible ASCII counterpart, the behavior is
--   unspecified.
fromTags' :: String -> String

-- | A <a>Char</a>acter that specfies the beginning of the language
--   specification of the text. Since tags should no longer be used to
--   specify languages, this character is deprecated.
languageTag :: Char

-- | A tag <i>Char</i>acter that specifies the end of the sequence of
--   modifiers.
cancelTag :: Char
